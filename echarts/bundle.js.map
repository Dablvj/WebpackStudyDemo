{"version":3,"sources":["webpack:///webpack/bootstrap 75cab1ced92680605b7a","webpack:///./entry.js","webpack:///./~/echarts/src/echarts.js","webpack:///./~/echarts/src/chart.js","webpack:///./~/echarts/src/config.js","webpack:///./~/zrender/src/tool/util.js","webpack:///./~/zrender/src/dep/excanvas.js","webpack:///./~/zrender/src/tool/event.js","webpack:///./~/zrender/src/mixin/Eventful.js","webpack:///./~/zrender/src/tool/env.js","webpack:///./~/zrender/src/zrender.js","webpack:///./~/zrender/src/tool/log.js","webpack:///./~/zrender/src/config.js","webpack:///./~/zrender/src/tool/guid.js","webpack:///./~/zrender/src/Handler.js","webpack:///./~/zrender/src/tool/vector.js","webpack:///./~/zrender/src/tool/matrix.js","webpack:///./~/zrender/src/Painter.js","webpack:///./~/zrender/src/loadingEffect/Base.js","webpack:///./~/zrender/src/shape/Text.js","webpack:///./~/zrender/src/tool/area.js","webpack:///./~/zrender/src/tool/curve.js","webpack:///./~/zrender/src/shape/Base.js","webpack:///./~/zrender/src/mixin/Transformable.js","webpack:///./~/zrender/src/tool/color.js","webpack:///./~/zrender/src/shape/Rectangle.js","webpack:///./~/zrender/src/Layer.js","webpack:///./~/zrender/src/shape/Image.js","webpack:///./~/zrender/src/Storage.js","webpack:///./~/zrender/src/Group.js","webpack:///./~/zrender/src/animation/Animation.js","webpack:///./~/zrender/src/animation/Clip.js","webpack:///./~/zrender/src/animation/easing.js","webpack:///./~/echarts/src/chart/island.js","webpack:///./~/echarts/src/chart/base.js","webpack:///./~/echarts/src/util/shape/Icon.js","webpack:///./~/zrender/src/shape/Star.js","webpack:///./~/zrender/src/tool/math.js","webpack:///./~/zrender/src/shape/Heart.js","webpack:///./~/zrender/src/shape/util/PathProxy.js","webpack:///./~/zrender/src/shape/Droplet.js","webpack:///./~/echarts/src/util/shape/MarkLine.js","webpack:///./~/zrender/src/shape/Line.js","webpack:///./~/zrender/src/shape/util/dashedLineTo.js","webpack:///./~/zrender/src/shape/BezierCurve.js","webpack:///./~/echarts/src/util/shape/Symbol.js","webpack:///./~/zrender/src/shape/Polygon.js","webpack:///./~/zrender/src/shape/util/smoothSpline.js","webpack:///./~/zrender/src/shape/util/smoothBezier.js","webpack:///./~/echarts/src/util/shape/normalIsCover.js","webpack:///./~/zrender/src/shape/Polyline.js","webpack:///./~/zrender/src/shape/ShapeBundle.js","webpack:///./~/echarts/src/util/ecData.js","webpack:///./~/echarts/src/util/ecAnimation.js","webpack:///./~/echarts/src/util/ecEffect.js","webpack:///./~/zrender/src/shape/Circle.js","webpack:///./~/echarts/src/util/accMath.js","webpack:///./~/echarts/src/component/base.js","webpack:///./~/echarts/src/util/number.js","webpack:///./~/echarts/src/util/ecQuery.js","webpack:///./~/echarts/src/layout/EdgeBundling.js","webpack:///./~/echarts/src/data/KDTree.js","webpack:///./~/echarts/src/data/quickSelect.js","webpack:///./~/echarts/src/component/toolbox.js","webpack:///./~/echarts/src/component/dataView.js","webpack:///./~/echarts/src/component.js","webpack:///./~/echarts/src/component/title.js","webpack:///./~/echarts/src/component/tooltip.js","webpack:///./~/echarts/src/util/shape/Cross.js","webpack:///./~/echarts/src/component/legend.js","webpack:///./~/echarts/src/util/shape/Candle.js","webpack:///./~/zrender/src/shape/Sector.js","webpack:///./~/zrender/src/tool/computeBoundingBox.js","webpack:///./~/echarts/src/component/timeline.js","webpack:///./~/echarts/src/util/shape/Chain.js","webpack:///./~/zrender/src/loadingEffect/Bar.js","webpack:///./~/zrender/src/loadingEffect/Bubble.js","webpack:///./~/zrender/src/loadingEffect/DynamicLine.js","webpack:///./~/zrender/src/loadingEffect/Ring.js","webpack:///./~/zrender/src/shape/Ring.js","webpack:///./~/zrender/src/loadingEffect/Spin.js","webpack:///./~/zrender/src/loadingEffect/Whirling.js","webpack:///./~/echarts/src/theme/macarons.js","webpack:///./~/echarts/src/theme/infographic.js","webpack:///./~/echarts/src/chart/line.js","webpack:///./~/echarts/src/component/dataZoom.js","webpack:///./~/echarts/src/util/date.js","webpack:///./~/echarts/src/util/shape/HalfSmoothPolygon.js","webpack:///./~/echarts/src/component/axis.js","webpack:///./~/echarts/src/component/categoryAxis.js","webpack:///./~/echarts/src/component/valueAxis.js","webpack:///./~/echarts/src/util/smartSteps.js","webpack:///./~/echarts/src/util/smartLogSteps.js","webpack:///./~/echarts/src/component/grid.js","webpack:///./~/echarts/src/chart/bar.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,2B;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;;AAE/B;AACA;AACA,yBAAwB;AACxB,gCAA+B;AAC/B;AACA;AACA;AACA,gCAA+B;;AAE/B;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,oCAAmC;AACnC,8BAA6B;;AAE7B;;AAEA,0DAAyD;;AAEzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,2DAA0D,SAAS;AACnE;AACA;AACA;AACA;AACA;;AAEA,6BAA4B;AAC5B,iCAAgC;;AAEhC;AACA;AACA;AACA,sFAAqF;AACrF;;AAEA;AACA;AACA;AACA,wFAAuF;AACvmEAAkE;AAClE;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B;AAC9B,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,iCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,gBAAgB;AACnC,oBAAmB,SAAS;AAC5B,oBAAmB,SAAS;AAC5B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8DAA6D;AAC7D,iEAAgE;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,iCAAgC,0BAA0B;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,iCAAgC,0BAA0B;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,wDAAuD,oBAAoB;AAC3E;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC9tDD;AACA;AACA;AACA;AACA;AACA;AACA,2DAA+B;AAC/B;;AAEA,4BAA2B;;AAE3B;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;ACtOD;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,EAAE;AACrB,qBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,EAAE;AACrB,oBAAmB,EAAE;AACrB,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,aAAa;AAChC,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4JACA;;;;;;;;;;AC/PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAY;AACZ,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAgB,UAAU,KAAK,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB;AACA,cAAa,EAAE;AACf;AACA,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAAyC,wBAAwB;AACjE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B,qBAAqB,gBAAgB;AAChE;AACA,4BAA2B,YAAY,aAAa;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,iBAAgB,YAAY;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB,QAAQ;AACzB,oBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,OAAO;AAC1B,sBAAqB,OAAO;AAC5B;;AAEA,wBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,8CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;;AAEA,8DAA6D;AAC7D,0CAAyC,gBAAgB;AACzD;AACA;AACA;;AAEA;AACA;AACA,8CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,+BAA+B;AAC3D;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,+BAA+B;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,iBAAiB,kBAAkB;;AAE5E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAwB;AACxB,4DAA2D;;AAE3D,MAAK;AACL,4CAA2C,yBAAyB;AACpE;;AAEA;;AAEA;AACA;AACA;AACA,iDAAgD,uDAAuD;AACvG,4EAA2E;AAC3E;AACA,8EAA6E;AAC7E;;;AAGA;AACA,6EAA4E;AAC5E,mEAAkE;AAClE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA4C,gBAAgB,iBAAiB;AAC7E;AACA;AACA;AACA;;AAEA;AACA,gBAAe;AACf,gBAAe;;AAEf,oBAAmB,8BAA8B;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA4B,cAAc;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,WAAW;AAC7B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8CAA6C,UAAU,WAAW;;AAElE;AACA;AACA,MAAK;AACL;AACA,kCAAiC,eAAe;AAChD,mBAAkB,4BAA4B;AAC9C;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA8C;AAC9C,yBAAwB,OAAO,UAAU,SAAS,YAAY;AAC9D,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;AACA,4CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC;AACD,OAAM;AACN;AACA;AACA;AACA,EAAC,uJAAE;;;;;;;;;;AC/6CH;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4JACA;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA,EAAC;;;;;;;;;;AC1QD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C,IAAI;AACjD,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC/ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,YAAY;AAC/B,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,kDAAkD;AAC9E,oBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,kDAAkD;AAC9E,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,kDAAkD;AAC9E,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,kDAAkD;AAC9E,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,kDAAkD;AAC9E,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,kDAAkD;AAC9E,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,sDAAsD;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,sDAAsD;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,sDAAsD;AAC1E,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,kCAAkC;AACrD,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,sDAAsD;AACzE,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA,iCAAgC,MAAM;AACtC,qCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAA+D,aAAa;AAC5E;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,sDAAsD;AAC1E;AACA;AACA;AACA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,0BAA0B;AAC7C,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;mCCnkBA,kCACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4JACA;;;;;;;;;;mCCjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA,UAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;ACtHD;AACA;AACA;AACA;AACA;;AAEA,mCACA;AACA;;AAEA;AACA;AACA;AACA,4JACA;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;;;AAGb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8CAA6C;AAC7C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B,oBAAmB,uBAAuB;AAC1C,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAsC;AACtC,uCAAsC;AACtC;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,cAAa,QAAQ;AACrB,cAAa,SAAS;AACtB,cAAa,eAAe;AAC5B,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA2B,sDAAsD;AACjF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,6BAA4B;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,4JACA;;;;;;;;;;mCCr/BA,kCACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,OAAO;AAC9B,wBAAuB,OAAO;AAC9B,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,yBAAwB,QAAQ;AAChC,yBAAwB,QAAQ;AAChC,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,yBAAwB,QAAQ;AAChC,yBAAwB,QAAQ;AAChC,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;mCCrRA,kCACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,4BAA4B;AACnD,wBAAuB,4BAA4B;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA,4CAA2C;AAC3C,8CAA6C;;AAE7C;AACA;;AAEA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,2DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,oCAAmC,SAAS,QAAQ;AACpD,kCAAiC,6BAA6B;AAC9D,2CAA0C,YAAY,KAAK;AAC3D,6CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,6CAA4C,OAAO;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA,oBAAmB,kCAAkC;AACrD,oBAAmB,SAAS;AAC5B;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,kBAAiB;AACjB;AACA,8D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;ACvyBA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,MAAM;AACzB,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,OAAO;AAC1D;AACA,wCAAuC,OAAO;AAC9C;AACA;AACA,sDAAqD,SAAS;AAC9D,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;;AAEA,mCACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,qCAAqC;AAC5D,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;;AAEA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,QAAQ;AAC5B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA;AACA,0B;AACA;AACA;AACA;AACA,sB;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA;AACA;AACA;AACA;AACA,kB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,iD;AACA,cAAa;AACb;AACA,sD;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4JACA;;;;;;;;;;AC11BA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAoC;AACpC,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,EAAC,uJ;;;;;;;;;AC1hBD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;;AAEA,mCACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,yBAAyB;AAC5C,oBAAmB,QAAQ;AAC3B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,yBAAyB;AAC5C,oBAAmB,QAAQ;AAC3B,qBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,yBAAyB;AAC5C,oBAAmB,0CAA0C;AAC7D;AACA;AACA,wDAAuD,SAAS;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,8BAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,0CAA0C;AAC7D,oBAAmB,0CAA0C;AAC7D,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,yBAAyB;AAC5C,oBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,0CAA0C;AAC7D,qBAAoB;AACpB;AACA;AACA,4D;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,yBAAyB;AAC5C,oBAAmB,0CAA0C;AAC7D,oBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB,oBAAmB;AACnB,oBAAmB;AACnB,oBAAmB;;AAEnB;AACA;AACA,yCAAwC;;AAExqBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;ACjqBA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;ACxPD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAsC,EAAE,YAAY,EAAE;;AAEtgBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,UAAU;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,EAAE;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,wBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;AAEA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,esCAAqC;AACrC,sCAAqC;AACrC,iCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;AACrC,sCAAqC;AACrC,iCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;AChjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,sBAAsB;AACpC,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;AACA,wB;AACA,wB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,+CAA+C;AACtE,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;AC7MA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA;;AAEA;;AAEA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wB;AACA;AACA;AACA;;AAEA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA,wB;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,c;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACrND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,0CAA0C;AACxD,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,uCAAuC;AAC9D,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;ACxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gEAA+D,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAoB,QAAQ;AAC5B,qBAAoB;AACpB;AACA;AACA;AACA;AACA,4DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,QAAQ;AAC5B,eAAc;AACd,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,SAAS;AAC9D;AACA;AACA;AACA;;AAEA,0DAAyD,SAAS;AAClE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA,gCAA+B,yBAAyB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,sDAAsD;AACzE,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gDAAgD;AACnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,gCAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;AChaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,+CAA+C;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,+CAA+C;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,SAAS;AACzB,kBAAiB;AACjB;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,SAAS;AACzB,kBAAiB;AACjB;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACtOD;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAqB,OAAO;AAC5B,uBAAsB,SAAS;AAC/B;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,SAAS;AACxC;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,yBAAwB,OAAO;AAC/B,yBAAwB,OAAO;AAC/B,yBAAwB,QAAQ;AAChC,yBAAwB,SAAS;AACjC;AACA,yBAAwB,SAAS;AACjC;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,SAAS;AACxC,wE;AACA;AACA;AACA;AACA;AACA,gCAA+B,SAAS;AACxC,oCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,SAAS;AACxC,oCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,SAAS;AAC5B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B,yBAAwB,OAAO;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,cAAa;AACb;AACA;AACA,yBAAwB,SAAS;AACjC,yBAAwB;AACxB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,yBAAwB,gBAAgB;AACxC,kCAAiC;AACjC,yBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,8BAA8B;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,gCAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,yBAAwB,OAAO;AAC/B,yBAAwB;AACxB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,yBAAwB,SAAS;AACjC,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;AC/lBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kEAAiE;;AAEjE;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA,+DAA8D,SAAS;AACvE;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA,4JACA;;;;;;;;;;mCCvGA,kCACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA,uB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,wBAAuB,OAAO;AAC9B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;;AC3VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC,yCAAwC;;AAExC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC1PD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC,yCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;;AAEtC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,wCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAmD,OAAO;AAC1D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,+BAA8B;AAC9B,+BAA8B;AAC9B,oDAAmD;AACnD,0BAAyB;AACzB,2BAA0B;AAC1B;AACA,kCAAiC;AACjC,mCAAkC;AAClC;AACA;AACA,oDAAmD,OAAO;AAC1D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA,wDAAuD,OAAO;AAC9D;AACA,mEAAkE,OAAO;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oDAAmD,OAAO;AAC1D,2DAA0D,OAAO;AACjqDAAoD,EAAE,IAAI,GAAG;AAC7D,qDAAoD,EAAE,IAAI,GAAG;AAC7D,qDAAoD,EAAE,IAAI,GAAG;AAC7D,qDAAoD,GAAG;AACvD,qDAAoD,GAAG;AACvD,qDAAoD,GAAG;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2CAA0C,gBAAgB;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,gBAAgB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kDAAiD,OAAO;AACxD;AACA,wD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA,+DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqoBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA,gCAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,OAAO;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;ACzqDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,qBAAoB,QAAQ;;AAE5B;AACA;AACA,6BAA4B,OAAO;AACnC,6BAA4B,OAAO;AACnC,6BAA4B,OAAO;AACnC,6BAA4B,OAAO;AACnC,6BAA4B,OAAO;AACnC,SAAQ;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa;;AAEb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,UAAU;AAC7B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC/nBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;;AAEA,mCACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,qCAAqC;AAC5D,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;;AAEA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4JACA;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,W;AACA,OAAM;AACN;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,uCAAuC;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,uCAAuC;AAC9D,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,yBAAyB;AACzC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,QAAQ;AACxB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC5PD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,W;AACA,OAAM;AACN;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,2CAA2C;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,2CAA2C;AAClE,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,eAAe;AAC7B,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA,0CAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,UAAU;AAC7B,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;ACvPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,qCAAqC;AAC5D,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4JACA;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;;AAEA,mCACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,mDAAmD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,wBAAuB,mDAAmD;AAC1E,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,qBAAoB,QAAQ;;AAE5B;AACA;AACA,6BAA4B,MAAM;AAClC,6BAA4B,OAAO;AACnC,6BAA4B,OAAO;AACnC,6BAA4B,OAAO;AACnC,6BAA4B,QAAQ;AACpC,SAAQ;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA,kCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;AC5LD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,2CAA2C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,2CAA2C;AAClE,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,QAAQ;AAC3B,oBAAmB,MAAM;AACzB,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,SAAS;AACpC;AACA;;AAEA;AACA;AACA,4BAA2B,UAAU;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4JACA;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,MAAM;AACzB;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAgD,SAAS;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA,kB;AACA;AACA;AACA;AACA;AACA,sB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;ACnGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;;;;ACZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,eAAe;AAC7B,eAAc,cAAc;AAC5B,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,6CAA6C;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,yBAAyB;AAChD,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,+CAA+C;AAClE,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,4BAA4B;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,iCAAiC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAC,uJ;;;;;;;;;ACtJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB,gBAAe,GAAG;AAClB,gBAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,uJ;;;;;;;;;AClHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA,yBAAwB;AACxB;AACA;AACA;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAwB,SAAS;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA,yBAAwB;AACxB;AACA,yBAAwB,SAAS;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,SAAS;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;AC/mBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,uDAAsD,oBAAoB;;AAE1E,4BAA2B,yBAAyB;AACpD,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iFAAgF,oBAAoB;AACpG,sCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uFAAsF,oBAAoB;AAC1G;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;AC3bD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,W;AACA,OAAM;AACN;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,yCAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,yCAAyC;AAChE,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,uJ;;;;;;;;;AC9ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,wDAAuD,QAAQ;AAC/D;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC,sEAAqE;AACrE;AACA,8DAA6D;AAC7D;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA,qBAAoB,gBAAgB;AACpC,qBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;ACpPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,IAAI,UAAU,EAAE;AACjD;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,uJ;;;;;;;;;AC1FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;AChFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,wCAAuC,2BAA2B;AAClE;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,4BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,MAAM;AACzB,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC9ZD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gF;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,SAAS;AACzB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAA+B,OAAO;AACtC,oD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,SAAS;AACzB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,WAAW;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACtPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,wDAAuD,aAAa;AACpE;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC9ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,6BAA4B;AAC5B,4BAA2B;AAC3B,8BAA6B;AAC7B,8BAA6B;AAC7B,8BAA6B;AAC7B,8BAA6B;AAC7B,4BAA2B;AAC3B;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,YAAY;AAC3B,gBAAe,QAAQ;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC;AAChC,gCAA+B;AAC/B,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,yBAAyB;AACpE,4CAA2C,6BAA6B;AACxE,4CAA2C,8BAA8B;AACzE;AACA;AACA,0EAAyE,OAAO;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,iDAAiD;AAChG;AACA;AACA;AACA,4CAA2C,6BAA6B;AACxE,4CAA2C,kCAAkC;AAC7E;AACA;AACA;AACA,gDAA+C,gCAAgC;AAC/E;AACA;AACA;AACA,4CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrcAAa;AACbkBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,yBAAwB;AACxB,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAwB;AACxB,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;;AAElC,8CAA6C,QAAQ,gCAAgC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,yBAAwB;AACxB,UAAS;;AAET;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;;AAElC,8CAA6C,QAAQ,gCAAgC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,yBAAwB;AACxB,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAwD;AACxD,kCAAiC;AACjC,kCAAiC;AACjC,0BAAyB,OAAO;AAChC,wDAAuD;AACvD,sCAAqC;AACrC,+BAA8B;AAC9B,gCAA+B;AAC/B;AACA,+DAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,6BAA6B;AAClD;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,6BAA6B;AAC9C;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6CAA4C,yBAAyB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;AC3tCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,YAAY;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,sCAAqC;AACrC,wCAAuC;AACvC,mEAAkE;AAClE,wEAAuE;AACvE,2EAA0E;AAC1E,sEAAqE;AACrE,kCAAiC;AACjC,+BAA8B;AAC9B,8BAA6B;AAC7B;AACA,gEAA+D;AAC/D,kDAAiD;AACjD,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA,6DAA4D,kBAAkB;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,iBAAiB,gBAAgB,cAAc;AAC9E,+BAA8B;AAC9B,4DAA2D;;AAE3D;;AAEA,4DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAiC,kBAAkB,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gEAA+D;AAC/D,+DAA8D;AAC9D,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA;AACA,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA4C,SAAS;AACrD;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,qBAAqB;AAC9C;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA4C,SAAS;AACrD;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE;AACnE,mEAAkE;AAClE,yDAAwD;AACxD;AACA,+DAA8D,iBAAiB;AAC/E,4DAA2D,cAAc;AACzE,uDAAsD;AACtD,oFAAmF;AACnF;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACvcD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA+B;AAC/B;;AAEA,gCAA+B;;AAE/B;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;AC/BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAsD,OAAO;AAC7D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;;;ACpTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,MAAM,IAAI;AACpD,8CAA6C,OAAO,cAAc;AAClE,4BAA2B,EAAE,OAAO,EAAE,IAAI,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,yBAAwB;AACxB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb,2BAA0B;AAC1B;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,YAAY;AAC3B,gBAAe,QAAQ;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAsC,cAAc,mBAAmB,mBAAmB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC,OAAO;;AAE5C;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,gBAAgB;;AAEtE;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E;AAC/E;AACA;AACA,iFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,smDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,OAAO;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,EAAE,IAAI,GAAG;AACjE,yDAAwD,EAAE,IAAI,GAAG;AACjE,yDAAwD,EAAE,IAAI,GAAG;AACjE,gEAA+D,OAAO;AACtE;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gEAA+D,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAuD,OAAO;AAC9D;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,EAAE,IAAI,GAAG;AACjE,yDAAwD,EAAE,IAAI,GAAG;AACjE,yDAAwD,EAAE,IAAI,GAAG;AACjE,yDAAwD,EAAE,IAAI,GAAG;AACjE,2DAA0D,OAAO;AACjE;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,EAAE,KAAK,GAAG;AAC9D,qDAAoD,EAAE,KAAK,GAAG;AAC9D,qDAAoD,EAAE,KAAK,GAAG;AAC9D,qDAAoD,GAAG;AACvD,qDAAoD,GAAG;AACvD;AACA,gDAA+C,GAAG;AAClD;AACA;;AAEA,qDAAoD,EAAE,KAAK,GAAG;AAC9D,qDAAoD,GAAG;AACvD,qDAAoD,EAAE,KAAK,GAAG;AAC9D;AACA,gDAA+C,GAAG;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,OAAO;AACvD,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW,YAAY;AAC9E;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA,0D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE;AACluDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,OAAO;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA,UAAS;;AAET;AACA;AACA,aAAY,OAAO;AACnB,sBAAqB,0CAA0C;AAC/D,sBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC,sCAAqC;AACrC;AACA;AACA,gCAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE;AAChE,iEAAgE;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C,6CAA4C;AAC5C,6CAA4C;AAC5C,+CAA8C;AAC9C,8CAA6C;AAC7C;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;AC3sDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,qBAAoB,QAAQ;;AAE5B;AACA;AACA,yBAAwB,OAAO;AAC/B,yBAAwB,OAAO;AAC/B,yBAAwB,OAAO;AAC/B,SAAQ;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,UAAU;AAC7B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;AC1ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAsD,OAAO;AAC7D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,gBAAgB;AAC3C;AACA,4CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,KAAK;AACzD;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,sCAAqC;AACrC;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAAyB;AACzB,8BAA6B;AAC7B;AACA;AACA;AACA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,gBAAgB;AAC/C;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kE;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD,qDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;;;ACz8BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,qBAAoB,QAAQ;;AAE5B;AACA;AACA,6BAA4B,OAAO;AACnC,6BAA4B,MAAM;AAClC,SAAQ;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,UAAU;AAC7B,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;;AAGT;AACA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;AClHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,a;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,QAAQ;AACtB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;;AAEA,mCACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,yCAAyC;AAChE;AACA;AACA,iCAAgC;AAChC,iCAAgC;AAChC,wCAAuC;AACvC,iCAAgC;AAChC,mDAAkD;AAClD,+CAA8C;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,yCAAyC;AAChE,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA,iCAAgC;AAChC,iCAAgC;AAChC,wCAAuC;AACvC,iCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,4JACA;;;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA,mCACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC;AACA;AACA;AACA,Y;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;ACvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,iBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,6BAA4B;AAC5B;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,sBAAqB,eAAe;AACpC,wBAAuB;AACvB,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,SAAS;AACvE;AACA;AACA;AACA;AACA;;AAEA,uDAAsD,OAAO;AAC7D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,MAAM;AACrD;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uEAAsE;AACtE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,mCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;;AAEA;AACA,yDAAwD;AACxD;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,yDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,yDAAwD;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,yDAAwD;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,U;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACx6BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,UAAU;AAC7B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;;ACnLD,mCACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;;ACjGA,mCACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA,oCAAmC,OAAO;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;;AClGA,mCACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA,oCAAmC,OAAO;AAC1C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;;ACvGA,mCACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAA+B,QAAQ;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,oCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA,mCACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,yBAAyB;AAChD,wBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,wBAAuB,qCAAqC;AAC5D,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4JACA;;;;;;;;;;;AChHA,mCACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;;AC3GA,mCACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,4JACA;;;;;;;;;;mCCrHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,wBAAuB;AACvB;AACA,0BAAyB;AACzB;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,oBAAmB;AACnB,yBAAwB;AACxB;AACA;AACA,UAAS;AACT,qBAAoB;AACpB,yBAAwB;AACxB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,oBAAmB;AACnB,yBAAwB;AACxB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB,yBAAwB;AACxB;AACA;AACA;AACA,MAAK;;AAEL;AACA,oBAAmB;AACnB,yBAAwB;AACxB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA,uBAAsB,mBAAmB;AACzC,yBAAwB;AACxB,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,oBAAmB;AACnB,yBAAwB;AACxB;AACA;AACA;AACA,UAAS;AACT,oBAAmB;AACnB;AACA;AACA,yBAAwB;AACxB;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA,yBAAwB;AACxB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;mCChQD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,wBAAuB;AACvB;AACA,0BAAyB;AACzB;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,oBAAmB;AACnB,yBAAwB;AACxB;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA,MAAK;;AAEL;AACA;AACA,oBAAmB;AACnB;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,qBAAoB;AACpB,yBAAwB;AACxB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,oBAAmB;AACnB,yBAAwB;AACxB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA,uBAAsB,mBAAmB;AACzC,yBAAwB;AACxB,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,wBAAuB;AACvB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,yBAAwB;AACxB;AACA;AACA;AACA,UAAS;AACT,oBAAmB;AACnB;AACA;AACA,yBAAwB;AACxB;AACA;AACA,UAAS;AACT,qBAAoB;AACpB,yBAAwB;AACxB;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA,yBAAwB;AACxB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;ACxSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA,wBAAuB;AACvB;AACA,wBAAuB;AACvB;AACA,wCAAuC;AACvC,+BAA8B;AAC9B;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA,wBAAuB;AACvB;AACA,wBAAuB;AACvB;AACA,wCAAuC;AACvC,+BAA8B;AAC9B;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;;AAEA,oDAAmD,OAAO;AAC1D,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yDAAwD,OAAO;AAC/D;AACA;AACA,wCAAuC;AACvC,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;;AAEA,mCAAkC,UAAU;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,OAAO;AAC/D;AACA,6DAA4D,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,U;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACjiCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,wCAAuC,OAAO;AAC9C,gBAAe,OAAO;AACtB,wCAAuC,OAAO;AAC9C,oBAAmB,OAAO;AAC1B,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B,6BAA4B;AAC5B,6BAA4B;AAC5B,2BAA0B;AAC1B,kCAAiC;AACjC,gCAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,2BAA0B;AAC1B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;;AAEA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;;AAEA;AACA;AACA;AACA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA0C,OAAO;AACjD;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,4CAA2C,OAAO;AAClsBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,wCAAuC;AACvC;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;AC3tCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,uCAAuC;AAChD,UAAS,2CAA2C;AACpD,UAAS,4CAA4C;AACrD,UAAS,4CAA4C;AACrD,UAAS,4CAA4C;AACrD,UAAS,4CAA4C;AACrD,UAAS,gDAAgD;AACzD,UAAS,iDAAiD;AAC1D,UAAS,iDAAiD;AAC1D,UAAS,iDAAiD;AAC1D,UAAS,8CAA8C;AACvD,UAAS,kDAAkD;AAC3D,UAAS,kDAAkD;AAC3D,UAAS,mDAAmD;AAC5D,UAAS,gDAAgD;AACzD,UAAS,2CAA2C;AACpD,UAAS,6CAA6C;AACtD,UAAS,oDAAoD;AAC7D,UAAS,sDAAsD;AAC/D,UAAS,6CAA6C;AACtD;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnuJ;;;;;;;;;ACjKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,qBAAoB,QAAQ;;AAE5B;AACA;AACA,6BAA4B,MAAM;AAClC,SAAQ;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACtGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,0BAAyB,2CAA2C;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;ACxVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,oBAAmB;AACnB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,UAAS;AACT,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,MAAM;AACrD;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE;AACpE,4F;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAsD,OAAO;AAC7D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA,mBAAkB;AAClB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACnyBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,UAAS;AACT,oBAAmB;AACnB;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,UAAS;AACT,qBAAoB;AACpB;AACA,yBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uDAAsD,OAAO;AAC7D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;;AAE/C;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD,iDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,iBAAgB,cAAc,SAAS,gBAAgB;AACvD;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,4DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,4DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC;;;;;;;;;;;;ACj7BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,MAAM;AACvB,kBAAiB,OAAO,KAAK;AAC7B;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,uBAAsB;AACtB,uBAAsB;AACtB,yBAAwB;;;AAGxB;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,2BAA2B;AAC/C;AACA;AACA,8CAA6C;AAC7C;AACA,iCAAgC;AAChC,kDAAiD;AACjD,kDAAiD;AACjD;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,wCAAuC;AACvC;;;;AAIA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA,8BAA6B;AAC7B;AACA,yCAAwC;AACxC;AACA,yDAAwD;AACxD,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,KAAK,GAAG;AACtC,gDAA+C;AAC/C;AACA;AACA,kCAAiC;AACjC,iDAAgD;AAChD;AACA;AACA,oCAAmC,KAAK;AACxC,kDAAiD;AACjD,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,QAAQ;AACzB,kBAAiB,OAAO,KAAK,WAAW;AACxC,yCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,uBAAsB;AACtB,+BAA8B;AAC9B;AACA;AACA,eAAc;AACd,sDAAqD;AACrD;AACA,wBAAuB;AACvB;AACA;AACA;AACA,8DAA6D;AAC7D,gEAA+D;AAC/D;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,2CAA0C;AAC1C;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,MAAM;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,sBAAqB;AACrB,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD,qCAAoC;AACpC,sCAAqC;AACrC,mCAAkC;AAClC,gCAA+B;AAC/B,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,KAAK,GAAG;AAC9C;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA,qCAAoC;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA,yCAAwC;AACxC;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA,yCAAwC;AACxC;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,sCAAqC;AACrC,wBAAuB;AACvB;AACA,iCAAgC;AAChC;AACA,yCAAwC;AACxC,gCAA+B;AAC/B;AACA;AACA,sCAAqC;AACrC,sCAAqC;AACrC,wBAAuB;AACvB;AACA,iCAAgC;AAChC;AACA,yCAAwC;AACxC,gCAA+B;AAC/B;AACA;;;AAGA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,sCAAqC;AACrC;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC,KAAK;AAC1C;AACA;AACA;AACA,2CAA0C;AAC1C,sDAAqD;AACrD,iCAAgC;AAChC;AACA;AACA,qCAAoC,KAAK,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;;;;;AAKA;AACA,EAAC;;;;;;;;;;;;;AC5hBD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA,gBAAe,QAAQ;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAwC,6BAA6B;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C,SAAS;AACvD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA,+CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;ACtcD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B,qBAAoB,YAAY;AAChC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAC,uJ;;;;;;;;;ACvLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,OAAO;AACrrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA,oDAAmD,OAAO;AAC1D,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sFAAqF;AACrF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,aAAa;AAChC,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD,qDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,8BAA6B;AAC7B,sCAAqC;AACrC,oCAAmC;AACnC;AACA;AACA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA,mEAAkE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAC,uJ","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 75cab1ced92680605b7a\n **/","var echarts = require(\"echarts\");\r\nrequire('echarts/chart/line');\r\nrequire('echarts/chart/bar');\r\nvar option = {\r\n    tooltip: {\r\n        trigger: 'axis'\r\n    },\r\n    legend: {\r\n        data: ['蒸发量', '降水量']\r\n    },\r\n    toolbox: {\r\n        show: true,\r\n        feature: {\r\n            mark: {\r\n                show: true\r\n            },\r\n            dataView: {\r\n                show: true,\r\n                readOnly: false\r\n            },\r\n            magicType: {\r\n                show: true,\r\n                type: ['line', 'bar']\r\n            },\r\n            restore: {\r\n                show: true\r\n            },\r\n            saveAsImage: {\r\n                show: true\r\n            }\r\n        }\r\n    },\r\n    calculable: true,\r\n    xAxis: [{\r\n        type: 'category',\r\n        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n    }],\r\n    yAxis: [{\r\n        type: 'value',\r\n        splitArea: {\r\n            show: true\r\n        }\r\n    }],\r\n    series: [{\r\n        name: '蒸发量',\r\n        type: 'bar',\r\n        data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3]\r\n    }, {\r\n        name: '降水量',\r\n        type: 'bar',\r\n        data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\r\n    }]\r\n};\r\nvar myChart = echarts.init(document.getElementById('main'));\r\nmyChart.setOption(option);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./entry.js\n ** module id = 0\n ** module chunks = 0\n **/","/*!\r\n * ECharts, a javascript interactive chart library.\r\n *\r\n * Copyright (c) 2015, Baidu Inc.\r\n * All rights reserved.\r\n *\r\n * LICENSE\r\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\r\n */\r\n\r\n/**\r\n * echarts\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ecConfig = require('./config');\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrEvent = require('zrender/tool/event');\r\n\r\n    var self = {};\r\n\r\n    var _canvasSupported = require('zrender/tool/env').canvasSupported;\r\n    var _idBase = new Date() - 0;\r\n    var _instances = {};    // ECharts实例map索引\r\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\r\n\r\n    self.version = '2.2.5';\r\n    self.dependencies = {\r\n        zrender: '2.1.0'\r\n    };\r\n    /**\r\n     * 入口方法\r\n     */\r\n    self.init = function (dom, theme) {\r\n        var zrender = require('zrender');\r\n        if ((zrender.version.replace('.', '') - 0) < (self.dependencies.zrender.replace('.', '') - 0)) {\r\n            console.error(\r\n                'ZRender ' + zrender.version\r\n                + ' is too old for ECharts ' + self.version\r\n                + '. Current version need ZRender '\r\n                + self.dependencies.zrender + '+'\r\n            );\r\n        }\r\n\r\n        dom = dom instanceof Array ? dom[0] : dom;\r\n\r\n        // dom与echarts实例映射索引\r\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n        if (!key) {\r\n            key = _idBase++;\r\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, key);\r\n        }\r\n\r\n        if (_instances[key]) {\r\n            // 同一个dom上多次init，自动释放已有实例\r\n            _instances[key].dispose();\r\n        }\r\n        _instances[key] = new Echarts(dom);\r\n        _instances[key].id = key;\r\n        _instances[key].canvasSupported = _canvasSupported;\r\n        _instances[key].setTheme(theme);\r\n\r\n        return _instances[key];\r\n    };\r\n\r\n    /**\r\n     * 通过id获得ECharts实例，id可在实例化后读取\r\n     */\r\n    self.getInstanceById = function (key) {\r\n        return _instances[key];\r\n    };\r\n\r\n    /**\r\n     * 消息中心\r\n     */\r\n    function MessageCenter() {\r\n        zrEvent.Dispatcher.call(this);\r\n    }\r\n    zrUtil.merge(MessageCenter.prototype, zrEvent.Dispatcher.prototype, true);\r\n\r\n    /**\r\n     * 基于zrender实现Echarts接口层\r\n     * @param {HtmlElement} dom 必要\r\n     */\r\n    function Echarts(dom) {\r\n        // Fxxk IE11 for breaking initialization without a warrant;\r\n        // Just set something to let it be!\r\n        // by kener 2015-01-09\r\n        dom.innerHTML = '';\r\n        this._themeConfig = {}; // zrUtil.clone(ecConfig);\r\n\r\n        this.dom = dom;\r\n        // this._zr;\r\n        // this._option;                    // curOption clone\r\n        // this._optionRestore;             // for restore;\r\n        // this._island;\r\n        // this._toolbox;\r\n        // this._timeline;\r\n        // this._refreshInside;             // 内部刷新标志位\r\n\r\n        this._connected = false;\r\n        this._status = {                    // 用于图表间通信\r\n            dragIn: false,\r\n            dragOut: false,\r\n            needRefresh: false\r\n        };\r\n        this._curEventType = false;         // 破循环信号灯\r\n        this._chartList = [];               // 图表实例\r\n\r\n        this._messageCenter = new MessageCenter();\r\n\r\n        this._messageCenterOutSide = new MessageCenter();    // Echarts层的外部消息中心，做Echarts层的消息转发\r\n\r\n        // resize方法经常被绑定到window.resize上，闭包一个this\r\n        this.resize = this.resize();\r\n\r\n        // 初始化::构造函数\r\n        this._init();\r\n    }\r\n\r\n    /**\r\n     * ZRender EVENT\r\n     *\r\n     * @inner\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var ZR_EVENT = require('zrender/config').EVENT;\r\n\r\n    /**\r\n     * 要绑定监听的zrender事件列表\r\n     *\r\n     * @const\r\n     * @inner\r\n     * @type {Array}\r\n     */\r\n    var ZR_EVENT_LISTENS = [\r\n        'CLICK', 'DBLCLICK', 'MOUSEOVER', 'MOUSEOUT',\r\n        'DRAGSTART', 'DRAGEND', 'DRAGENTER', 'DRAGOVER', 'DRAGLEAVE', 'DROP'\r\n    ];\r\n\r\n    /**\r\n     * 对echarts的实例中的chartList属性成员，逐个进行方法调用，遍历顺序为逆序\r\n     * 由于在事件触发的默认行为处理中，多次用到相同逻辑，所以抽象了该方法\r\n     * 由于所有的调用场景里，最多只有两个参数，基于性能和体积考虑，这里就不使用call或者apply了\r\n     *\r\n     * @inner\r\n     * @param {ECharts} ecInstance ECharts实例\r\n     * @param {string} methodName 要调用的方法名\r\n     * @param {*} arg0 调用参数1\r\n     * @param {*} arg1 调用参数2\r\n     * @param {*} arg2 调用参数3\r\n     */\r\n    function callChartListMethodReverse(ecInstance, methodName, arg0, arg1, arg2) {\r\n        var chartList = ecInstance._chartList;\r\n        var len = chartList.length;\r\n\r\n        while (len--) {\r\n            var chart = chartList[len];\r\n            if (typeof chart[methodName] === 'function') {\r\n                chart[methodName](arg0, arg1, arg2);\r\n            }\r\n        }\r\n    }\r\n\r\n    Echarts.prototype = {\r\n        /**\r\n         * 初始化::构造函数\r\n         */\r\n        _init: function () {\r\n            var self = this;\r\n            var _zr = require('zrender').init(this.dom);\r\n            this._zr = _zr;\r\n\r\n            // wrap: n,e,d,t for name event data this\r\n            this._messageCenter.dispatch = function(type, event, eventPackage, that) {\r\n                eventPackage = eventPackage || {};\r\n                eventPackage.type = type;\r\n                eventPackage.event = event;\r\n\r\n                self._messageCenter.dispatchWithContext(type, eventPackage, that);\r\n                self._messageCenterOutSide.dispatchWithContext(type, eventPackage, that);\r\n\r\n                // 如下注掉的代码，@see: https://github.com/ecomfe/echarts-discuss/issues/3\r\n                // if (type != 'HOVER' && type != 'MOUSEOUT') {    // 频繁事件直接抛出\r\n                //     setTimeout(function(){\r\n                //         self._messageCenterOutSide.dispatchWithContext(\r\n                //             type, eventPackage, that\r\n                //         );\r\n                //     },50);\r\n                // }\r\n                // else {\r\n                //     self._messageCenterOutSide.dispatchWithContext(\r\n                //         type, eventPackage, that\r\n                //     );\r\n                // }\r\n            };\r\n\r\n            this._onevent = function(param){\r\n                return self.__onevent(param);\r\n            };\r\n            for (var e in ecConfig.EVENT) {\r\n                if (e != 'CLICK' && e != 'DBLCLICK'\r\n                    && e != 'HOVER' && e != 'MOUSEOUT' && e != 'MAP_ROAM'\r\n                ) {\r\n                    this._messageCenter.bind(ecConfig.EVENT[e], this._onevent, this);\r\n                }\r\n            }\r\n\r\n\r\n            var eventBehaviors = {};\r\n            this._onzrevent = function (param) {\r\n                return self[eventBehaviors[ param.type ]](param);\r\n            };\r\n\r\n            // 挂载关心的事件\r\n            for (var i = 0, len = ZR_EVENT_LISTENS.length; i < len; i++) {\r\n                var eventName = ZR_EVENT_LISTENS[i];\r\n                var eventValue = ZR_EVENT[eventName];\r\n                eventBehaviors[eventValue] = '_on' + eventName.toLowerCase();\r\n                _zr.on(eventValue, this._onzrevent);\r\n            }\r\n\r\n            this.chart = {};            // 图表索引\r\n            this.component = {};        // 组件索引\r\n\r\n            // 内置图表\r\n            // 孤岛\r\n            var Island = require('./chart/island');\r\n            this._island = new Island(this._themeConfig, this._messageCenter, _zr, {}, this);\r\n            this.chart.island = this._island;\r\n\r\n            // 内置通用组件\r\n            // 工具箱\r\n            var Toolbox = require('./component/toolbox');\r\n            this._toolbox = new Toolbox(this._themeConfig, this._messageCenter, _zr, {}, this);\r\n            this.component.toolbox = this._toolbox;\r\n\r\n            var componentLibrary = require('./component');\r\n            componentLibrary.define('title', require('./component/title'));\r\n            componentLibrary.define('tooltip', require('./component/tooltip'));\r\n            componentLibrary.define('legend', require('./component/legend'));\r\n\r\n            if (_zr.getWidth() === 0 || _zr.getHeight() === 0) {\r\n                console.error('Dom’s width & height should be ready before init.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * ECharts事件处理中心\r\n         */\r\n        __onevent: function (param){\r\n            param.__echartsId = param.__echartsId || this.id;\r\n\r\n            // 来自其他联动图表的事件\r\n            var fromMyself = (param.__echartsId === this.id);\r\n\r\n            if (!this._curEventType) {\r\n                this._curEventType = param.type;\r\n            }\r\n\r\n            switch (param.type) {\r\n                case ecConfig.EVENT.LEGEND_SELECTED :\r\n                    this._onlegendSelected(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_ZOOM :\r\n                    if (!fromMyself) {\r\n                        var dz = this.component.dataZoom;\r\n                        if (dz) {\r\n                            dz.silence(true);\r\n                            dz.absoluteZoom(param.zoom);\r\n                            dz.silence(false);\r\n                        }\r\n                    }\r\n                    this._ondataZoom(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_RANGE :\r\n                    fromMyself && this._ondataRange(param);\r\n                    break;\r\n                case ecConfig.EVENT.MAGIC_TYPE_CHANGED :\r\n                    if (!fromMyself) {\r\n                        var tb = this.component.toolbox;\r\n                        if (tb) {\r\n                            tb.silence(true);\r\n                            tb.setMagicType(param.magicType);\r\n                            tb.silence(false);\r\n                        }\r\n                    }\r\n                    this._onmagicTypeChanged(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_VIEW_CHANGED :\r\n                    fromMyself && this._ondataViewChanged(param);\r\n                    break;\r\n                case ecConfig.EVENT.TOOLTIP_HOVER :\r\n                    fromMyself && this._tooltipHover(param);\r\n                    break;\r\n                case ecConfig.EVENT.RESTORE :\r\n                    this._onrestore();\r\n                    break;\r\n                case ecConfig.EVENT.REFRESH :\r\n                    fromMyself && this._onrefresh(param);\r\n                    break;\r\n                // 鼠标同步\r\n                case ecConfig.EVENT.TOOLTIP_IN_GRID :\r\n                case ecConfig.EVENT.TOOLTIP_OUT_GRID :\r\n                    if (!fromMyself) {\r\n                        // 只处理来自外部的鼠标同步\r\n                        var grid = this.component.grid;\r\n                        if (grid) {\r\n                            this._zr.trigger(\r\n                                'mousemove',\r\n                                {\r\n                                    connectTrigger: true,\r\n                                    zrenderX: grid.getX() + param.x * grid.getWidth(),\r\n                                    zrenderY: grid.getY() + param.y * grid.getHeight()\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                    else if (this._connected) {\r\n                        // 来自自己，并且存在多图联动，空间坐标映射修改参数分发\r\n                        var grid = this.component.grid;\r\n                        if (grid) {\r\n                            param.x = (param.event.zrenderX - grid.getX()) / grid.getWidth();\r\n                            param.y = (param.event.zrenderY - grid.getY()) / grid.getHeight();\r\n                        }\r\n                    }\r\n                    break;\r\n                /*\r\n                case ecConfig.EVENT.RESIZE :\r\n                case ecConfig.EVENT.DATA_CHANGED :\r\n                case ecConfig.EVENT.PIE_SELECTED :\r\n                case ecConfig.EVENT.MAP_SELECTED :\r\n                    break;\r\n                */\r\n            }\r\n\r\n            // 多图联动，只做自己的一级事件分发，避免级联事件循环\r\n            if (this._connected && fromMyself && this._curEventType === param.type) {\r\n                for (var c in this._connected) {\r\n                    this._connected[c].connectedEventHandler(param);\r\n                }\r\n                // 分发完毕后复位\r\n                this._curEventType = null;\r\n            }\r\n\r\n            if (!fromMyself || (!this._connected && fromMyself)) {  // 处理了完联动事件复位\r\n                this._curEventType = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 点击事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onclick: function (param) {\r\n            callChartListMethodReverse(this, 'onclick', param);\r\n\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.CLICK,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 双击事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _ondblclick: function (param) {\r\n            callChartListMethodReverse(this, 'ondblclick', param);\r\n\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.DBLCLICK,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 鼠标移入事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onmouseover: function (param) {\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.HOVER,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 鼠标移出事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onmouseout: function (param) {\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.MOUSEOUT,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragstart: function (param) {\r\n            // 复位用于图表间通信拖拽标识\r\n            this._status = {\r\n                dragIn: false,\r\n                dragOut: false,\r\n                needRefresh: false\r\n            };\r\n\r\n            callChartListMethodReverse(this, 'ondragstart', param);\r\n        },\r\n\r\n        /**\r\n         * dragging回调，可计算特性实现\r\n         */\r\n        _ondragenter: function (param) {\r\n            callChartListMethodReverse(this, 'ondragenter', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragover: function (param) {\r\n            callChartListMethodReverse(this, 'ondragover', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragleave: function (param) {\r\n            callChartListMethodReverse(this, 'ondragleave', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondrop: function (param) {\r\n            callChartListMethodReverse(this, 'ondrop', param, this._status);\r\n            this._island.ondrop(param, this._status);\r\n        },\r\n\r\n        /**\r\n         * dragdone回调 ，可计算特性实现\r\n         */\r\n        _ondragend: function (param) {\r\n            callChartListMethodReverse(this, 'ondragend', param, this._status);\r\n\r\n            this._timeline && this._timeline.ondragend(param, this._status);\r\n            this._island.ondragend(param, this._status);\r\n\r\n            // 发生过重计算\r\n            if (this._status.needRefresh) {\r\n                this._syncBackupData(this._option);\r\n\r\n                var messageCenter = this._messageCenter;\r\n                messageCenter.dispatch(\r\n                    ecConfig.EVENT.DATA_CHANGED,\r\n                    param.event,\r\n                    this._eventPackage(param.target),\r\n                    this\r\n                );\r\n                messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 图例选择响应\r\n         */\r\n        _onlegendSelected: function (param) {\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'onlegendSelected', param, this._status);\r\n\r\n            if (this._status.needRefresh) {\r\n                this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 数据区域缩放响应\r\n         */\r\n        _ondataZoom: function (param) {\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'ondataZoom', param, this._status);\r\n\r\n            if (this._status.needRefresh) {\r\n                this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 值域漫游响应\r\n         */\r\n        _ondataRange: function (param) {\r\n            this._clearEffect();\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'ondataRange', param, this._status);\r\n\r\n            // 没有相互影响，直接刷新即可\r\n            if (this._status.needRefresh) {\r\n                this._zr.refreshNextFrame();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 动态类型切换响应\r\n         */\r\n        _onmagicTypeChanged: function () {\r\n            this._clearEffect();\r\n            this._render(this._toolbox.getMagicOption());\r\n        },\r\n\r\n        /**\r\n         * 数据视图修改响应\r\n         */\r\n        _ondataViewChanged: function (param) {\r\n            this._syncBackupData(param.option);\r\n            this._messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_CHANGED,\r\n                null,\r\n                param,\r\n                this\r\n            );\r\n            this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n        },\r\n\r\n        /**\r\n         * tooltip与图表间通信\r\n         */\r\n        _tooltipHover: function (param) {\r\n            var tipShape = [];\r\n            callChartListMethodReverse(this, 'ontooltipHover', param, tipShape);\r\n        },\r\n\r\n        /**\r\n         * 还原\r\n         */\r\n        _onrestore: function () {\r\n            this.restore();\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        _onrefresh: function (param) {\r\n            this._refreshInside = true;\r\n            this.refresh(param);\r\n            this._refreshInside = false;\r\n        },\r\n\r\n        /**\r\n         * 数据修改后的反向同步dataZoom持有的备份数据\r\n         */\r\n        _syncBackupData: function (curOption) {\r\n            this.component.dataZoom && this.component.dataZoom.syncBackupData(curOption);\r\n        },\r\n\r\n        /**\r\n         * 打包Echarts层的事件附件\r\n         */\r\n        _eventPackage: function (target) {\r\n            if (target) {\r\n                var ecData = require('./util/ecData');\r\n\r\n                var seriesIndex = ecData.get(target, 'seriesIndex');\r\n                var dataIndex = ecData.get(target, 'dataIndex');\r\n\r\n                dataIndex = seriesIndex != -1 && this.component.dataZoom\r\n                            ? this.component.dataZoom.getRealDataIndex(\r\n                                seriesIndex,\r\n                                dataIndex\r\n                              )\r\n                            : dataIndex;\r\n                return {\r\n                    seriesIndex: seriesIndex,\r\n                    seriesName: (ecData.get(target, 'series') || {}).name,\r\n                    dataIndex: dataIndex,\r\n                    data: ecData.get(target, 'data'),\r\n                    name: ecData.get(target, 'name'),\r\n                    value: ecData.get(target, 'value'),\r\n                    special: ecData.get(target, 'special')\r\n                };\r\n            }\r\n            return;\r\n        },\r\n\r\n        _noDataCheck: function(magicOption) {\r\n            var series = magicOption.series;\r\n\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].type == ecConfig.CHART_TYPE_MAP\r\n                    || (series[i].data && series[i].data.length > 0)\r\n                    || (series[i].markPoint && series[i].markPoint.data && series[i].markPoint.data.length > 0)\r\n                    || (series[i].markLine && series[i].markLine.data && series[i].markLine.data.length > 0)\r\n                    || (series[i].nodes && series[i].nodes.length > 0)\r\n                    || (series[i].links && series[i].links.length > 0)\r\n                    || (series[i].matrix && series[i].matrix.length > 0)\r\n                    || (series[i].eventList && series[i].eventList.length > 0)\r\n                ) {\r\n                    return false;   // 存在任意数据则为非空数据\r\n                }\r\n            }\r\n            var loadOption = (this._option && this._option.noDataLoadingOption)\r\n                || this._themeConfig.noDataLoadingOption\r\n                || ecConfig.noDataLoadingOption\r\n                || {\r\n                    text: (this._option && this._option.noDataText)\r\n                          || this._themeConfig.noDataText\r\n                          || ecConfig.noDataText,\r\n                    effect: (this._option && this._option.noDataEffect)\r\n                            || this._themeConfig.noDataEffect\r\n                            || ecConfig.noDataEffect\r\n                };\r\n            // 空数据\r\n            this.clear();\r\n            this.showLoading(loadOption);\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * 图表渲染\r\n         */\r\n        _render: function (magicOption) {\r\n            this._mergeGlobalConifg(magicOption);\r\n\r\n            if (this._noDataCheck(magicOption)) {\r\n                return;\r\n            }\r\n\r\n            var bgColor = magicOption.backgroundColor;\r\n            if (bgColor) {\r\n                if (!_canvasSupported\r\n                    && bgColor.indexOf('rgba') != -1\r\n                ) {\r\n                    // IE6~8对RGBA的处理，filter会带来其他颜色的影响\r\n                    var cList = bgColor.split(',');\r\n                    this.dom.style.filter = 'alpha(opacity=' +\r\n                        cList[3].substring(0, cList[3].lastIndexOf(')')) * 100\r\n                        + ')';\r\n                    cList.length = 3;\r\n                    cList[0] = cList[0].replace('a', '');\r\n                    this.dom.style.backgroundColor = cList.join(',') + ')';\r\n                }\r\n                else {\r\n                    this.dom.style.backgroundColor = bgColor;\r\n                }\r\n            }\r\n\r\n            this._zr.clearAnimation();\r\n            this._chartList = [];\r\n\r\n            var chartLibrary = require('./chart');\r\n            var componentLibrary = require('./component');\r\n\r\n            if (magicOption.xAxis || magicOption.yAxis) {\r\n                magicOption.grid = magicOption.grid || {};\r\n                magicOption.dataZoom = magicOption.dataZoom || {};\r\n            }\r\n\r\n            var componentList = [\r\n                'title', 'legend', 'tooltip', 'dataRange', 'roamController',\r\n                'grid', 'dataZoom', 'xAxis', 'yAxis', 'polar'\r\n            ];\r\n\r\n            var ComponentClass;\r\n            var componentType;\r\n            var component;\r\n            for (var i = 0, l = componentList.length; i < l; i++) {\r\n                componentType = componentList[i];\r\n                component = this.component[componentType];\r\n\r\n                if (magicOption[componentType]) {\r\n                    if (component) {\r\n                        component.refresh && component.refresh(magicOption);\r\n                    }\r\n                    else {\r\n                        ComponentClass = componentLibrary.get(\r\n                            /^[xy]Axis$/.test(componentType) ? 'axis' : componentType\r\n                        );\r\n                        component = new ComponentClass(\r\n                            this._themeConfig, this._messageCenter, this._zr,\r\n                            magicOption, this, componentType\r\n                        );\r\n                        this.component[componentType] = component;\r\n                    }\r\n                    this._chartList.push(component);\r\n                }\r\n                else if (component) {\r\n                    component.dispose();\r\n                    this.component[componentType] = null;\r\n                    delete this.component[componentType];\r\n                }\r\n            }\r\n\r\n            var ChartClass;\r\n            var chartType;\r\n            var chart;\r\n            var chartMap = {};      // 记录已经初始化的图表\r\n            for (var i = 0, l = magicOption.series.length; i < l; i++) {\r\n                chartType = magicOption.series[i].type;\r\n                if (!chartType) {\r\n                    console.error('series[' + i + '] chart type has not been defined.');\r\n                    continue;\r\n                }\r\n\r\n                if (!chartMap[chartType]) {\r\n                    chartMap[chartType] = true;\r\n                    ChartClass = chartLibrary.get(chartType);\r\n                    if (ChartClass) {\r\n                        if (this.chart[chartType]) {\r\n                            chart = this.chart[chartType];\r\n                            chart.refresh(magicOption);\r\n                        }\r\n                        else {\r\n                            chart = new ChartClass(\r\n                                this._themeConfig, this._messageCenter, this._zr,\r\n                                magicOption, this\r\n                            );\r\n                        }\r\n                        this._chartList.push(chart);\r\n                        this.chart[chartType] = chart;\r\n                    }\r\n                    else {\r\n                        console.error(chartType + ' has not been required.');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 已有实例但新option不带这类图表的实例释放\r\n            for (chartType in this.chart) {\r\n                if (chartType != ecConfig.CHART_TYPE_ISLAND  && !chartMap[chartType]) {\r\n                    this.chart[chartType].dispose();\r\n                    this.chart[chartType] = null;\r\n                    delete this.chart[chartType];\r\n                }\r\n            }\r\n\r\n            this.component.grid && this.component.grid.refixAxisShape(this.component);\r\n\r\n            this._island.refresh(magicOption);\r\n            this._toolbox.refresh(magicOption);\r\n\r\n            magicOption.animation && !magicOption.renderAsImage\r\n                ? this._zr.refresh()\r\n                : this._zr.render();\r\n\r\n            var imgId = 'IMG' + this.id;\r\n            var img = document.getElementById(imgId);\r\n            if (magicOption.renderAsImage && _canvasSupported) {\r\n                // IE8- 不支持图片渲染形式\r\n                if (img) {\r\n                    // 已经渲染过则更新显示\r\n                    img.src = this.getDataURL(magicOption.renderAsImage);\r\n                }\r\n                else {\r\n                    // 没有渲染过插入img dom\r\n                    img = this.getImage(magicOption.renderAsImage);\r\n                    img.id = imgId;\r\n                    img.style.position = 'absolute';\r\n                    img.style.left = 0;\r\n                    img.style.top = 0;\r\n                    this.dom.firstChild.appendChild(img);\r\n                }\r\n                this.un();\r\n                this._zr.un();\r\n                this._disposeChartList();\r\n                this._zr.clear();\r\n            }\r\n            else if (img) {\r\n                // 删除可能存在的img\r\n                img.parentNode.removeChild(img);\r\n            }\r\n            img = null;\r\n\r\n            this._option = magicOption;\r\n        },\r\n\r\n        /**\r\n         * 还原\r\n         */\r\n        restore: function () {\r\n            this._clearEffect();\r\n            this._option = zrUtil.clone(this._optionRestore);\r\n            this._disposeChartList();\r\n            this._island.clear();\r\n            this._toolbox.reset(this._option, true);\r\n            this._render(this._option);\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         * @param {Object=} param，可选参数，用于附带option，内部同步用，外部不建议带入数据修改，无法同步\r\n         */\r\n        refresh: function (param) {\r\n            this._clearEffect();\r\n            param = param || {};\r\n            var magicOption = param.option;\r\n\r\n            // 外部调用的refresh且有option带入\r\n            if (!this._refreshInside && magicOption) {\r\n                // 做简单的差异合并去同步内部持有的数据克隆，不建议带入数据\r\n                // 开启数据区域缩放、拖拽重计算、数据视图可编辑模式情况下，当用户产生了数据变化后无法同步\r\n                // 如有带入option存在数据变化，请重新setOption\r\n                magicOption = this.getOption();\r\n                zrUtil.merge(magicOption, param.option, true);\r\n                zrUtil.merge(this._optionRestore, param.option, true);\r\n                this._toolbox.reset(magicOption);\r\n            }\r\n\r\n            this._island.refresh(magicOption);\r\n            this._toolbox.refresh(magicOption);\r\n\r\n            // 停止动画\r\n            this._zr.clearAnimation();\r\n            // 先来后到，安顺序刷新各种图表，图表内部refresh优化检查magicOption，无需更新则不更新~\r\n            for (var i = 0, l = this._chartList.length; i < l; i++) {\r\n                this._chartList[i].refresh && this._chartList[i].refresh(magicOption);\r\n            }\r\n            this.component.grid && this.component.grid.refixAxisShape(this.component);\r\n            this._zr.refresh();\r\n        },\r\n\r\n        /**\r\n         * 释放图表实例\r\n         */\r\n        _disposeChartList: function () {\r\n            this._clearEffect();\r\n\r\n            // 停止动画\r\n            this._zr.clearAnimation();\r\n\r\n            var len = this._chartList.length;\r\n            while (len--) {\r\n                var chart = this._chartList[len];\r\n\r\n                if (chart) {\r\n                    var chartType = chart.type;\r\n                    this.chart[chartType] && delete this.chart[chartType];\r\n                    this.component[chartType] && delete this.component[chartType];\r\n                    chart.dispose && chart.dispose();\r\n                }\r\n            }\r\n\r\n            this._chartList = [];\r\n        },\r\n\r\n        /**\r\n         * 非图表全局属性merge~~\r\n         */\r\n        _mergeGlobalConifg: function (magicOption) {\r\n            var mergeList = [\r\n                // 背景颜色\r\n                'backgroundColor',\r\n\r\n                // 拖拽重计算相关\r\n                'calculable', 'calculableColor', 'calculableHolderColor',\r\n\r\n                // 孤岛显示连接符\r\n                'nameConnector', 'valueConnector',\r\n\r\n                // 动画相关\r\n                'animation', 'animationThreshold',\r\n                'animationDuration', 'animationDurationUpdate',\r\n                'animationEasing', 'addDataAnimation',\r\n\r\n                // 默认标志图形类型列表\r\n                'symbolList',\r\n\r\n                // 降低图表内元素拖拽敏感度，单位ms，不建议外部干预\r\n                'DRAG_ENABLE_TIME'\r\n            ];\r\n\r\n            var len = mergeList.length;\r\n            while (len--) {\r\n                var mergeItem = mergeList[len];\r\n                if (magicOption[mergeItem] == null) {\r\n                    magicOption[mergeItem] = this._themeConfig[mergeItem] != null\r\n                        ? this._themeConfig[mergeItem]\r\n                        : ecConfig[mergeItem];\r\n                }\r\n            }\r\n\r\n            // 数值系列的颜色列表，不传则采用内置颜色，可配数组，借用zrender实例注入，会有冲突风险，先这样\r\n            var themeColor = magicOption.color;\r\n            if (!(themeColor && themeColor.length)) {\r\n                themeColor = this._themeConfig.color || ecConfig.color;\r\n            }\r\n\r\n            this._zr.getColor = function (idx) {\r\n                var zrColor = require('zrender/tool/color');\r\n                return zrColor.getColor(idx, themeColor);\r\n            };\r\n\r\n            if (!_canvasSupported) {\r\n                // 不支持Canvas的强制关闭动画\r\n                magicOption.animation = false;\r\n                magicOption.addDataAnimation = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 万能接口，配置图表实例任何可配置选项，多次调用时option选项做merge处理\r\n         * @param {Object} option\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并\r\n         */\r\n        setOption: function (option, notMerge) {\r\n            if (!option.timeline) {\r\n                return this._setOption(option, notMerge);\r\n            }\r\n            else {\r\n                return this._setTimelineOption(option);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 万能接口，配置图表实例任何可配置选项，多次调用时option选项做merge处理\r\n         * @param {Object} option\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并\r\n         * @param {boolean=} 默认false。keepTimeLine 表示从timeline组件调用而来，\r\n         *                   表示当前行为是timeline的数据切换，保持timeline，\r\n         *                   反之销毁timeline。 详见Issue #1601\r\n         */\r\n        _setOption: function (option, notMerge, keepTimeLine) {\r\n            if (!notMerge && this._option) {\r\n                this._option = zrUtil.merge(\r\n                    this.getOption(),\r\n                    zrUtil.clone(option),\r\n                    true\r\n                );\r\n            }\r\n            else {\r\n                this._option = zrUtil.clone(option);\r\n                !keepTimeLine && this._timeline && this._timeline.dispose();\r\n            }\r\n\r\n            this._optionRestore = zrUtil.clone(this._option);\r\n\r\n            if (!this._option.series || this._option.series.length === 0) {\r\n                this._zr.clear();\r\n                return;\r\n            }\r\n\r\n            if (this.component.dataZoom                         // 存在dataZoom控件\r\n                && (this._option.dataZoom                       // 并且新option也存在\r\n                    || (this._option.toolbox\r\n                        && this._option.toolbox.feature\r\n                        && this._option.toolbox.feature.dataZoom\r\n                        && this._option.toolbox.feature.dataZoom.show\r\n                    )\r\n                )\r\n            ) {\r\n                // dataZoom同步数据\r\n                this.component.dataZoom.syncOption(this._option);\r\n            }\r\n            this._toolbox.reset(this._option);\r\n            this._render(this._option);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 返回内部持有的当前显示option克隆\r\n         */\r\n        getOption: function () {\r\n            var magicOption = zrUtil.clone(this._option);\r\n\r\n            var self = this;\r\n            function restoreOption(prop) {\r\n                var restoreSource = self._optionRestore[prop];\r\n\r\n                if (restoreSource) {\r\n                    if (restoreSource instanceof Array) {\r\n                        var len = restoreSource.length;\r\n                        while (len--) {\r\n                            magicOption[prop][len].data = zrUtil.clone(\r\n                                restoreSource[len].data\r\n                            );\r\n                        }\r\n                    }\r\n                    else {\r\n                        magicOption[prop].data = zrUtil.clone(restoreSource.data);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 横轴数据还原\r\n            restoreOption('xAxis');\r\n\r\n            // 纵轴数据还原\r\n            restoreOption('yAxis');\r\n\r\n            // 系列数据还原\r\n            restoreOption('series');\r\n\r\n            return magicOption;\r\n        },\r\n\r\n        /**\r\n         * 数据设置快捷接口\r\n         * @param {Array} series\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并。\r\n         */\r\n        setSeries: function (series, notMerge) {\r\n            if (!notMerge) {\r\n                this.setOption({series: series});\r\n            }\r\n            else {\r\n                this._option.series = series;\r\n                this.setOption(this._option, notMerge);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 返回内部持有的当前显示series克隆\r\n         */\r\n        getSeries: function () {\r\n            return this.getOption().series;\r\n        },\r\n\r\n        /**\r\n         * timelineOption接口，配置图表实例任何可配置选项\r\n         * @param {Object} option\r\n         */\r\n        _setTimelineOption: function(option) {\r\n            this._timeline && this._timeline.dispose();\r\n            var Timeline = require('./component/timeline');\r\n            var timeline = new Timeline(\r\n                this._themeConfig, this._messageCenter, this._zr, option, this\r\n            );\r\n            this._timeline = timeline;\r\n            this.component.timeline = this._timeline;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态数据添加\r\n         * 形参为单组数据参数，多组时为数据，内容同[seriesIdx, data, isShift, additionData]\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {number | Object} data 增加数据\r\n         * @param {boolean=} isHead 是否队头加入，默认，不指定或false时为队尾插入\r\n         * @param {boolean=} dataGrow 是否增长数据队列长度，默认，不指定或false时移出目标数组对位数据\r\n         * @param {string=} additionData 是否增加类目轴(饼图为图例)数据，附加操作同isHead和dataGrow\r\n         */\r\n        addData: function (seriesIdx, data, isHead, dataGrow, additionData) {\r\n            var params = seriesIdx instanceof Array\r\n                ? seriesIdx\r\n                : [[seriesIdx, data, isHead, dataGrow, additionData]];\r\n\r\n            //this._optionRestore 和 magicOption 都要同步\r\n            var magicOption = this.getOption();\r\n            var optionRestore = this._optionRestore;\r\n            var self = this;\r\n            for (var i = 0, l = params.length; i < l; i++) {\r\n                seriesIdx = params[i][0];\r\n                data = params[i][1];\r\n                isHead = params[i][2];\r\n                dataGrow = params[i][3];\r\n                additionData = params[i][4];\r\n\r\n                var seriesItem = optionRestore.series[seriesIdx];\r\n                var inMethod = isHead ? 'unshift' : 'push';\r\n                var outMethod = isHead ? 'pop' : 'shift';\r\n                if (seriesItem) {\r\n                    var seriesItemData = seriesItem.data;\r\n                    var mSeriesItemData = magicOption.series[seriesIdx].data;\r\n\r\n                    seriesItemData[inMethod](data);\r\n                    mSeriesItemData[inMethod](data);\r\n                    if (!dataGrow) {\r\n                        seriesItemData[outMethod]();\r\n                        data = mSeriesItemData[outMethod]();\r\n                    }\r\n\r\n                    if (additionData != null) {\r\n                        var legend;\r\n                        var legendData;\r\n\r\n                        if (seriesItem.type === ecConfig.CHART_TYPE_PIE\r\n                            && (legend = optionRestore.legend)\r\n                            && (legendData = legend.data)\r\n                        ) {\r\n                            var mLegendData = magicOption.legend.data;\r\n                            legendData[inMethod](additionData);\r\n                            mLegendData[inMethod](additionData);\r\n\r\n                            if (!dataGrow) {\r\n                                var legendDataIdx = zrUtil.indexOf(legendData, data.name);\r\n                                legendDataIdx != -1 && legendData.splice(legendDataIdx, 1);\r\n\r\n                                legendDataIdx = zrUtil.indexOf(mLegendData, data.name);\r\n                                legendDataIdx != -1 && mLegendData.splice(legendDataIdx, 1);\r\n                            }\r\n                        }\r\n                        else if (optionRestore.xAxis != null && optionRestore.yAxis != null) {\r\n                            // x轴类目\r\n                            var axisData;\r\n                            var mAxisData;\r\n                            var axisIdx = seriesItem.xAxisIndex || 0;\r\n\r\n                            if (optionRestore.xAxis[axisIdx].type == null\r\n                                || optionRestore.xAxis[axisIdx].type === 'category'\r\n                            ) {\r\n                                axisData = optionRestore.xAxis[axisIdx].data;\r\n                                mAxisData = magicOption.xAxis[axisIdx].data;\r\n\r\n                                axisData[inMethod](additionData);\r\n                                mAxisData[inMethod](additionData);\r\n                                if (!dataGrow) {\r\n                                    axisData[outMethod]();\r\n                                    mAxisData[outMethod]();\r\n                                }\r\n                            }\r\n\r\n                            // y轴类目\r\n                            axisIdx = seriesItem.yAxisIndex || 0;\r\n                            if (optionRestore.yAxis[axisIdx].type === 'category') {\r\n                                axisData = optionRestore.yAxis[axisIdx].data;\r\n                                mAxisData = magicOption.yAxis[axisIdx].data;\r\n\r\n                                axisData[inMethod](additionData);\r\n                                mAxisData[inMethod](additionData);\r\n                                if (!dataGrow) {\r\n                                    axisData[outMethod]();\r\n                                    mAxisData[outMethod]();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 同步图表内状态，动画需要\r\n                    this._option.series[seriesIdx].data = magicOption.series[seriesIdx].data;\r\n                }\r\n            }\r\n\r\n            this._zr.clearAnimation();\r\n            var chartList = this._chartList;\r\n            var chartAnimationCount = 0;\r\n            var chartAnimationDone = function () {\r\n                chartAnimationCount--;\r\n                if (chartAnimationCount === 0) {\r\n                    animationDone();\r\n                }\r\n            };\r\n            for (var i = 0, l = chartList.length; i < l; i++) {\r\n                if (magicOption.addDataAnimation && chartList[i].addDataAnimation) {\r\n                    chartAnimationCount++;\r\n                    chartList[i].addDataAnimation(params, chartAnimationDone);\r\n                }\r\n            }\r\n\r\n            // dataZoom同步数据\r\n            this.component.dataZoom && this.component.dataZoom.syncOption(magicOption);\r\n\r\n            this._option = magicOption;\r\n            function animationDone() {\r\n                if (!self._zr) {\r\n                    return; // 已经被释放\r\n                }\r\n                self._zr.clearAnimation();\r\n                for (var i = 0, l = chartList.length; i < l; i++) {\r\n                    // 有addData动画就去掉过渡动画\r\n                    chartList[i].motionlessOnce =\r\n                        magicOption.addDataAnimation && chartList[i].addDataAnimation;\r\n                }\r\n                self._messageCenter.dispatch(\r\n                    ecConfig.EVENT.REFRESH,\r\n                    null,\r\n                    {option: magicOption},\r\n                    self\r\n                );\r\n            }\r\n\r\n            if (!magicOption.addDataAnimation) {\r\n                setTimeout(animationDone, 0);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态[标注 | 标线]添加\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {Object} markData [标注 | 标线]对象，支持多个\r\n         */\r\n        addMarkPoint: function (seriesIdx, markData) {\r\n            return this._addMark(seriesIdx, markData, 'markPoint');\r\n        },\r\n\r\n        addMarkLine: function (seriesIdx, markData) {\r\n            return this._addMark(seriesIdx, markData, 'markLine');\r\n        },\r\n\r\n        _addMark: function (seriesIdx, markData, markType) {\r\n            var series = this._option.series;\r\n            var seriesItem;\r\n\r\n            if (series && (seriesItem = series[seriesIdx])) {\r\n                var seriesR = this._optionRestore.series;\r\n                var seriesRItem = seriesR[seriesIdx];\r\n                var markOpt = seriesItem[markType];\r\n                var markOptR = seriesRItem[markType];\r\n\r\n                markOpt = seriesItem[markType] = markOpt || {data: []};\r\n                markOptR = seriesRItem[markType] = markOptR || {data: []};\r\n\r\n                for (var key in markData) {\r\n                    if (key === 'data') {\r\n                        // 数据concat\r\n                        markOpt.data = markOpt.data.concat(markData.data);\r\n                        markOptR.data = markOptR.data.concat(markData.data);\r\n                    }\r\n                    else if (typeof markData[key] != 'object' || markOpt[key] == null) {\r\n                        // 简单类型或新值直接赋值\r\n                        markOpt[key] = markOptR[key] = markData[key];\r\n                    }\r\n                    else {\r\n                        // 非数据的复杂对象merge\r\n                        zrUtil.merge(markOpt[key], markData[key], true);\r\n                        zrUtil.merge(markOptR[key], markData[key], true);\r\n                    }\r\n                }\r\n\r\n                var chart = this.chart[seriesItem.type];\r\n                chart && chart.addMark(seriesIdx, markData, markType);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态[标注 | 标线]删除\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {string} markName [标注 | 标线]名称\r\n         */\r\n        delMarkPoint: function (seriesIdx, markName) {\r\n            return this._delMark(seriesIdx, markName, 'markPoint');\r\n        },\r\n\r\n        delMarkLine: function (seriesIdx, markName) {\r\n            return this._delMark(seriesIdx, markName, 'markLine');\r\n        },\r\n\r\n        _delMark: function (seriesIdx, markName, markType) {\r\n            var series = this._option.series;\r\n            var seriesItem;\r\n            var mark;\r\n            var dataArray;\r\n\r\n            if (!(\r\n                    series\r\n                    && (seriesItem = series[seriesIdx])\r\n                    && (mark = seriesItem[markType])\r\n                    && (dataArray = mark.data)\r\n                )\r\n            ) {\r\n                return this;\r\n            }\r\n\r\n            markName = markName.split(' > ');\r\n            var targetIndex = -1;\r\n\r\n            for (var i = 0, l = dataArray.length; i < l; i++) {\r\n                var dataItem = dataArray[i];\r\n                if (dataItem instanceof Array) {\r\n                    if (dataItem[0].name === markName[0]\r\n                        && dataItem[1].name === markName[1]\r\n                    ) {\r\n                        targetIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                else if (dataItem.name === markName[0]) {\r\n                    targetIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (targetIndex > -1) {\r\n                dataArray.splice(targetIndex, 1);\r\n                this._optionRestore.series[seriesIdx][markType].data.splice(targetIndex, 1);\r\n\r\n                var chart = this.chart[seriesItem.type];\r\n                chart && chart.delMark(seriesIdx, markName.join(' > '), markType);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 获取当前dom\r\n         */\r\n        getDom: function () {\r\n            return this.dom;\r\n        },\r\n\r\n        /**\r\n         * 获取当前zrender实例，可用于添加额为的shape和深度控制\r\n         */\r\n        getZrender: function () {\r\n            return this._zr;\r\n        },\r\n\r\n        /**\r\n         * 获取Base64图片dataURL\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return imgDataURL\r\n         */\r\n        getDataURL: function (imgType) {\r\n            if (!_canvasSupported) {\r\n                return '';\r\n            }\r\n\r\n            if (this._chartList.length === 0) {\r\n                // 渲染为图片\r\n                var imgId = 'IMG' + this.id;\r\n                var img = document.getElementById(imgId);\r\n                if (img) {\r\n                    return img.src;\r\n                }\r\n            }\r\n\r\n            // 清除可能存在的tooltip元素\r\n            var tooltip = this.component.tooltip;\r\n            tooltip && tooltip.hideTip();\r\n\r\n            switch (imgType) {\r\n                case 'jpeg':\r\n                    break;\r\n                default:\r\n                    imgType = 'png';\r\n            }\r\n\r\n            var bgColor = this._option.backgroundColor;\r\n            if (bgColor && bgColor.replace(' ','') === 'rgba(0,0,0,0)') {\r\n                bgColor = '#fff';\r\n            }\r\n\r\n            return this._zr.toDataURL('image/' + imgType, bgColor);\r\n        },\r\n\r\n        /**\r\n         * 获取img\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return img dom\r\n         */\r\n        getImage: function (imgType) {\r\n            var title = this._optionRestore.title;\r\n            var imgDom = document.createElement('img');\r\n            imgDom.src = this.getDataURL(imgType);\r\n            imgDom.title = (title && title.text) || 'ECharts';\r\n            return imgDom;\r\n        },\r\n\r\n        /**\r\n         * 获取多图联动的Base64图片dataURL\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return imgDataURL\r\n         */\r\n        getConnectedDataURL: function (imgType) {\r\n            if (!this.isConnected()) {\r\n                return this.getDataURL(imgType);\r\n            }\r\n\r\n            var tempDom = this.dom;\r\n            var imgList = {\r\n                'self': {\r\n                    img: this.getDataURL(imgType),\r\n                    left: tempDom.offsetLeft,\r\n                    top: tempDom.offsetTop,\r\n                    right: tempDom.offsetLeft + tempDom.offsetWidth,\r\n                    bottom: tempDom.offsetTop + tempDom.offsetHeight\r\n                }\r\n            };\r\n\r\n            var minLeft = imgList.self.left;\r\n            var minTop = imgList.self.top;\r\n            var maxRight = imgList.self.right;\r\n            var maxBottom = imgList.self.bottom;\r\n\r\n            for (var c in this._connected) {\r\n                tempDom = this._connected[c].getDom();\r\n                imgList[c] = {\r\n                    img: this._connected[c].getDataURL(imgType),\r\n                    left: tempDom.offsetLeft,\r\n                    top: tempDom.offsetTop,\r\n                    right: tempDom.offsetLeft + tempDom.offsetWidth,\r\n                    bottom: tempDom.offsetTop + tempDom.offsetHeight\r\n                };\r\n\r\n                minLeft = Math.min(minLeft, imgList[c].left);\r\n                minTop = Math.min(minTop, imgList[c].top);\r\n                maxRight = Math.max(maxRight, imgList[c].right);\r\n                maxBottom = Math.max(maxBottom, imgList[c].bottom);\r\n            }\r\n\r\n            var zrDom = document.createElement('div');\r\n            zrDom.style.position = 'absolute';\r\n            zrDom.style.left = '-4000px';\r\n            zrDom.style.width = (maxRight - minLeft) + 'px';\r\n            zrDom.style.height = (maxBottom - minTop) + 'px';\r\n            document.body.appendChild(zrDom);\r\n\r\n            var zrImg = require('zrender').init(zrDom);\r\n\r\n            var ImageShape = require('zrender/shape/Image');\r\n            for (var c in imgList) {\r\n                zrImg.addShape(new ImageShape({\r\n                    style: {\r\n                        x: imgList[c].left - minLeft,\r\n                        y: imgList[c].top - minTop,\r\n                        image: imgList[c].img\r\n                    }\r\n                }));\r\n            }\r\n\r\n            zrImg.render();\r\n            var bgColor = this._option.backgroundColor;\r\n            if (bgColor && bgColor.replace(/ /g, '') === 'rgba(0,0,0,0)') {\r\n                bgColor = '#fff';\r\n            }\r\n\r\n            var image = zrImg.toDataURL('image/png', bgColor);\r\n\r\n            setTimeout(function () {\r\n                zrImg.dispose();\r\n                zrDom.parentNode.removeChild(zrDom);\r\n                zrDom = null;\r\n            }, 100);\r\n\r\n            return image;\r\n        },\r\n\r\n        /**\r\n         * 获取多图联动的img\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return img dom\r\n         */\r\n        getConnectedImage: function (imgType) {\r\n            var title = this._optionRestore.title;\r\n            var imgDom = document.createElement('img');\r\n            imgDom.src = this.getConnectedDataURL(imgType);\r\n            imgDom.title = (title && title.text) || 'ECharts';\r\n            return imgDom;\r\n        },\r\n\r\n        /**\r\n         * 外部接口绑定事件\r\n         * @param {Object} eventName 事件名称\r\n         * @param {Object} eventListener 事件响应函数\r\n         */\r\n        on: function (eventName, eventListener) {\r\n            this._messageCenterOutSide.bind(eventName, eventListener, this);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 外部接口解除事件绑定\r\n         * @param {Object} eventName 事件名称\r\n         * @param {Object} eventListener 事件响应函数\r\n         */\r\n        un: function (eventName, eventListener) {\r\n            this._messageCenterOutSide.unbind(eventName, eventListener);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 多图联动\r\n         * @param connectTarget{ECharts | Array <ECharts>} connectTarget 联动目标\r\n         */\r\n        connect: function (connectTarget) {\r\n            if (!connectTarget) {\r\n                return this;\r\n            }\r\n\r\n            if (!this._connected) {\r\n                this._connected = {};\r\n            }\r\n\r\n            if (connectTarget instanceof Array) {\r\n                for (var i = 0, l = connectTarget.length; i < l; i++) {\r\n                    this._connected[connectTarget[i].id] = connectTarget[i];\r\n                }\r\n            }\r\n            else {\r\n                this._connected[connectTarget.id] = connectTarget;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 解除多图联动\r\n         * @param connectTarget{ECharts | Array <ECharts>} connectTarget 解除联动目标\r\n         */\r\n        disConnect: function (connectTarget) {\r\n            if (!connectTarget || !this._connected) {\r\n                return this;\r\n            }\r\n\r\n            if (connectTarget instanceof Array) {\r\n                for (var i = 0, l = connectTarget.length; i < l; i++) {\r\n                    delete this._connected[connectTarget[i].id];\r\n                }\r\n            }\r\n            else {\r\n                delete this._connected[connectTarget.id];\r\n            }\r\n\r\n            for (var k in this._connected) {\r\n                return k, this; // 非空\r\n            }\r\n\r\n            // 空，转为标志位\r\n            this._connected = false;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 联动事件响应\r\n         */\r\n        connectedEventHandler: function (param) {\r\n            if (param.__echartsId != this.id) {\r\n                // 来自其他联动图表的事件\r\n                this._onevent(param);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 是否存在多图联动\r\n         */\r\n        isConnected: function () {\r\n            return !!this._connected;\r\n        },\r\n\r\n        /**\r\n         * 显示loading过渡\r\n         * @param {Object} loadingOption\r\n         */\r\n        showLoading: function (loadingOption) {\r\n            var effectList = {\r\n                bar: require('zrender/loadingEffect/Bar'),\r\n                bubble: require('zrender/loadingEffect/Bubble'),\r\n                dynamicLine: require('zrender/loadingEffect/DynamicLine'),\r\n                ring: require('zrender/loadingEffect/Ring'),\r\n                spin: require('zrender/loadingEffect/Spin'),\r\n                whirling: require('zrender/loadingEffect/Whirling')\r\n            };\r\n            this._toolbox.hideDataView();\r\n\r\n            loadingOption = loadingOption || {};\r\n\r\n            var textStyle = loadingOption.textStyle || {};\r\n            loadingOption.textStyle = textStyle;\r\n\r\n            var finalTextStyle = zrUtil.merge(\r\n                zrUtil.merge(\r\n                    zrUtil.clone(textStyle),\r\n                    this._themeConfig.textStyle\r\n                ),\r\n                ecConfig.textStyle\r\n            );\r\n\r\n            textStyle.textFont = finalTextStyle.fontStyle + ' '\r\n                                 + finalTextStyle.fontWeight + ' '\r\n                                 + finalTextStyle.fontSize + 'px '\r\n                                 + finalTextStyle.fontFamily;\r\n\r\n            textStyle.text = loadingOption.text\r\n                             || (this._option && this._option.loadingText)\r\n                             || this._themeConfig.loadingText\r\n                             || ecConfig.loadingText;\r\n\r\n            if (loadingOption.x != null) {\r\n                textStyle.x = loadingOption.x;\r\n            }\r\n            if (loadingOption.y != null) {\r\n                textStyle.y = loadingOption.y;\r\n            }\r\n\r\n            loadingOption.effectOption = loadingOption.effectOption || {};\r\n            loadingOption.effectOption.textStyle = textStyle;\r\n\r\n            var Effect = loadingOption.effect;\r\n            if (typeof Effect === 'string' || Effect == null) {\r\n                Effect =  effectList[\r\n                              loadingOption.effect\r\n                              || (this._option && this._option.loadingEffect)\r\n                              || this._themeConfig.loadingEffect\r\n                              || ecConfig.loadingEffect\r\n                          ]\r\n                          || effectList.spin;\r\n            }\r\n            this._zr.showLoading(new Effect(loadingOption.effectOption));\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 隐藏loading过渡\r\n         */\r\n        hideLoading: function () {\r\n            this._zr.hideLoading();\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 主题设置\r\n         */\r\n        setTheme: function (theme) {\r\n            if (theme) {\r\n               if (typeof theme === 'string') {\r\n                    // 默认主题\r\n                    switch (theme) {\r\n                        case 'macarons':\r\n                            theme = require('./theme/macarons');\r\n                            break;\r\n                        case 'infographic':\r\n                            theme = require('./theme/infographic');\r\n                            break;\r\n                        default:\r\n                            theme = {}; // require('./theme/default');\r\n                    }\r\n                }\r\n                else {\r\n                    theme = theme || {};\r\n                }\r\n\r\n                // // 复位默认配置\r\n                // // this._themeConfig会被别的对象引用持有\r\n                // // 所以不能改成this._themeConfig = {};\r\n                // for (var key in this._themeConfig) {\r\n                //     delete this._themeConfig[key];\r\n                // }\r\n                // for (var key in ecConfig) {\r\n                //     this._themeConfig[key] = zrUtil.clone(ecConfig[key]);\r\n                // }\r\n\r\n                // // 颜色数组随theme，不merge\r\n                // theme.color && (this._themeConfig.color = []);\r\n\r\n                // // 默认标志图形类型列表，不merge\r\n                // theme.symbolList && (this._themeConfig.symbolList = []);\r\n\r\n                // // 应用新主题\r\n                // zrUtil.merge(this._themeConfig, zrUtil.clone(theme), true);\r\n                this._themeConfig = theme;\r\n            }\r\n\r\n            if (!_canvasSupported) {   // IE8-\r\n                var textStyle = this._themeConfig.textStyle;\r\n                textStyle && textStyle.fontFamily && textStyle.fontFamily2\r\n                    && (textStyle.fontFamily = textStyle.fontFamily2);\r\n\r\n                textStyle = ecConfig.textStyle;\r\n                textStyle.fontFamily = textStyle.fontFamily2;\r\n            }\r\n\r\n            this._timeline && this._timeline.setTheme(true);\r\n            this._optionRestore && this.restore();\r\n        },\r\n\r\n        /**\r\n         * 视图区域大小变化更新，不默认绑定，供使用方按需调用\r\n         */\r\n        resize: function () {\r\n            var self = this;\r\n            return function(){\r\n                self._clearEffect();\r\n                self._zr.resize();\r\n                if (self._option && self._option.renderAsImage && _canvasSupported) {\r\n                    // 渲染为图片重走render模式\r\n                    self._render(self._option);\r\n                    return self;\r\n                }\r\n                // 停止动画\r\n                self._zr.clearAnimation();\r\n                self._island.resize();\r\n                self._toolbox.resize();\r\n                self._timeline && self._timeline.resize();\r\n                // 先来后到，不能仅刷新自己，也不能在上一个循环中刷新，如坐标系数据改变会影响其他图表的大小\r\n                // 所以安顺序刷新各种图表，图表内部refresh优化无需更新则不更新~\r\n                for (var i = 0, l = self._chartList.length; i < l; i++) {\r\n                    self._chartList[i].resize && self._chartList[i].resize();\r\n                }\r\n                self.component.grid && self.component.grid.refixAxisShape(self.component);\r\n                self._zr.refresh();\r\n                self._messageCenter.dispatch(ecConfig.EVENT.RESIZE, null, null, self);\r\n                return self;\r\n            };\r\n        },\r\n\r\n        _clearEffect: function() {\r\n            this._zr.modLayer(ecConfig.EFFECT_ZLEVEL, { motionBlur: false });\r\n            this._zr.painter.clearLayer(ecConfig.EFFECT_ZLEVEL);\r\n        },\r\n\r\n        /**\r\n         * 清除已渲染内容 ，clear后echarts实例可用\r\n         */\r\n        clear: function () {\r\n            this._disposeChartList();\r\n            this._zr.clear();\r\n            this._option = {};\r\n            this._optionRestore = {};\r\n            this.dom.style.backgroundColor = null;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 释放，dispose后echarts实例不可用\r\n         */\r\n        dispose: function () {\r\n            var key = this.dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n            key && delete _instances[key];\r\n\r\n            this._island.dispose();\r\n            this._toolbox.dispose();\r\n            this._timeline && this._timeline.dispose();\r\n            this._messageCenter.unbind();\r\n            this.clear();\r\n            this._zr.dispose();\r\n            this._zr = null;\r\n        }\r\n    };\r\n\r\n    return self;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/echarts.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\r\n * echart图表库\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n */\r\ndefine(function (/*require*/) {     //chart\r\n    var self = {};\r\n\r\n    var _chartLibrary = {};         //echart图表库\r\n\r\n    /**\r\n     * 定义图形实现\r\n     * @param {Object} name\r\n     * @param {Object} clazz 图形实现\r\n     */\r\n    self.define = function (name, clazz) {\r\n        _chartLibrary[name] = clazz;\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * 获取图形实现\r\n     * @param {Object} name\r\n     */\r\n    self.get = function (name) {\r\n        return _chartLibrary[name];\r\n    };\r\n\r\n    return self;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/chart.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\r\n * echarts默认配置项\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function() {\r\n    // 请原谅我这样写，这显然可以直接返回个对象，但那样的话outline就显示不出来了~~\r\n    var config = {\r\n        // 图表类型\r\n        CHART_TYPE_LINE: 'line',\r\n        CHART_TYPE_BAR: 'bar',\r\n        CHART_TYPE_SCATTER: 'scatter',\r\n        CHART_TYPE_PIE: 'pie',\r\n        CHART_TYPE_RADAR: 'radar',\r\n        CHART_TYPE_VENN: 'venn',\r\n        CHART_TYPE_TREEMAP: 'treemap',\r\n        CHART_TYPE_TREE: 'tree',\r\n        CHART_TYPE_MAP: 'map',\r\n        CHART_TYPE_K: 'k',\r\n        CHART_TYPE_ISLAND: 'island',\r\n        CHART_TYPE_FORCE: 'force',\r\n        CHART_TYPE_CHORD: 'chord',\r\n        CHART_TYPE_GAUGE: 'gauge',\r\n        CHART_TYPE_FUNNEL: 'funnel',\r\n        CHART_TYPE_EVENTRIVER: 'eventRiver',\r\n        CHART_TYPE_WORDCLOUD: 'wordCloud',\r\n\r\n        // 组件类型\r\n        COMPONENT_TYPE_TITLE: 'title',\r\n        COMPONENT_TYPE_LEGEND: 'legend',\r\n        COMPONENT_TYPE_DATARANGE: 'dataRange',\r\n        COMPONENT_TYPE_DATAVIEW: 'dataView',\r\n        COMPONENT_TYPE_DATAZOOM: 'dataZoom',\r\n        COMPONENT_TYPE_TOOLBOX: 'toolbox',\r\n        COMPONENT_TYPE_TOOLTIP: 'tooltip',\r\n        COMPONENT_TYPE_GRID: 'grid',\r\n        COMPONENT_TYPE_AXIS: 'axis',\r\n        COMPONENT_TYPE_POLAR: 'polar',\r\n        COMPONENT_TYPE_X_AXIS: 'xAxis',\r\n        COMPONENT_TYPE_Y_AXIS: 'yAxis',\r\n        COMPONENT_TYPE_AXIS_CATEGORY: 'categoryAxis',\r\n        COMPONENT_TYPE_AXIS_VALUE: 'valueAxis',\r\n        COMPONENT_TYPE_TIMELINE: 'timeline',\r\n        COMPONENT_TYPE_ROAMCONTROLLER: 'roamController',\r\n\r\n        // 全图默认背景\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        \r\n        // 默认色板\r\n        color: ['#ff7f50','#87cefa','#da70d6','#32cd32','#6495ed',\r\n                '#ff69b4','#ba55d3','#cd5c5c','#ffa500','#40e0d0',\r\n                '#1e90ff','#ff6347','#7b68ee','#00fa9a','#ffd700',\r\n                '#6699FF','#ff6666','#3cb371','#b8860b','#30e0e0'],\r\n\r\n        markPoint: {\r\n            clickable: true,\r\n            symbol: 'pin',         // 标注类型\r\n            symbolSize: 10,        // 标注大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n            // symbolRotate: null, // 标注旋转控制\r\n            large: false,\r\n            effect: {\r\n                show: false,\r\n                loop: true,\r\n                period: 15,             // 运动周期，无单位，值越大越慢\r\n                type: 'scale',          // 可用为 scale | bounce\r\n                scaleSize: 2,           // 放大倍数，以markPoint点size为基准\r\n                bounceDistance: 10     // 跳动距离，单位px\r\n                // color: 'gold',\r\n                // shadowColor: 'rgba(255,215,0,0.8)',\r\n                // shadowBlur: 0          // 炫光模糊\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    // color: 各异，\r\n                    // borderColor: 各异,        // 标注边线颜色，优先于color \r\n                    borderWidth: 2,             // 标注边线线宽，单位px，默认为1\r\n                    label: {\r\n                        show: true,\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        position: 'inside'      // 可选为'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    }\r\n                },\r\n                emphasis: {\r\n                    // color: 各异\r\n                    label: {\r\n                        show: true\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // position: 'inside'  // 'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null     // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        markLine: {\r\n            clickable: true,\r\n            // 标线起始和结束的symbol介绍类型，如果都一样，可以直接传string\r\n            symbol: ['circle', 'arrow'],\r\n            // 标线起始和结束的symbol大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n            symbolSize: [2, 4],\r\n            // 标线起始和结束的symbol旋转控制\r\n            //symbolRotate: null,\r\n            //smooth: false,\r\n            smoothness: 0.2,    // 平滑度\r\n            precision: 2,\r\n            effect: {\r\n                show: false,\r\n                loop: true,\r\n                period: 15,                     // 运动周期，无单位，值越大越慢\r\n                scaleSize: 2                    // 放大倍数，以markLine线lineWidth为基准\r\n                // color: 'gold',\r\n                // shadowColor: 'rgba(255,215,0,0.8)',\r\n                // shadowBlur: lineWidth * 2    // 炫光模糊，默认等于scaleSize计算所得\r\n            },\r\n            // 边捆绑\r\n            bundling: {\r\n                enable: false,\r\n                // [0, 90]\r\n                maxTurningAngle: 45\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    // color: 各异,               // 标线主色，线色，symbol主色\r\n                    // borderColor: 随color,     // 标线symbol边框颜色，优先于color \r\n                    borderWidth: 1.5,           // 标线symbol边框线宽，单位px，默认为2\r\n                    label: {\r\n                        show: true,\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // 可选为 'start'|'end'|'left'|'right'|'top'|'bottom'\r\n                        position: 'end'\r\n                        // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    },\r\n                    lineStyle: {\r\n                        // color: 随borderColor, // 主色，线色，优先级高于borderColor和color\r\n                        // width: 随borderWidth, // 优先于borderWidth\r\n                        type: 'dashed'\r\n                        // shadowColor: 'rgba(0,0,0,0)', //默认透明\r\n                        // shadowBlur: 0,\r\n                        // shadowOffsetX: 0,\r\n                        // shadowOffsetY: 0\r\n                    }\r\n                },\r\n                emphasis: {\r\n                    // color: 各异\r\n                    label: {\r\n                        show: false\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // position: 'inside' // 'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null    // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    },\r\n                    lineStyle: {}\r\n                }\r\n            }\r\n        },\r\n\r\n        // 主题，主题\r\n        textStyle: {\r\n            decoration: 'none',\r\n            fontFamily: 'Arial, Verdana, sans-serif',\r\n            fontFamily2: '微软雅黑',    // IE8- 字体模糊并且，不支持不同字体混排，额外指定一份\r\n            fontSize: 12,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal'\r\n        },\r\n\r\n        EVENT: {\r\n            // -------全局通用\r\n            REFRESH: 'refresh',\r\n            RESTORE: 'restore',\r\n            RESIZE: 'resize',\r\n            CLICK: 'click',\r\n            DBLCLICK: 'dblclick',\r\n            HOVER: 'hover',\r\n            MOUSEOUT: 'mouseout',\r\n            //MOUSEWHEEL: 'mousewheel',\r\n            // -------业务交互逻辑\r\n            DATA_CHANGED: 'dataChanged',\r\n            DATA_ZOOM: 'dataZoom',\r\n            DATA_RANGE: 'dataRange',\r\n            DATA_RANGE_SELECTED: 'dataRangeSelected',\r\n            DATA_RANGE_HOVERLINK: 'dataRangeHoverLink',\r\n            LEGEND_SELECTED: 'legendSelected',\r\n            LEGEND_HOVERLINK: 'legendHoverLink',\r\n            MAP_SELECTED: 'mapSelected',\r\n            PIE_SELECTED: 'pieSelected',\r\n            MAGIC_TYPE_CHANGED: 'magicTypeChanged',\r\n            DATA_VIEW_CHANGED: 'dataViewChanged',\r\n            TIMELINE_CHANGED: 'timelineChanged',\r\n            MAP_ROAM: 'mapRoam',\r\n            FORCE_LAYOUT_END: 'forceLayoutEnd',\r\n            // -------内部通信\r\n            TOOLTIP_HOVER: 'tooltipHover',\r\n            TOOLTIP_IN_GRID: 'tooltipInGrid',\r\n            TOOLTIP_OUT_GRID: 'tooltipOutGrid',\r\n            ROAMCONTROLLER: 'roamController'\r\n        },\r\n        DRAG_ENABLE_TIME: 120,   // 降低图表内元素拖拽敏感度，单位ms，不建议外部干预\r\n        EFFECT_ZLEVEL : 10,       // 特效动画zlevel\r\n        // 主题，默认标志图形类型列表\r\n        symbolList: [\r\n          'circle', 'rectangle', 'triangle', 'diamond',\r\n          'emptyCircle', 'emptyRectangle', 'emptyTriangle', 'emptyDiamond'\r\n        ],\r\n        loadingEffect: 'spin',\r\n        loadingText: '数据读取中...',\r\n        noDataEffect: 'bubble',\r\n        noDataText: '暂无数据',\r\n        // noDataLoadingOption: null,\r\n        // 可计算特性配置，孤岛，提示颜色\r\n        calculable: false,                      // 默认关闭可计算特性\r\n        calculableColor: 'rgba(255,165,0,0.6)', // 拖拽提示边框颜色\r\n        calculableHolderColor: '#ccc',          // 可计算占位提示颜色\r\n        nameConnector: ' & ',\r\n        valueConnector: ': ',\r\n        animation: true,                // 过渡动画是否开启\r\n        addDataAnimation: true,         // 动态数据接口是否开启动画效果\r\n        animationThreshold: 2000,       // 动画元素阀值，产生的图形原素超过2000不出动画\r\n        animationDuration: 2000,        // 过渡动画参数：进入\r\n        animationDurationUpdate: 500,   // 过渡动画参数：更新\r\n        animationEasing: 'ExponentialOut'    //BounceOut\r\n    };\r\n\r\n    return config;\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/config.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * @module zrender/tool/util\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         Yi Shen(https://github.com/pissang)\n */\ndefine(\n    function(require) {\n\n        var ArrayProto = Array.prototype;\n        var nativeForEach = ArrayProto.forEach;\n        var nativeMap = ArrayProto.map;\n        var nativeFilter = ArrayProto.filter;\n\n        // 用于处理merge时无法遍历Date等对象的问题\n        var BUILTIN_OBJECT = {\n            '[object Function]': 1,\n            '[object RegExp]': 1,\n            '[object Date]': 1,\n            '[object Error]': 1,\n            '[object CanvasGradient]': 1\n        };\n\n        var objToString = Object.prototype.toString;\n\n        function isDom(obj) {\n            return obj && obj.nodeType === 1\n                   && typeof(obj.nodeName) == 'string';\n        }\n\n        /**\n         * 对一个object进行深度拷贝\n         * @memberOf module:zrender/tool/util\n         * @param {*} source 需要进行拷贝的对象\n         * @return {*} 拷贝后的新对象\n         */\n        function clone(source) {\n            if (typeof source == 'object' && source !== null) {\n                var result = source;\n                if (source instanceof Array) {\n                    result = [];\n                    for (var i = 0, len = source.length; i < len; i++) {\n                        result[i] = clone(source[i]);\n                    }\n                }\n                else if (\n                    !BUILTIN_OBJECT[objToString.call(source)]\n                    // 是否为 dom 对象\n                    && !isDom(source)\n                ) {\n                    result = {};\n                    for (var key in source) {\n                        if (source.hasOwnProperty(key)) {\n                            result[key] = clone(source[key]);\n                        }\n                    }\n                }\n\n                return result;\n            }\n\n            return source;\n        }\n\n        function mergeItem(target, source, key, overwrite) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                if (typeof targetProp == 'object'\n                    && !BUILTIN_OBJECT[objToString.call(targetProp)]\n                    // 是否为 dom 对象\n                    && !isDom(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(\n                        target[key],\n                        source[key],\n                        overwrite\n                    );\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        /**\n         * 合并源对象的属性到目标对象\n         * @memberOf module:zrender/tool/util\n         * @param {*} target 目标对象\n         * @param {*} source 源对象\n         * @param {boolean} overwrite 是否覆盖\n         */\n        function merge(target, source, overwrite) {\n            for (var i in source) {\n                mergeItem(target, source, i, overwrite);\n            }\n            \n            return target;\n        }\n\n        var _ctx;\n\n        function getContext() {\n            if (!_ctx) {\n                require('../dep/excanvas');\n                /* jshint ignore:start */\n                if (window['G_vmlCanvasManager']) {\n                    var _div = document.createElement('div');\n                    _div.style.position = 'absolute';\n                    _div.style.top = '-1000px';\n                    document.body.appendChild(_div);\n\n                    _ctx = G_vmlCanvasManager.initElement(_div)\n                               .getContext('2d');\n                }\n                else {\n                    _ctx = document.createElement('canvas').getContext('2d');\n                }\n                /* jshint ignore:end */\n            }\n            return _ctx;\n        }\n\n        /**\n         * @memberOf module:zrender/tool/util\n         * @param {Array} array\n         * @param {*} value\n         */\n        function indexOf(array, value) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * 构造类继承关系\n         * @memberOf module:zrender/tool/util\n         * @param {Function} clazz 源类\n         * @param {Function} baseClazz 基类\n         */\n        function inherits(clazz, baseClazz) {\n            var clazzPrototype = clazz.prototype;\n            function F() {}\n            F.prototype = baseClazz.prototype;\n            clazz.prototype = new F();\n\n            for (var prop in clazzPrototype) {\n                clazz.prototype[prop] = clazzPrototype[prop];\n            }\n            clazz.constructor = clazz;\n        }\n\n        /**\n         * 数组或对象遍历\n         * @memberOf module:zrender/tool/util\n         * @param {Object|Array} obj\n         * @param {Function} cb\n         * @param {*} [context]\n         */\n        function each(obj, cb, context) {\n            if (!(obj && cb)) {\n                return;\n            }\n            if (obj.forEach && obj.forEach === nativeForEach) {\n                obj.forEach(cb, context);\n            }\n            else if (obj.length === +obj.length) {\n                for (var i = 0, len = obj.length; i < len; i++) {\n                    cb.call(context, obj[i], i, obj);\n                }\n            }\n            else {\n                for (var key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        cb.call(context, obj[key], key, obj);\n                    }\n                }\n            }\n        }\n\n        /**\n         * 数组映射\n         * @memberOf module:zrender/tool/util\n         * @param {Array} obj\n         * @param {Function} cb\n         * @param {*} [context]\n         * @return {Array}\n         */\n        function map(obj, cb, context) {\n            if (!(obj && cb)) {\n                return;\n            }\n            if (obj.map && obj.map === nativeMap) {\n                return obj.map(cb, context);\n            }\n            else {\n                var result = [];\n                for (var i = 0, len = obj.length; i < len; i++) {\n                    result.push(cb.call(context, obj[i], i, obj));\n                }\n                return result;\n            }\n        }\n\n        /**\n         * 数组过滤\n         * @memberOf module:zrender/tool/util\n         * @param {Array} obj\n         * @param {Function} cb\n         * @param {*} [context]\n         * @return {Array}\n         */\n        function filter(obj, cb, context) {\n            if (!(obj && cb)) {\n                return;\n            }\n            if (obj.filter && obj.filter === nativeFilter) {\n                return obj.filter(cb, context);\n            }\n            else {\n                var result = [];\n                for (var i = 0, len = obj.length; i < len; i++) {\n                    if (cb.call(context, obj[i], i, obj)) {\n                        result.push(obj[i]);\n                    }\n                }\n                return result;\n            }\n        }\n\n        function bind(func, context) {\n            \n            return function () {\n                func.apply(context, arguments);\n            }\n        }\n\n        return {\n            inherits: inherits,\n            clone: clone,\n            merge: merge,\n            getContext: getContext,\n            indexOf: indexOf,\n            each: each,\n            map: map,\n            filter: filter,\n            bind: bind\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/util.js\n ** module id = 4\n ** module chunks = 0\n **/","// Copyright 2006 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n// Known Issues:\n//\n// * Patterns only support repeat.\n// * Radial gradient are not implemented. The VML version of these look very\n//   different from the canvas one.\n// * Clipping paths are not implemented.\n// * Coordsize. The width and height attribute have higher priority than the\n//   width and height style values which isn't correct.\n// * Painting mode isn't implemented.\n// * Canvas width/height should is using content-box by default. IE in\n//   Quirks mode will draw the canvas using border-box. Either change your\n//   doctype to HTML5\n//   (http://www.whatwg.org/specs/web-apps/current-work/#the-doctype)\n//   or use Box Sizing Behavior from WebFX\n//   (http://webfx.eae.net/dhtml/boxsizing/boxsizing.html)\n// * Non uniform scaling does not correctly scale strokes.\n// * Optimize. There is always room for speed improvements.\n\n// AMD by kener.linfeng@gmail.com\ndefine(function(require) {\n    \n// Only add this code if we do not already have a canvas implementation\nif (!document.createElement('canvas').getContext) {\n\n(function() {\n\n  // alias some functions to make (compiled) code shorter\n  var m = Math;\n  var mr = m.round;\n  var ms = m.sin;\n  var mc = m.cos;\n  var abs = m.abs;\n  var sqrt = m.sqrt;\n\n  // this is used for sub pixel precision\n  var Z = 10;\n  var Z2 = Z / 2;\n\n  var IE_VERSION = +navigator.userAgent.match(/MSIE ([\\d.]+)?/)[1];\n\n  /**\n   * This funtion is assigned to the <canvas> elements as element.getContext().\n   * @this {HTMLElement}\n   * @return {CanvasRenderingContext2D_}\n   */\n  function getContext() {\n    return this.context_ ||\n        (this.context_ = new CanvasRenderingContext2D_(this));\n  }\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Binds a function to an object. The returned function will always use the\n   * passed in {@code obj} as {@code this}.\n   *\n   * Example:\n   *\n   *   g = bind(f, obj, a, b)\n   *   g(c, d) // will do f.call(obj, a, b, c, d)\n   *\n   * @param {Function} f The function to bind the object to\n   * @param {Object} obj The object that should act as this when the function\n   *     is called\n   * @param {*} var_args Rest arguments that will be used as the initial\n   *     arguments when the function is called\n   * @return {Function} A new function that has bound this\n   */\n  function bind(f, obj, var_args) {\n    var a = slice.call(arguments, 2);\n    return function() {\n      return f.apply(obj, a.concat(slice.call(arguments)));\n    };\n  }\n\n  function encodeHtmlAttribute(s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  }\n\n  function addNamespace(doc, prefix, urn) {\n    if (!doc.namespaces[prefix]) {\n      doc.namespaces.add(prefix, urn, '#default#VML');\n    }\n  }\n\n  function addNamespacesAndStylesheet(doc) {\n    addNamespace(doc, 'g_vml_', 'urn:schemas-microsoft-com:vml');\n    addNamespace(doc, 'g_o_', 'urn:schemas-microsoft-com:office:office');\n\n    // Setup default CSS.  Only add one style sheet per document\n    if (!doc.styleSheets['ex_canvas_']) {\n      var ss = doc.createStyleSheet();\n      ss.owningElement.id = 'ex_canvas_';\n      ss.cssText = 'canvas{display:inline-block;overflow:hidden;' +\n          // default size is 300x150 in Gecko and Opera\n          'text-align:left;width:300px;height:150px}';\n    }\n  }\n\n  // Add namespaces and stylesheet at startup.\n  addNamespacesAndStylesheet(document);\n\n  var G_vmlCanvasManager_ = {\n    init: function(opt_doc) {\n      var doc = opt_doc || document;\n      // Create a dummy element so that IE will allow canvas elements to be\n      // recognized.\n      doc.createElement('canvas');\n      doc.attachEvent('onreadystatechange', bind(this.init_, this, doc));\n    },\n\n    init_: function(doc) {\n      // find all canvas elements\n      var els = doc.getElementsByTagName('canvas');\n      for (var i = 0; i < els.length; i++) {\n        this.initElement(els[i]);\n      }\n    },\n\n    /**\n     * Public initializes a canvas element so that it can be used as canvas\n     * element from now on. This is called automatically before the page is\n     * loaded but if you are creating elements using createElement you need to\n     * make sure this is called on the element.\n     * @param {HTMLElement} el The canvas element to initialize.\n     * @return {HTMLElement} the element that was created.\n     */\n    initElement: function(el) {\n      if (!el.getContext) {\n        el.getContext = getContext;\n\n        // Add namespaces and stylesheet to document of the element.\n        addNamespacesAndStylesheet(el.ownerDocument);\n\n        // Remove fallback content. There is no way to hide text nodes so we\n        // just remove all childNodes. We could hide all elements and remove\n        // text nodes but who really cares about the fallback content.\n        el.innerHTML = '';\n\n        // do not use inline function because that will leak memory\n        el.attachEvent('onpropertychange', onPropertyChange);\n        el.attachEvent('onresize', onResize);\n\n        var attrs = el.attributes;\n        if (attrs.width && attrs.width.specified) {\n          // TODO: use runtimeStyle and coordsize\n          // el.getContext().setWidth_(attrs.width.nodeValue);\n          el.style.width = attrs.width.nodeValue + 'px';\n        } else {\n          el.width = el.clientWidth;\n        }\n        if (attrs.height && attrs.height.specified) {\n          // TODO: use runtimeStyle and coordsize\n          // el.getContext().setHeight_(attrs.height.nodeValue);\n          el.style.height = attrs.height.nodeValue + 'px';\n        } else {\n          el.height = el.clientHeight;\n        }\n        //el.getContext().setCoordsize_()\n      }\n      return el;\n    }\n  };\n\n  function onPropertyChange(e) {\n    var el = e.srcElement;\n\n    switch (e.propertyName) {\n      case 'width':\n        el.getContext().clearRect();\n        el.style.width = el.attributes.width.nodeValue + 'px';\n        // In IE8 this does not trigger onresize.\n        el.firstChild.style.width =  el.clientWidth + 'px';\n        break;\n      case 'height':\n        el.getContext().clearRect();\n        el.style.height = el.attributes.height.nodeValue + 'px';\n        el.firstChild.style.height = el.clientHeight + 'px';\n        break;\n    }\n  }\n\n  function onResize(e) {\n    var el = e.srcElement;\n    if (el.firstChild) {\n      el.firstChild.style.width =  el.clientWidth + 'px';\n      el.firstChild.style.height = el.clientHeight + 'px';\n    }\n  }\n\n  G_vmlCanvasManager_.init();\n\n  // precompute \"00\" to \"FF\"\n  var decToHex = [];\n  for (var i = 0; i < 16; i++) {\n    for (var j = 0; j < 16; j++) {\n      decToHex[i * 16 + j] = i.toString(16) + j.toString(16);\n    }\n  }\n\n  function createMatrixIdentity() {\n    return [\n      [1, 0, 0],\n      [0, 1, 0],\n      [0, 0, 1]\n    ];\n  }\n\n  function matrixMultiply(m1, m2) {\n    var result = createMatrixIdentity();\n\n    for (var x = 0; x < 3; x++) {\n      for (var y = 0; y < 3; y++) {\n        var sum = 0;\n\n        for (var z = 0; z < 3; z++) {\n          sum += m1[x][z] * m2[z][y];\n        }\n\n        result[x][y] = sum;\n      }\n    }\n    return result;\n  }\n\n  function copyState(o1, o2) {\n    o2.fillStyle     = o1.fillStyle;\n    o2.lineCap       = o1.lineCap;\n    o2.lineJoin      = o1.lineJoin;\n    o2.lineWidth     = o1.lineWidth;\n    o2.miterLimit    = o1.miterLimit;\n    o2.shadowBlur    = o1.shadowBlur;\n    o2.shadowColor   = o1.shadowColor;\n    o2.shadowOffsetX = o1.shadowOffsetX;\n    o2.shadowOffsetY = o1.shadowOffsetY;\n    o2.strokeStyle   = o1.strokeStyle;\n    o2.globalAlpha   = o1.globalAlpha;\n    o2.font          = o1.font;\n    o2.textAlign     = o1.textAlign;\n    o2.textBaseline  = o1.textBaseline;\n    o2.scaleX_    = o1.scaleX_;\n    o2.scaleY_    = o1.scaleY_;\n    o2.lineScale_    = o1.lineScale_;\n  }\n\n  var colorData = {\n    aliceblue: '#F0F8FF',\n    antiquewhite: '#FAEBD7',\n    aquamarine: '#7FFFD4',\n    azure: '#F0FFFF',\n    beige: '#F5F5DC',\n    bisque: '#FFE4C4',\n    black: '#000000',\n    blanchedalmond: '#FFEBCD',\n    blueviolet: '#8A2BE2',\n    brown: '#A52A2A',\n    burlywood: '#DEB887',\n    cadetblue: '#5F9EA0',\n    chartreuse: '#7FFF00',\n    chocolate: '#D2691E',\n    coral: '#FF7F50',\n    cornflowerblue: '#6495ED',\n    cornsilk: '#FFF8DC',\n    crimson: '#DC143C',\n    cyan: '#00FFFF',\n    darkblue: '#00008B',\n    darkcyan: '#008B8B',\n    darkgoldenrod: '#B8860B',\n    darkgray: '#A9A9A9',\n    darkgreen: '#006400',\n    darkgrey: '#A9A9A9',\n    darkkhaki: '#BDB76B',\n    darkmagenta: '#8B008B',\n    darkolivegreen: '#556B2F',\n    darkorange: '#FF8C00',\n    darkorchid: '#9932CC',\n    darkred: '#8B0000',\n    darksalmon: '#E9967A',\n    darkseagreen: '#8FBC8F',\n    darkslateblue: '#483D8B',\n    darkslategray: '#2F4F4F',\n    darkslategrey: '#2F4F4F',\n    darkturquoise: '#00CED1',\n    darkviolet: '#9400D3',\n    deeppink: '#FF1493',\n    deepskyblue: '#00BFFF',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1E90FF',\n    firebrick: '#B22222',\n    floralwhite: '#FFFAF0',\n    forestgreen: '#228B22',\n    gainsboro: '#DCDCDC',\n    ghostwhite: '#F8F8FF',\n    gold: '#FFD700',\n    goldenrod: '#DAA520',\n    grey: '#808080',\n    greenyellow: '#ADFF2F',\n    honeydew: '#F0FFF0',\n    hotpink: '#FF69B4',\n    indianred: '#CD5C5C',\n    indigo: '#4B0082',\n    ivory: '#FFFFF0',\n    khaki: '#F0E68C',\n    lavender: '#E6E6FA',\n    lavenderblush: '#FFF0F5',\n    lawngreen: '#7CFC00',\n    lemonchiffon: '#FFFACD',\n    lightblue: '#ADD8E6',\n    lightcoral: '#F08080',\n    lightcyan: '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgreen: '#90EE90',\n    lightgrey: '#D3D3D3',\n    lightpink: '#FFB6C1',\n    lightsalmon: '#FFA07A',\n    lightseagreen: '#20B2AA',\n    lightskyblue: '#87CEFA',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#B0C4DE',\n    lightyellow: '#FFFFE0',\n    limegreen: '#32CD32',\n    linen: '#FAF0E6',\n    magenta: '#FF00FF',\n    mediumaquamarine: '#66CDAA',\n    mediumblue: '#0000CD',\n    mediumorchid: '#BA55D3',\n    mediumpurple: '#9370DB',\n    mediumseagreen: '#3CB371',\n    mediumslateblue: '#7B68EE',\n    mediumspringgreen: '#00FA9A',\n    mediumturquoise: '#48D1CC',\n    mediumvioletred: '#C71585',\n    midnightblue: '#191970',\n    mintcream: '#F5FFFA',\n    mistyrose: '#FFE4E1',\n    moccasin: '#FFE4B5',\n    navajowhite: '#FFDEAD',\n    oldlace: '#FDF5E6',\n    olivedrab: '#6B8E23',\n    orange: '#FFA500',\n    orangered: '#FF4500',\n    orchid: '#DA70D6',\n    palegoldenrod: '#EEE8AA',\n    palegreen: '#98FB98',\n    paleturquoise: '#AFEEEE',\n    palevioletred: '#DB7093',\n    papayawhip: '#FFEFD5',\n    peachpuff: '#FFDAB9',\n    peru: '#CD853F',\n    pink: '#FFC0CB',\n    plum: '#DDA0DD',\n    powderblue: '#B0E0E6',\n    rosybrown: '#BC8F8F',\n    royalblue: '#4169E1',\n    saddlebrown: '#8B4513',\n    salmon: '#FA8072',\n    sandybrown: '#F4A460',\n    seagreen: '#2E8B57',\n    seashell: '#FFF5EE',\n    sienna: '#A0522D',\n    skyblue: '#87CEEB',\n    slateblue: '#6A5ACD',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#FFFAFA',\n    springgreen: '#00FF7F',\n    steelblue: '#4682B4',\n    tan: '#D2B48C',\n    thistle: '#D8BFD8',\n    tomato: '#FF6347',\n    turquoise: '#40E0D0',\n    violet: '#EE82EE',\n    wheat: '#F5DEB3',\n    whitesmoke: '#F5F5F5',\n    yellowgreen: '#9ACD32'\n  };\n\n\n  function getRgbHslContent(styleString) {\n    var start = styleString.indexOf('(', 3);\n    var end = styleString.indexOf(')', start + 1);\n    var parts = styleString.substring(start + 1, end).split(',');\n    // add alpha if needed\n    if (parts.length != 4 || styleString.charAt(3) != 'a') {\n      parts[3] = 1;\n    }\n    return parts;\n  }\n\n  function percent(s) {\n    return parseFloat(s) / 100;\n  }\n\n  function clamp(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  }\n\n  function hslToRgb(parts){\n    var r, g, b, h, s, l;\n    h = parseFloat(parts[0]) / 360 % 360;\n    if (h < 0)\n      h++;\n    s = clamp(percent(parts[1]), 0, 1);\n    l = clamp(percent(parts[2]), 0, 1);\n    if (s == 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hueToRgb(p, q, h + 1 / 3);\n      g = hueToRgb(p, q, h);\n      b = hueToRgb(p, q, h - 1 / 3);\n    }\n\n    return '#' + decToHex[Math.floor(r * 255)] +\n        decToHex[Math.floor(g * 255)] +\n        decToHex[Math.floor(b * 255)];\n  }\n\n  function hueToRgb(m1, m2, h) {\n    if (h < 0)\n      h++;\n    if (h > 1)\n      h--;\n\n    if (6 * h < 1)\n      return m1 + (m2 - m1) * 6 * h;\n    else if (2 * h < 1)\n      return m2;\n    else if (3 * h < 2)\n      return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    else\n      return m1;\n  }\n\n  var processStyleCache = {};\n\n  function processStyle(styleString) {\n    if (styleString in processStyleCache) {\n      return processStyleCache[styleString];\n    }\n\n    var str, alpha = 1;\n\n    styleString = String(styleString);\n    if (styleString.charAt(0) == '#') {\n      str = styleString;\n    } else if (/^rgb/.test(styleString)) {\n      var parts = getRgbHslContent(styleString);\n      var str = '#', n;\n      for (var i = 0; i < 3; i++) {\n        if (parts[i].indexOf('%') != -1) {\n          n = Math.floor(percent(parts[i]) * 255);\n        } else {\n          n = +parts[i];\n        }\n        str += decToHex[clamp(n, 0, 255)];\n      }\n      alpha = +parts[3];\n    } else if (/^hsl/.test(styleString)) {\n      var parts = getRgbHslContent(styleString);\n      str = hslToRgb(parts);\n      alpha = parts[3];\n    } else {\n      str = colorData[styleString] || styleString;\n    }\n    return processStyleCache[styleString] = {color: str, alpha: alpha};\n  }\n\n  var DEFAULT_STYLE = {\n    style: 'normal',\n    variant: 'normal',\n    weight: 'normal',\n    size: 12,           //10\n    family: '微软雅黑'     //'sans-serif'\n  };\n\n  // Internal text style cache\n  var fontStyleCache = {};\n\n  function processFontStyle(styleString) {\n    if (fontStyleCache[styleString]) {\n      return fontStyleCache[styleString];\n    }\n\n    var el = document.createElement('div');\n    var style = el.style;\n    var fontFamily;\n    try {\n      style.font = styleString;\n      fontFamily = style.fontFamily.split(',')[0];\n    } catch (ex) {\n      // Ignore failures to set to invalid font.\n    }\n\n    return fontStyleCache[styleString] = {\n      style: style.fontStyle || DEFAULT_STYLE.style,\n      variant: style.fontVariant || DEFAULT_STYLE.variant,\n      weight: style.fontWeight || DEFAULT_STYLE.weight,\n      size: style.fontSize || DEFAULT_STYLE.size,\n      family: fontFamily || DEFAULT_STYLE.family\n    };\n  }\n\n  function getComputedStyle(style, element) {\n    var computedStyle = {};\n\n    for (var p in style) {\n      computedStyle[p] = style[p];\n    }\n\n    // Compute the size\n    var canvasFontSize = parseFloat(element.currentStyle.fontSize),\n        fontSize = parseFloat(style.size);\n\n    if (typeof style.size == 'number') {\n      computedStyle.size = style.size;\n    } else if (style.size.indexOf('px') != -1) {\n      computedStyle.size = fontSize;\n    } else if (style.size.indexOf('em') != -1) {\n      computedStyle.size = canvasFontSize * fontSize;\n    } else if(style.size.indexOf('%') != -1) {\n      computedStyle.size = (canvasFontSize / 100) * fontSize;\n    } else if (style.size.indexOf('pt') != -1) {\n      computedStyle.size = fontSize / .75;\n    } else {\n      computedStyle.size = canvasFontSize;\n    }\n\n    // Different scaling between normal text and VML text. This was found using\n    // trial and error to get the same size as non VML text.\n    //computedStyle.size *= 0.981;\n\n    return computedStyle;\n  }\n\n  function buildStyle(style) {\n    return style.style + ' ' + style.variant + ' ' + style.weight + ' ' +\n        style.size + \"px '\" + style.family + \"'\";\n  }\n\n  var lineCapMap = {\n    'butt': 'flat',\n    'round': 'round'\n  };\n\n  function processLineCap(lineCap) {\n    return lineCapMap[lineCap] || 'square';\n  }\n\n  /**\n   * This class implements CanvasRenderingContext2D interface as described by\n   * the WHATWG.\n   * @param {HTMLElement} canvasElement The element that the 2D context should\n   * be associated with\n   */\n  function CanvasRenderingContext2D_(canvasElement) {\n    this.m_ = createMatrixIdentity();\n\n    this.mStack_ = [];\n    this.aStack_ = [];\n    this.currentPath_ = [];\n\n    // Canvas context properties\n    this.strokeStyle = '#000';\n    this.fillStyle = '#000';\n\n    this.lineWidth = 1;\n    this.lineJoin = 'miter';\n    this.lineCap = 'butt';\n    this.miterLimit = Z * 1;\n    this.globalAlpha = 1;\n    // this.font = '10px sans-serif';\n    this.font = '12px 微软雅黑';        // 决定还是改这吧，影响代价最小\n    this.textAlign = 'left';\n    this.textBaseline = 'alphabetic';\n    this.canvas = canvasElement;\n\n    var cssText = 'width:' + canvasElement.clientWidth + 'px;height:' +\n        canvasElement.clientHeight + 'px;overflow:hidden;position:absolute';\n    var el = canvasElement.ownerDocument.createElement('div');\n    el.style.cssText = cssText;\n    canvasElement.appendChild(el);\n\n    var overlayEl = el.cloneNode(false);\n    // Use a non transparent background.\n    overlayEl.style.backgroundColor = '#fff'; //red, I don't know why, it work! \n    overlayEl.style.filter = 'alpha(opacity=0)';\n    canvasElement.appendChild(overlayEl);\n\n    this.element_ = el;\n    this.scaleX_ = 1;\n    this.scaleY_ = 1;\n    this.lineScale_ = 1;\n  }\n\n  var contextPrototype = CanvasRenderingContext2D_.prototype;\n  contextPrototype.clearRect = function() {\n    if (this.textMeasureEl_) {\n      this.textMeasureEl_.removeNode(true);\n      this.textMeasureEl_ = null;\n    }\n    this.element_.innerHTML = '';\n  };\n\n  contextPrototype.beginPath = function() {\n    // TODO: Branch current matrix so that save/restore has no effect\n    //       as per safari docs.\n    this.currentPath_ = [];\n  };\n\n  contextPrototype.moveTo = function(aX, aY) {\n    var p = getCoords(this, aX, aY);\n    this.currentPath_.push({type: 'moveTo', x: p.x, y: p.y});\n    this.currentX_ = p.x;\n    this.currentY_ = p.y;\n  };\n\n  contextPrototype.lineTo = function(aX, aY) {\n    var p = getCoords(this, aX, aY);\n    this.currentPath_.push({type: 'lineTo', x: p.x, y: p.y});\n\n    this.currentX_ = p.x;\n    this.currentY_ = p.y;\n  };\n\n  contextPrototype.bezierCurveTo = function(aCP1x, aCP1y,\n                                            aCP2x, aCP2y,\n                                            aX, aY) {\n    var p = getCoords(this, aX, aY);\n    var cp1 = getCoords(this, aCP1x, aCP1y);\n    var cp2 = getCoords(this, aCP2x, aCP2y);\n    bezierCurveTo(this, cp1, cp2, p);\n  };\n\n  // Helper function that takes the already fixed cordinates.\n  function bezierCurveTo(self, cp1, cp2, p) {\n    self.currentPath_.push({\n      type: 'bezierCurveTo',\n      cp1x: cp1.x,\n      cp1y: cp1.y,\n      cp2x: cp2.x,\n      cp2y: cp2.y,\n      x: p.x,\n      y: p.y\n    });\n    self.currentX_ = p.x;\n    self.currentY_ = p.y;\n  }\n\n  contextPrototype.quadraticCurveTo = function(aCPx, aCPy, aX, aY) {\n    // the following is lifted almost directly from\n    // http://developer.mozilla.org/en/docs/Canvas_tutorial:Drawing_shapes\n\n    var cp = getCoords(this, aCPx, aCPy);\n    var p = getCoords(this, aX, aY);\n\n    var cp1 = {\n      x: this.currentX_ + 2.0 / 3.0 * (cp.x - this.currentX_),\n      y: this.currentY_ + 2.0 / 3.0 * (cp.y - this.currentY_)\n    };\n    var cp2 = {\n      x: cp1.x + (p.x - this.currentX_) / 3.0,\n      y: cp1.y + (p.y - this.currentY_) / 3.0\n    };\n\n    bezierCurveTo(this, cp1, cp2, p);\n  };\n\n  contextPrototype.arc = function(aX, aY, aRadius,\n                                  aStartAngle, aEndAngle, aClockwise) {\n    aRadius *= Z;\n    var arcType = aClockwise ? 'at' : 'wa';\n\n    var xStart = aX + mc(aStartAngle) * aRadius - Z2;\n    var yStart = aY + ms(aStartAngle) * aRadius - Z2;\n\n    var xEnd = aX + mc(aEndAngle) * aRadius - Z2;\n    var yEnd = aY + ms(aEndAngle) * aRadius - Z2;\n\n    // IE won't render arches drawn counter clockwise if xStart == xEnd.\n    if (xStart == xEnd && !aClockwise) {\n      xStart += 0.125; // Offset xStart by 1/80 of a pixel. Use something\n                       // that can be represented in binary\n    }\n\n    var p = getCoords(this, aX, aY);\n    var pStart = getCoords(this, xStart, yStart);\n    var pEnd = getCoords(this, xEnd, yEnd);\n\n    this.currentPath_.push({type: arcType,\n                           x: p.x,\n                           y: p.y,\n                           radius: aRadius,\n                           xStart: pStart.x,\n                           yStart: pStart.y,\n                           xEnd: pEnd.x,\n                           yEnd: pEnd.y});\n\n  };\n\n  contextPrototype.rect = function(aX, aY, aWidth, aHeight) {\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n  };\n\n  contextPrototype.strokeRect = function(aX, aY, aWidth, aHeight) {\n    var oldPath = this.currentPath_;\n    this.beginPath();\n\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n    this.stroke();\n\n    this.currentPath_ = oldPath;\n  };\n\n  contextPrototype.fillRect = function(aX, aY, aWidth, aHeight) {\n    var oldPath = this.currentPath_;\n    this.beginPath();\n\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n    this.fill();\n\n    this.currentPath_ = oldPath;\n  };\n\n  contextPrototype.createLinearGradient = function(aX0, aY0, aX1, aY1) {\n    var gradient = new CanvasGradient_('gradient');\n    gradient.x0_ = aX0;\n    gradient.y0_ = aY0;\n    gradient.x1_ = aX1;\n    gradient.y1_ = aY1;\n    return gradient;\n  };\n\n  contextPrototype.createRadialGradient = function(aX0, aY0, aR0,\n                                                   aX1, aY1, aR1) {\n    var gradient = new CanvasGradient_('gradientradial');\n    gradient.x0_ = aX0;\n    gradient.y0_ = aY0;\n    gradient.r0_ = aR0;\n    gradient.x1_ = aX1;\n    gradient.y1_ = aY1;\n    gradient.r1_ = aR1;\n    return gradient;\n  };\n\n  contextPrototype.drawImage = function(image, var_args) {\n    var dx, dy, dw, dh, sx, sy, sw, sh;\n\n    // to find the original width we overide the width and height\n    var oldRuntimeWidth = image.runtimeStyle.width;\n    var oldRuntimeHeight = image.runtimeStyle.height;\n    image.runtimeStyle.width = 'auto';\n    image.runtimeStyle.height = 'auto';\n\n    // get the original size\n    var w = image.width;\n    var h = image.height;\n\n    // and remove overides\n    image.runtimeStyle.width = oldRuntimeWidth;\n    image.runtimeStyle.height = oldRuntimeHeight;\n\n    if (arguments.length == 3) {\n      dx = arguments[1];\n      dy = arguments[2];\n      sx = sy = 0;\n      sw = dw = w;\n      sh = dh = h;\n    } else if (arguments.length == 5) {\n      dx = arguments[1];\n      dy = arguments[2];\n      dw = arguments[3];\n      dh = arguments[4];\n      sx = sy = 0;\n      sw = w;\n      sh = h;\n    } else if (arguments.length == 9) {\n      sx = arguments[1];\n      sy = arguments[2];\n      sw = arguments[3];\n      sh = arguments[4];\n      dx = arguments[5];\n      dy = arguments[6];\n      dw = arguments[7];\n      dh = arguments[8];\n    } else {\n      throw Error('Invalid number of arguments');\n    }\n\n    var d = getCoords(this, dx, dy);\n\n    var w2 = sw / 2;\n    var h2 = sh / 2;\n\n    var vmlStr = [];\n\n    var W = 10;\n    var H = 10;\n\n    var scaleX = scaleY = 1;\n    \n    // For some reason that I've now forgotten, using divs didn't work\n    vmlStr.push(' <g_vml_:group',\n                ' coordsize=\"', Z * W, ',', Z * H, '\"',\n                ' coordorigin=\"0,0\"' ,\n                ' style=\"width:', W, 'px;height:', H, 'px;position:absolute;');\n\n    // If filters are necessary (rotation exists), create them\n    // filters are bog-slow, so only create them if abbsolutely necessary\n    // The following check doesn't account for skews (which don't exist\n    // in the canvas spec (yet) anyway.\n\n    if (this.m_[0][0] != 1 || this.m_[0][1] ||\n        this.m_[1][1] != 1 || this.m_[1][0]) {\n      var filter = [];\n\n     var scaleX = this.scaleX_;\n     var scaleY = this.scaleY_;\n      // Note the 12/21 reversal\n      filter.push('M11=', this.m_[0][0] / scaleX, ',',\n                  'M12=', this.m_[1][0] / scaleY, ',',\n                  'M21=', this.m_[0][1] / scaleX, ',',\n                  'M22=', this.m_[1][1] / scaleY, ',',\n                  'Dx=', mr(d.x / Z), ',',\n                  'Dy=', mr(d.y / Z), '');\n\n      // Bounding box calculation (need to minimize displayed area so that\n      // filters don't waste time on unused pixels.\n      var max = d;\n      var c2 = getCoords(this, dx + dw, dy);\n      var c3 = getCoords(this, dx, dy + dh);\n      var c4 = getCoords(this, dx + dw, dy + dh);\n\n      max.x = m.max(max.x, c2.x, c3.x, c4.x);\n      max.y = m.max(max.y, c2.y, c3.y, c4.y);\n\n      vmlStr.push('padding:0 ', mr(max.x / Z), 'px ', mr(max.y / Z),\n                  'px 0;filter:progid:DXImageTransform.Microsoft.Matrix(',\n                  filter.join(''), \", SizingMethod='clip');\");\n\n    } else {\n      vmlStr.push('top:', mr(d.y / Z), 'px;left:', mr(d.x / Z), 'px;');\n    }\n\n    vmlStr.push(' \">');\n\n    // Draw a special cropping div if needed\n    if (sx || sy) {\n      // Apply scales to width and height\n      vmlStr.push('<div style=\"overflow: hidden; width:', Math.ceil((dw + sx * dw / sw) * scaleX), 'px;',\n                  ' height:', Math.ceil((dh + sy * dh / sh) * scaleY), 'px;',\n                  ' filter:progid:DxImageTransform.Microsoft.Matrix(Dx=',\n                  -sx * dw / sw * scaleX, ',Dy=', -sy * dh / sh * scaleY, ');\">');\n    }\n    \n      \n    // Apply scales to width and height\n    vmlStr.push('<div style=\"width:', Math.round(scaleX * w * dw / sw), 'px;',\n                ' height:', Math.round(scaleY * h * dh / sh), 'px;',\n                ' filter:');\n   \n    // If there is a globalAlpha, apply it to image\n    if(this.globalAlpha < 1) {\n      vmlStr.push(' progid:DXImageTransform.Microsoft.Alpha(opacity=' + (this.globalAlpha * 100) + ')');\n    }\n    \n    vmlStr.push(' progid:DXImageTransform.Microsoft.AlphaImageLoader(src=', image.src, ',sizingMethod=scale)\">');\n    \n    // Close the crop div if necessary            \n    if (sx || sy) vmlStr.push('</div>');\n    \n    vmlStr.push('</div></div>');\n    \n    this.element_.insertAdjacentHTML('BeforeEnd', vmlStr.join(''));\n  };\n\n  contextPrototype.stroke = function(aFill) {\n    var lineStr = [];\n    var lineOpen = false;\n\n    var W = 10;\n    var H = 10;\n\n    lineStr.push('<g_vml_:shape',\n                 ' filled=\"', !!aFill, '\"',\n                 ' style=\"position:absolute;width:', W, 'px;height:', H, 'px;\"',\n                 ' coordorigin=\"0,0\"',\n                 ' coordsize=\"', Z * W, ',', Z * H, '\"',\n                 ' stroked=\"', !aFill, '\"',\n                 ' path=\"');\n\n    var newSeq = false;\n    var min = {x: null, y: null};\n    var max = {x: null, y: null};\n\n    for (var i = 0; i < this.currentPath_.length; i++) {\n      var p = this.currentPath_[i];\n      var c;\n\n      switch (p.type) {\n        case 'moveTo':\n          c = p;\n          lineStr.push(' m ', mr(p.x), ',', mr(p.y));\n          break;\n        case 'lineTo':\n          lineStr.push(' l ', mr(p.x), ',', mr(p.y));\n          break;\n        case 'close':\n          lineStr.push(' x ');\n          p = null;\n          break;\n        case 'bezierCurveTo':\n          lineStr.push(' c ',\n                       mr(p.cp1x), ',', mr(p.cp1y), ',',\n                       mr(p.cp2x), ',', mr(p.cp2y), ',',\n                       mr(p.x), ',', mr(p.y));\n          break;\n        case 'at':\n        case 'wa':\n          lineStr.push(' ', p.type, ' ',\n                       mr(p.x - this.scaleX_ * p.radius), ',',\n                       mr(p.y - this.scaleY_ * p.radius), ' ',\n                       mr(p.x + this.scaleX_ * p.radius), ',',\n                       mr(p.y + this.scaleY_ * p.radius), ' ',\n                       mr(p.xStart), ',', mr(p.yStart), ' ',\n                       mr(p.xEnd), ',', mr(p.yEnd));\n          break;\n      }\n\n\n      // TODO: Following is broken for curves due to\n      //       move to proper paths.\n\n      // Figure out dimensions so we can do gradient fills\n      // properly\n      if (p) {\n        if (min.x == null || p.x < min.x) {\n          min.x = p.x;\n        }\n        if (max.x == null || p.x > max.x) {\n          max.x = p.x;\n        }\n        if (min.y == null || p.y < min.y) {\n          min.y = p.y;\n        }\n        if (max.y == null || p.y > max.y) {\n          max.y = p.y;\n        }\n      }\n    }\n    lineStr.push(' \">');\n\n    if (!aFill) {\n      appendStroke(this, lineStr);\n    } else {\n      appendFill(this, lineStr, min, max);\n    }\n\n    lineStr.push('</g_vml_:shape>');\n\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\n  };\n\n  function appendStroke(ctx, lineStr) {\n    var a = processStyle(ctx.strokeStyle);\n    var color = a.color;\n    var opacity = a.alpha * ctx.globalAlpha;\n    var lineWidth = ctx.lineScale_ * ctx.lineWidth;\n\n    // VML cannot correctly render a line if the width is less than 1px.\n    // In that case, we dilute the color to make the line look thinner.\n    if (lineWidth < 1) {\n      opacity *= lineWidth;\n    }\n\n    lineStr.push(\n      '<g_vml_:stroke',\n      ' opacity=\"', opacity, '\"',\n      ' joinstyle=\"', ctx.lineJoin, '\"',\n      ' miterlimit=\"', ctx.miterLimit, '\"',\n      ' endcap=\"', processLineCap(ctx.lineCap), '\"',\n      ' weight=\"', lineWidth, 'px\"',\n      ' color=\"', color, '\" />'\n    );\n  }\n\n  function appendFill(ctx, lineStr, min, max) {\n    var fillStyle = ctx.fillStyle;\n    var arcScaleX = ctx.scaleX_;\n    var arcScaleY = ctx.scaleY_;\n    var width = max.x - min.x;\n    var height = max.y - min.y;\n    if (fillStyle instanceof CanvasGradient_) {\n      // TODO: Gradients transformed with the transformation matrix.\n      var angle = 0;\n      var focus = {x: 0, y: 0};\n\n      // additional offset\n      var shift = 0;\n      // scale factor for offset\n      var expansion = 1;\n\n      if (fillStyle.type_ == 'gradient') {\n        var x0 = fillStyle.x0_ / arcScaleX;\n        var y0 = fillStyle.y0_ / arcScaleY;\n        var x1 = fillStyle.x1_ / arcScaleX;\n        var y1 = fillStyle.y1_ / arcScaleY;\n        var p0 = getCoords(ctx, x0, y0);\n        var p1 = getCoords(ctx, x1, y1);\n        var dx = p1.x - p0.x;\n        var dy = p1.y - p0.y;\n        angle = Math.atan2(dx, dy) * 180 / Math.PI;\n\n        // The angle should be a non-negative number.\n        if (angle < 0) {\n          angle += 360;\n        }\n\n        // Very small angles produce an unexpected result because they are\n        // converted to a scientific notation string.\n        if (angle < 1e-6) {\n          angle = 0;\n        }\n      } else {\n        var p0 = getCoords(ctx, fillStyle.x0_, fillStyle.y0_);\n        focus = {\n          x: (p0.x - min.x) / width,\n          y: (p0.y - min.y) / height\n        };\n\n        width  /= arcScaleX * Z;\n        height /= arcScaleY * Z;\n        var dimension = m.max(width, height);\n        shift = 2 * fillStyle.r0_ / dimension;\n        expansion = 2 * fillStyle.r1_ / dimension - shift;\n      }\n\n      // We need to sort the color stops in ascending order by offset,\n      // otherwise IE won't interpret it correctly.\n      var stops = fillStyle.colors_;\n      stops.sort(function(cs1, cs2) {\n        return cs1.offset - cs2.offset;\n      });\n\n      var length = stops.length;\n      var color1 = stops[0].color;\n      var color2 = stops[length - 1].color;\n      var opacity1 = stops[0].alpha * ctx.globalAlpha;\n      var opacity2 = stops[length - 1].alpha * ctx.globalAlpha;\n\n      var colors = [];\n      for (var i = 0; i < length; i++) {\n        var stop = stops[i];\n        colors.push(stop.offset * expansion + shift + ' ' + stop.color);\n      }\n\n      // When colors attribute is used, the meanings of opacity and o:opacity2\n      // are reversed.\n      lineStr.push('<g_vml_:fill type=\"', fillStyle.type_, '\"',\n                   ' method=\"none\" focus=\"100%\"',\n                   ' color=\"', color1, '\"',\n                   ' color2=\"', color2, '\"',\n                   ' colors=\"', colors.join(','), '\"',\n                   ' opacity=\"', opacity2, '\"',\n                   ' g_o_:opacity2=\"', opacity1, '\"',\n                   ' angle=\"', angle, '\"',\n                   ' focusposition=\"', focus.x, ',', focus.y, '\" />');\n    } else if (fillStyle instanceof CanvasPattern_) {\n      if (width && height) {\n        var deltaLeft = -min.x;\n        var deltaTop = -min.y;\n        lineStr.push('<g_vml_:fill',\n                     ' position=\"',\n                     deltaLeft / width * arcScaleX * arcScaleX, ',',\n                     deltaTop / height * arcScaleY * arcScaleY, '\"',\n                     ' type=\"tile\"',\n                     // TODO: Figure out the correct size to fit the scale.\n                     //' size=\"', w, 'px ', h, 'px\"',\n                     ' src=\"', fillStyle.src_, '\" />');\n       }\n    } else {\n      var a = processStyle(ctx.fillStyle);\n      var color = a.color;\n      var opacity = a.alpha * ctx.globalAlpha;\n      lineStr.push('<g_vml_:fill color=\"', color, '\" opacity=\"', opacity,\n                   '\" />');\n    }\n  }\n\n  contextPrototype.fill = function() {\n    this.stroke(true);\n  };\n\n  contextPrototype.closePath = function() {\n    this.currentPath_.push({type: 'close'});\n  };\n\n  function getCoords(ctx, aX, aY) {\n    var m = ctx.m_;\n    return {\n      x: Z * (aX * m[0][0] + aY * m[1][0] + m[2][0]) - Z2,\n      y: Z * (aX * m[0][1] + aY * m[1][1] + m[2][1]) - Z2\n    };\n  };\n\n  contextPrototype.save = function() {\n    var o = {};\n    copyState(this, o);\n    this.aStack_.push(o);\n    this.mStack_.push(this.m_);\n    this.m_ = matrixMultiply(createMatrixIdentity(), this.m_);\n  };\n\n  contextPrototype.restore = function() {\n    if (this.aStack_.length) {\n      copyState(this.aStack_.pop(), this);\n      this.m_ = this.mStack_.pop();\n    }\n  };\n\n  function matrixIsFinite(m) {\n    return isFinite(m[0][0]) && isFinite(m[0][1]) &&\n        isFinite(m[1][0]) && isFinite(m[1][1]) &&\n        isFinite(m[2][0]) && isFinite(m[2][1]);\n  }\n\n  function setM(ctx, m, updateLineScale) {\n    if (!matrixIsFinite(m)) {\n      return;\n    }\n    ctx.m_ = m;\n\n    ctx.scaleX_ = Math.sqrt(m[0][0] * m[0][0] + m[0][1] * m[0][1]);\n    ctx.scaleY_ = Math.sqrt(m[1][0] * m[1][0] + m[1][1] * m[1][1]);\n\n    if (updateLineScale) {\n      // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n      var det = m[0][0] * m[1][1] - m[0][1] * m[1][0];\n      ctx.lineScale_ = sqrt(abs(det));\n    }\n  }\n\n  contextPrototype.translate = function(aX, aY) {\n    var m1 = [\n      [1,  0,  0],\n      [0,  1,  0],\n      [aX, aY, 1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), false);\n  };\n\n  contextPrototype.rotate = function(aRot) {\n    var c = mc(aRot);\n    var s = ms(aRot);\n\n    var m1 = [\n      [c,  s, 0],\n      [-s, c, 0],\n      [0,  0, 1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), false);\n  };\n\n  contextPrototype.scale = function(aX, aY) {\n    var m1 = [\n      [aX, 0,  0],\n      [0,  aY, 0],\n      [0,  0,  1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), true);\n  };\n\n  contextPrototype.transform = function(m11, m12, m21, m22, dx, dy) {\n    var m1 = [\n      [m11, m12, 0],\n      [m21, m22, 0],\n      [dx,  dy,  1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), true);\n\n  };\n\n  contextPrototype.setTransform = function(m11, m12, m21, m22, dx, dy) {\n    var m = [\n      [m11, m12, 0],\n      [m21, m22, 0],\n      [dx,  dy,  1]\n    ];\n\n    setM(this, m, true);\n  };\n\n  /**\n   * The text drawing function.\n   * The maxWidth argument isn't taken in account, since no browser supports\n   * it yet.\n   */\n  contextPrototype.drawText_ = function(text, x, y, maxWidth, stroke) {\n    var m = this.m_,\n        delta = 1000,\n        left = 0,\n        right = delta,\n        offset = {x: 0, y: 0},\n        lineStr = [];\n\n    var fontStyle = getComputedStyle(processFontStyle(this.font),\n                                     this.element_);\n\n    var fontStyleString = buildStyle(fontStyle);\n\n    var elementStyle = this.element_.currentStyle;\n    var textAlign = this.textAlign.toLowerCase();\n    switch (textAlign) {\n      case 'left':\n      case 'center':\n      case 'right':\n        break;\n      case 'end':\n        textAlign = elementStyle.direction == 'ltr' ? 'right' : 'left';\n        break;\n      case 'start':\n        textAlign = elementStyle.direction == 'rtl' ? 'right' : 'left';\n        break;\n      default:\n        textAlign = 'left';\n    }\n\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    switch (this.textBaseline) {\n      case 'hanging':\n      case 'top':\n        offset.y = fontStyle.size / 1.75;\n        break;\n      case 'middle':\n        break;\n      default:\n      case null:\n      case 'alphabetic':\n      case 'ideographic':\n      case 'bottom':\n        offset.y = -fontStyle.size / 2.25;\n        break;\n    }\n\n    switch(textAlign) {\n      case 'right':\n        left = delta;\n        right = 0.05;\n        break;\n      case 'center':\n        left = right = delta / 2;\n        break;\n    }\n\n    var d = getCoords(this, x + offset.x, y + offset.y);\n\n    lineStr.push('<g_vml_:line from=\"', -left ,' 0\" to=\"', right ,' 0.05\" ',\n                 ' coordsize=\"100 100\" coordorigin=\"0 0\"',\n                 ' filled=\"', !stroke, '\" stroked=\"', !!stroke,\n                 '\" style=\"position:absolute;width:1px;height:1px;\">');\n\n    if (stroke) {\n      appendStroke(this, lineStr);\n    } else {\n      // TODO: Fix the min and max params.\n      appendFill(this, lineStr, {x: -left, y: 0},\n                 {x: right, y: fontStyle.size});\n    }\n\n    var skewM = m[0][0].toFixed(3) + ',' + m[1][0].toFixed(3) + ',' +\n                m[0][1].toFixed(3) + ',' + m[1][1].toFixed(3) + ',0,0';\n\n    var skewOffset = mr(d.x / Z) + ',' + mr(d.y / Z);\n\n    lineStr.push('<g_vml_:skew on=\"t\" matrix=\"', skewM ,'\" ',\n                 ' offset=\"', skewOffset, '\" origin=\"', left ,' 0\" />',\n                 '<g_vml_:path textpathok=\"true\" />',\n                 '<g_vml_:textpath on=\"true\" string=\"',\n                 encodeHtmlAttribute(text),\n                 '\" style=\"v-text-align:', textAlign,\n                 ';font:', encodeHtmlAttribute(fontStyleString),\n                 '\" /></g_vml_:line>');\n\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\n  };\n\n  contextPrototype.fillText = function(text, x, y, maxWidth) {\n    this.drawText_(text, x, y, maxWidth, false);\n  };\n\n  contextPrototype.strokeText = function(text, x, y, maxWidth) {\n    this.drawText_(text, x, y, maxWidth, true);\n  };\n\n  contextPrototype.measureText = function(text) {\n    if (!this.textMeasureEl_) {\n      var s = '<span style=\"position:absolute;' +\n          'top:-20000px;left:0;padding:0;margin:0;border:none;' +\n          'white-space:pre;\"></span>';\n      this.element_.insertAdjacentHTML('beforeEnd', s);\n      this.textMeasureEl_ = this.element_.lastChild;\n    }\n    var doc = this.element_.ownerDocument;\n    this.textMeasureEl_.innerHTML = '';\n    try {\n        this.textMeasureEl_.style.font = this.font;\n    } catch (ex) {\n        // Ignore failures to set to invalid font.\n    }\n    \n    // Don't use innerHTML or innerText because they allow markup/whitespace.\n    this.textMeasureEl_.appendChild(doc.createTextNode(text));\n    return {width: this.textMeasureEl_.offsetWidth};\n  };\n\n  /******** STUBS ********/\n  contextPrototype.clip = function() {\n    // TODO: Implement\n  };\n\n  contextPrototype.arcTo = function() {\n    // TODO: Implement\n  };\n\n  contextPrototype.createPattern = function(image, repetition) {\n    return new CanvasPattern_(image, repetition);\n  };\n\n  // Gradient / Pattern Stubs\n  function CanvasGradient_(aType) {\n    this.type_ = aType;\n    this.x0_ = 0;\n    this.y0_ = 0;\n    this.r0_ = 0;\n    this.x1_ = 0;\n    this.y1_ = 0;\n    this.r1_ = 0;\n    this.colors_ = [];\n  }\n\n  CanvasGradient_.prototype.addColorStop = function(aOffset, aColor) {\n    aColor = processStyle(aColor);\n    this.colors_.push({offset: aOffset,\n                       color: aColor.color,\n                       alpha: aColor.alpha});\n  };\n\n  function CanvasPattern_(image, repetition) {\n    assertImageIsValid(image);\n    switch (repetition) {\n      case 'repeat':\n      case null:\n      case '':\n        this.repetition_ = 'repeat';\n        break\n      case 'repeat-x':\n      case 'repeat-y':\n      case 'no-repeat':\n        this.repetition_ = repetition;\n        break;\n      default:\n        throwException('SYNTAX_ERR');\n    }\n\n    this.src_ = image.src;\n    this.width_ = image.width;\n    this.height_ = image.height;\n  }\n\n  function throwException(s) {\n    throw new DOMException_(s);\n  }\n\n  function assertImageIsValid(img) {\n    if (!img || img.nodeType != 1 || img.tagName != 'IMG') {\n      throwException('TYPE_MISMATCH_ERR');\n    }\n    if (img.readyState != 'complete') {\n      throwException('INVALID_STATE_ERR');\n    }\n  }\n\n  function DOMException_(s) {\n    this.code = this[s];\n    this.message = s +': DOM Exception ' + this.code;\n  }\n  var p = DOMException_.prototype = new Error;\n  p.INDEX_SIZE_ERR = 1;\n  p.DOMSTRING_SIZE_ERR = 2;\n  p.HIERARCHY_REQUEST_ERR = 3;\n  p.WRONG_DOCUMENT_ERR = 4;\n  p.INVALID_CHARACTER_ERR = 5;\n  p.NO_DATA_ALLOWED_ERR = 6;\n  p.NO_MODIFICATION_ALLOWED_ERR = 7;\n  p.NOT_FOUND_ERR = 8;\n  p.NOT_SUPPORTED_ERR = 9;\n  p.INUSE_ATTRIBUTE_ERR = 10;\n  p.INVALID_STATE_ERR = 11;\n  p.SYNTAX_ERR = 12;\n  p.INVALID_MODIFICATION_ERR = 13;\n  p.NAMESPACE_ERR = 14;\n  p.INVALID_ACCESS_ERR = 15;\n  p.VALIDATION_ERR = 16;\n  p.TYPE_MISMATCH_ERR = 17;\n\n  // set up externs\n  G_vmlCanvasManager = G_vmlCanvasManager_;\n  CanvasRenderingContext2D = CanvasRenderingContext2D_;\n  CanvasGradient = CanvasGradient_;\n  CanvasPattern = CanvasPattern_;\n  DOMException = DOMException_;\n})();\n\n} // if\nelse { // make the canvas test simple by kener.linfeng@gmail.com\n    G_vmlCanvasManager = false;\n}\nreturn G_vmlCanvasManager;\n}); // define\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/dep/excanvas.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * 事件辅助类\n * @module zrender/tool/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\ndefine(\n    function(require) {\n\n        'use strict';\n\n        var Eventful = require('../mixin/Eventful');\n\n        /**\n        * 提取鼠标（手指）x坐标\n        * @memberOf module:zrender/tool/event\n        * @param  {Event} e 事件.\n        * @return {number} 鼠标（手指）x坐标.\n        */\n        function getX(e) {\n            return typeof e.zrenderX != 'undefined' && e.zrenderX\n                   || typeof e.offsetX != 'undefined' && e.offsetX\n                   || typeof e.layerX != 'undefined' && e.layerX\n                   || typeof e.clientX != 'undefined' && e.clientX;\n        }\n\n        /**\n        * 提取鼠标y坐标\n        * @memberOf module:zrender/tool/event\n        * @param  {Event} e 事件.\n        * @return {number} 鼠标（手指）y坐标.\n        */\n        function getY(e) {\n            return typeof e.zrenderY != 'undefined' && e.zrenderY\n                   || typeof e.offsetY != 'undefined' && e.offsetY\n                   || typeof e.layerY != 'undefined' && e.layerY\n                   || typeof e.clientY != 'undefined' && e.clientY;\n        }\n\n        /**\n        * 提取鼠标滚轮变化\n        * @memberOf module:zrender/tool/event\n        * @param  {Event} e 事件.\n        * @return {number} 滚轮变化，正值说明滚轮是向上滚动，如果是负值说明滚轮是向下滚动\n        */\n        function getDelta(e) {\n            return typeof e.zrenderDelta != 'undefined' && e.zrenderDelta\n                   || typeof e.wheelDelta != 'undefined' && e.wheelDelta\n                   || typeof e.detail != 'undefined' && -e.detail;\n        }\n\n        /**\n         * 停止冒泡和阻止默认行为\n         * @memberOf module:zrender/tool/event\n         * @method\n         * @param {Event} e : event对象\n         */\n        var stop = typeof window.addEventListener === 'function'\n            ? function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                e.cancelBubble = true;\n            }\n            : function (e) {\n                e.returnValue = false;\n                e.cancelBubble = true;\n            };\n        \n        return {\n            getX : getX,\n            getY : getY,\n            getDelta : getDelta,\n            stop : stop,\n            // 做向上兼容\n            Dispatcher : Eventful\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/event.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\ndefine(function (require) {\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._handlers = {};\n    };\n    /**\n     * 单次触发绑定，dispatch后销毁\n     * \n     * @param {string} event 事件名\n     * @param {Function} handler 响应函数\n     * @param {Object} context\n     */\n    Eventful.prototype.one = function (event, handler, context) {\n        var _h = this._handlers;\n\n        if (!handler || !event) {\n            return this;\n        }\n\n        if (!_h[event]) {\n            _h[event] = [];\n        }\n\n        _h[event].push({\n            h : handler,\n            one : true,\n            ctx: context || this\n        });\n\n        return this;\n    };\n\n    /**\n     * 绑定事件\n     * @param {string} event 事件名\n     * @param {Function} handler 事件处理函数\n     * @param {Object} [context]\n     */\n    Eventful.prototype.bind = function (event, handler, context) {\n        var _h = this._handlers;\n\n        if (!handler || !event) {\n            return this;\n        }\n\n        if (!_h[event]) {\n            _h[event] = [];\n        }\n\n        _h[event].push({\n            h : handler,\n            one : false,\n            ctx: context || this\n        });\n\n        return this;\n    };\n\n    /**\n     * 解绑事件\n     * @param {string} event 事件名\n     * @param {Function} [handler] 事件处理函数\n     */\n    Eventful.prototype.unbind = function (event, handler) {\n        var _h = this._handlers;\n\n        if (!event) {\n            this._handlers = {};\n            return this;\n        }\n\n        if (handler) {\n            if (_h[event]) {\n                var newList = [];\n                for (var i = 0, l = _h[event].length; i < l; i++) {\n                    if (_h[event][i]['h'] != handler) {\n                        newList.push(_h[event][i]);\n                    }\n                }\n                _h[event] = newList;\n            }\n\n            if (_h[event] && _h[event].length === 0) {\n                delete _h[event];\n            }\n        }\n        else {\n            delete _h[event];\n        }\n\n        return this;\n    };\n\n    /**\n     * 事件分发\n     * \n     * @param {string} type 事件类型\n     */\n    Eventful.prototype.dispatch = function (type) {\n        if (this._handlers[type]) {\n            var args = arguments;\n            var argLen = args.length;\n\n            if (argLen > 3) {\n                args = Array.prototype.slice.call(args, 1);\n            }\n            \n            var _h = this._handlers[type];\n            var len = _h.length;\n            for (var i = 0; i < len;) {\n                // Optimize advise from backbone\n                switch (argLen) {\n                    case 1:\n                        _h[i]['h'].call(_h[i]['ctx']);\n                        break;\n                    case 2:\n                        _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                        break;\n                    case 3:\n                        _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                        break;\n                    default:\n                        // have more than 2 given arguments\n                        _h[i]['h'].apply(_h[i]['ctx'], args);\n                        break;\n                }\n                \n                if (_h[i]['one']) {\n                    _h.splice(i, 1);\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * 带有context的事件分发, 最后一个参数是事件回调的context\n     * @param {string} type 事件类型\n     */\n    Eventful.prototype.dispatchWithContext = function (type) {\n        if (this._handlers[type]) {\n            var args = arguments;\n            var argLen = args.length;\n\n            if (argLen > 4) {\n                args = Array.prototype.slice.call(args, 1, args.length - 1);\n            }\n            var ctx = args[args.length - 1];\n\n            var _h = this._handlers[type];\n            var len = _h.length;\n            for (var i = 0; i < len;) {\n                // Optimize advise from backbone\n                switch (argLen) {\n                    case 1:\n                        _h[i]['h'].call(ctx);\n                        break;\n                    case 2:\n                        _h[i]['h'].call(ctx, args[1]);\n                        break;\n                    case 3:\n                        _h[i]['h'].call(ctx, args[1], args[2]);\n                        break;\n                    default:\n                        // have more than 2 given arguments\n                        _h[i]['h'].apply(ctx, args);\n                        break;\n                }\n                \n                if (_h[i]['one']) {\n                    _h.splice(i, 1);\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n        }\n\n        return this;\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n    \n    return Eventful;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/mixin/Eventful.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\ndefine(function() {\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = this.os = {};\n        var browser = this.browser = {};\n        var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        var touchpad = webos && ua.match(/TouchPad/);\n        var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        var silk = ua.match(/Silk\\/([\\d._]+)/);\n        var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        var playbook = ua.match(/PlayBook/);\n        var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        var ie = ua.match(/MSIE ([\\d.]+)/);\n        var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        if (android) os.android = true, os.version = android[2];\n        if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        if (webos) os.webos = true, os.version = webos[2];\n        if (touchpad) os.touchpad = true;\n        if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        if (bb10) os.bb10 = true, os.version = bb10[2];\n        if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        if (playbook) browser.playbook = true;\n        if (kindle) os.kindle = true, os.version = kindle[1];\n        if (silk) browser.silk = true, browser.version = silk[1];\n        if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) browser.firefox = true, browser.version = firefox[1];\n        if (ie) browser.ie = true, browser.version = ie[1];\n        if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        if (webview) browser.webview = true;\n        if (ie) browser.ie = true, browser.version = ie[1];\n\n        os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n            (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||\n            (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n            (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false\n        };\n    }\n\n    return detect(navigator.userAgent);\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/env.js\n ** module id = 8\n ** module chunks = 0\n **/","/*!\n * ZRender, a high performance canvas library.\n *  \n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n * \n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\ndefine(\n    function(require) {\n        /*\n         * HTML5 Canvas for Internet Explorer!\n         * Modern browsers like Firefox, Safari, Chrome and Opera support\n         * the HTML5 canvas tag to allow 2D command-based drawing.\n         * ExplorerCanvas brings the same functionality to Internet Explorer.\n         * To use, web developers only need to include a single script tag\n         * in their existing web pages.\n         *\n         * https://code.google.com/p/explorercanvas/\n         * http://explorercanvas.googlecode.com/svn/trunk/excanvas.js\n         */\n        // 核心代码会生成一个全局变量 G_vmlCanvasManager，模块改造后借用于快速判断canvas支持\n        require('./dep/excanvas');\n\n        var util = require('./tool/util');\n        var log = require('./tool/log');\n        var guid = require('./tool/guid');\n\n        var Handler = require('./Handler');\n        var Painter = require('./Painter');\n        var Storage = require('./Storage');\n        var Animation = require('./animation/Animation');\n\n        var _instances = {};    // ZRender实例map索引\n\n        /**\n         * @exports zrender\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         *         pissang (https://www.github.com/pissang)\n         */\n        var zrender = {};\n        /**\n         * @type {string}\n         */\n        zrender.version = '2.1.0';\n\n        /**\n         * 创建zrender实例\n         *\n         * @param {HTMLElement} dom 绘图容器\n         * @return {module:zrender/ZRender} ZRender实例\n         */\n        // 不让外部直接new ZRender实例，为啥？\n        // 不为啥，提供全局可控同时减少全局污染和降低命名冲突的风险！\n        zrender.init = function(dom) {\n            var zr = new ZRender(guid(), dom);\n            _instances[zr.id] = zr;\n            return zr;\n        };\n\n        /**\n         * zrender实例销毁\n         * @param {module:zrender/ZRender} zr ZRender对象，不传则销毁全部\n         */\n        // 在_instances里的索引也会删除了\n        // 管生就得管死，可以通过zrender.dispose(zr)销毁指定ZRender实例\n        // 当然也可以直接zr.dispose()自己销毁\n        zrender.dispose = function (zr) {\n            if (zr) {\n                zr.dispose();\n            }\n            else {\n                for (var key in _instances) {\n                    _instances[key].dispose();\n                }\n                _instances = {};\n            }\n\n            return zrender;\n        };\n\n        /**\n         * 获取zrender实例\n         * @param {string} id ZRender对象索引\n         * @return {module:zrender/ZRender}\n         */\n        zrender.getInstance = function (id) {\n            return _instances[id];\n        };\n\n        /**\n         * 删除zrender实例，ZRender实例dispose时会调用，\n         * 删除后getInstance则返回undefined\n         * ps: 仅是删除，删除的实例不代表已经dispose了~~\n         *     这是一个摆脱全局zrender.dispose()自动销毁的后门，\n         *     take care of yourself~\n         *\n         * @param {string} id ZRender对象索引\n         */\n        zrender.delInstance = function (id) {\n            delete _instances[id];\n            return zrender;\n        };\n\n        function getFrameCallback(zrInstance) {\n            return function () {\n                if (zrInstance._needsRefreshNextFrame) {\n                    zrInstance.refresh();\n                }\n            };\n        }\n\n        /**\n         * @module zrender/ZRender\n         */\n        /**\n         * ZRender接口类，对外可用的所有接口都在这里\n         * 非get接口统一返回支持链式调用\n         *\n         * @constructor\n         * @alias module:zrender/ZRender\n         * @param {string} id 唯一标识\n         * @param {HTMLElement} dom dom对象，不帮你做document.getElementById\n         * @return {ZRender} ZRender实例\n         */\n        var ZRender = function(id, dom) {\n            /**\n             * 实例 id\n             * @type {string}\n             */\n            this.id = id;\n            this.env = require('./tool/env');\n\n            this.storage = new Storage();\n            this.painter = new Painter(dom, this.storage);\n            this.handler = new Handler(dom, this.storage, this.painter);\n\n            /**\n             * @type {module:zrender/animation/Animation}\n             */\n            this.animation = new Animation({\n                stage: {\n                    update: getFrameCallback(this)\n                }\n            });\n            this.animation.start();\n\n            var self = this;\n            this.painter.refreshNextFrame = function () {\n                self.refreshNextFrame();\n            };\n\n            this._needsRefreshNextFrame = false;\n\n            // 修改 storage.delFromMap, 每次删除元素之前删除动画\n            // FIXME 有点ugly\n            var self = this;\n            var storage = this.storage;\n            var oldDelFromMap = storage.delFromMap;\n            storage.delFromMap = function (elId) {\n                var el = storage.get(elId);\n                self.stopAnimation(el);\n                oldDelFromMap.call(storage, elId);\n            };\n        };\n\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        ZRender.prototype.getId = function () {\n            return this.id;\n        };\n\n        /**\n         * 添加图形形状到根节点\n         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead\n         * @param {module:zrender/shape/Base} shape 形状对象，可用属性全集，详见各shape\n         */\n        ZRender.prototype.addShape = function (shape) {\n            this.addElement(shape);\n            return this;\n        };\n\n        /**\n         * 添加组到根节点\n         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead\n         * @param {module:zrender/Group} group\n         */\n        ZRender.prototype.addGroup = function(group) {\n            this.addElement(group);\n            return this;\n        };\n\n        /**\n         * 从根节点删除图形形状\n         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead\n         * @param {string} shapeId 形状对象唯一标识\n         */\n        ZRender.prototype.delShape = function (shapeId) {\n            this.delElement(shapeId);\n            return this;\n        };\n\n        /**\n         * 从根节点删除组\n         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead\n         * @param {string} groupId\n         */\n        ZRender.prototype.delGroup = function (groupId) {\n            this.delElement(groupId);\n            return this;\n        };\n\n        /**\n         * 修改图形形状\n         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead\n         * @param {string} shapeId 形状对象唯一标识\n         * @param {Object} shape 形状对象\n         */\n        ZRender.prototype.modShape = function (shapeId, shape) {\n            this.modElement(shapeId, shape);\n            return this;\n        };\n\n        /**\n         * 修改组\n         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead\n         * @param {string} groupId\n         * @param {Object} group\n         */\n        ZRender.prototype.modGroup = function (groupId, group) {\n            this.modElement(groupId, group);\n            return this;\n        };\n\n        /**\n         * 添加元素\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\n         */\n        ZRender.prototype.addElement = function (el) {\n            this.storage.addRoot(el);\n            this._needsRefreshNextFrame = true;\n            return this;\n        };\n\n        /**\n         * 删除元素\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\n         */\n        ZRender.prototype.delElement = function (el) {\n            this.storage.delRoot(el);\n            this._needsRefreshNextFrame = true;\n            return this;\n        };\n\n        /**\n         * 修改元素, 主要标记图形或者组需要在下一帧刷新。\n         * 第二个参数为需要覆盖到元素上的参数，不建议使用。\n         *\n         * @example\n         *     el.style.color = 'red';\n         *     el.position = [10, 10];\n         *     zr.modElement(el);\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\n         * @param {Object} [params]\n         */\n        ZRender.prototype.modElement = function (el, params) {\n            this.storage.mod(el, params);\n            this._needsRefreshNextFrame = true;\n            return this;\n        };\n\n        /**\n         * 修改指定zlevel的绘制配置项\n         * \n         * @param {string} zLevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @param {Array.<number>} [config.position] 层的平移\n         * @param {Array.<number>} [config.rotation] 层的旋转\n         * @param {Array.<number>} [config.scale] 层的缩放\n         * @param {boolean} [config.zoomable=false] 层是否支持鼠标缩放操作\n         * @param {boolean} [config.panable=false] 层是否支持鼠标平移操作\n         */\n        ZRender.prototype.modLayer = function (zLevel, config) {\n            this.painter.modLayer(zLevel, config);\n            this._needsRefreshNextFrame = true;\n            return this;\n        };\n\n        /**\n         * 添加额外高亮层显示，仅提供添加方法，每次刷新后高亮层图形均被清空\n         * \n         * @param {Object} shape 形状对象\n         */\n        ZRender.prototype.addHoverShape = function (shape) {\n            this.storage.addHover(shape);\n            return this;\n        };\n\n        /**\n         * 渲染\n         * \n         * @param {Function} callback  渲染结束后回调函数\n         */\n        ZRender.prototype.render = function (callback) {\n            this.painter.render(callback);\n            this._needsRefreshNextFrame = false;\n            return this;\n        };\n\n        /**\n         * 视图更新\n         * \n         * @param {Function} callback  视图更新后回调函数\n         */\n        ZRender.prototype.refresh = function (callback) {\n            this.painter.refresh(callback);\n            this._needsRefreshNextFrame = false;\n            return this;\n        };\n\n        /**\n         * 标记视图在浏览器下一帧需要绘制\n         */\n        ZRender.prototype.refreshNextFrame = function() {\n            this._needsRefreshNextFrame = true;\n            return this;\n        };\n        \n        /**\n         * 绘制高亮层\n         * @param {Function} callback  视图更新后回调函数\n         */\n        ZRender.prototype.refreshHover = function (callback) {\n            this.painter.refreshHover(callback);\n            return this;\n        };\n\n        /**\n         * 视图更新\n         * \n         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形列表\n         * @param {Function} callback  视图更新后回调函数\n         */\n        ZRender.prototype.refreshShapes = function (shapeList, callback) {\n            this.painter.refreshShapes(shapeList, callback);\n            return this;\n        };\n\n        /**\n         * 调整视图大小\n         */\n        ZRender.prototype.resize = function() {\n            this.painter.resize();\n            return this;\n        };\n\n        /**\n         * 动画\n         * \n         * @param {string|module:zrender/Group|module:zrender/shape/Base} el 动画对象\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animation~Animator}\n         * @example:\n         *     zr.animate(circle.id, 'style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        ZRender.prototype.animate = function (el, path, loop) {\n            var self = this;\n\n            if (typeof(el) === 'string') {\n                el = this.storage.get(el);\n            }\n            if (el) {\n                var target;\n                if (path) {\n                    var pathSplitted = path.split('.');\n                    var prop = el;\n                    for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                        if (!prop) {\n                            continue;\n                        }\n                        prop = prop[pathSplitted[i]];\n                    }\n                    if (prop) {\n                        target = prop;\n                    }\n                }\n                else {\n                    target = el;\n                }\n\n                if (!target) {\n                    log(\n                        'Property \"'\n                        + path\n                        + '\" is not existed in element '\n                        + el.id\n                    );\n                    return;\n                }\n\n                if (el.__animators == null) {\n                    // 正在进行的动画记数\n                    el.__animators = [];\n                }\n                var animators = el.__animators;\n\n                var animator = this.animation.animate(target, { loop: loop })\n                    .during(function () {\n                        self.modShape(el);\n                    })\n                    .done(function () {\n                        var idx = util.indexOf(el.__animators, animator);\n                        if (idx >= 0) {\n                            animators.splice(idx, 1);\n                        }\n                    });\n                animators.push(animator);\n\n                return animator;\n            }\n            else {\n                log('Element not existed');\n            }\n        };\n\n        /**\n         * 停止动画对象的动画\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\n         */\n        ZRender.prototype.stopAnimation = function (el) {\n            if (el.__animators) {\n                var animators = el.__animators;\n                var len = animators.length;\n                for (var i = 0; i < len; i++) {\n                    animators[i].stop();\n                }\n                animators.length = 0;\n            }\n            return this;\n        };\n\n        /**\n         * 停止所有动画\n         */\n        ZRender.prototype.clearAnimation = function () {\n            this.animation.clear();\n            return this;\n        };\n\n        /**\n         * loading显示\n         * \n         * @param {Object=} loadingEffect loading效果对象\n         */\n        ZRender.prototype.showLoading = function (loadingEffect) {\n            this.painter.showLoading(loadingEffect);\n            return this;\n        };\n\n        /**\n         * loading结束\n         */\n        ZRender.prototype.hideLoading = function () {\n            this.painter.hideLoading();\n            return this;\n        };\n\n        /**\n         * 获取视图宽度\n         */\n        ZRender.prototype.getWidth = function() {\n            return this.painter.getWidth();\n        };\n\n        /**\n         * 获取视图高度\n         */\n        ZRender.prototype.getHeight = function() {\n            return this.painter.getHeight();\n        };\n\n        /**\n         * 图像导出\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff'] 背景色\n         * @return {string} 图片的Base64 url\n         */\n        ZRender.prototype.toDataURL = function(type, backgroundColor, args) {\n            return this.painter.toDataURL(type, backgroundColor, args);\n        };\n\n        /**\n         * 将常规shape转成image shape\n         * @param {module:zrender/shape/Base} e\n         * @param {number} width\n         * @param {number} height\n         */\n        ZRender.prototype.shapeToImage = function(e, width, height) {\n            var id = guid();\n            return this.painter.shapeToImage(id, e, width, height);\n        };\n\n        /**\n         * 事件绑定\n         * \n         * @param {string} eventName 事件名称\n         * @param {Function} eventHandler 响应函数\n         * @param {Object} [context] 响应函数\n         */\n        ZRender.prototype.on = function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n            return this;\n        };\n\n        /**\n         * 事件解绑定，参数为空则解绑所有自定义事件\n         * \n         * @param {string} eventName 事件名称\n         * @param {Function} eventHandler 响应函数\n         */\n        ZRender.prototype.un = function(eventName, eventHandler) {\n            this.handler.un(eventName, eventHandler);\n            return this;\n        };\n        \n        /**\n         * 事件触发\n         * \n         * @param {string} eventName 事件名称，resize，hover，drag，etc\n         * @param {event=} event event dom事件对象\n         */\n        ZRender.prototype.trigger = function (eventName, event) {\n            this.handler.trigger(eventName, event);\n            return this;\n        };\n        \n\n        /**\n         * 清除当前ZRender下所有类图的数据和显示，clear后MVC和已绑定事件均还存在在，ZRender可用\n         */\n        ZRender.prototype.clear = function () {\n            this.storage.delRoot();\n            this.painter.clear();\n            return this;\n        };\n\n        /**\n         * 释放当前ZR实例（删除包括dom，数据、显示和事件绑定），dispose后ZR不可用\n         */\n        ZRender.prototype.dispose = function () {\n            this.animation.stop();\n            \n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation = \n            this.storage = \n            this.painter = \n            this.handler = null;\n\n            // 释放后告诉全局删除对自己的索引，没想到啥好方法\n            zrender.delInstance(this.id);\n        };\n\n        return zrender;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/zrender.js\n ** module id = 9\n ** module chunks = 0\n **/","define(\n    function (require) {\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        return function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>' \n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/log.js\n ** module id = 10\n ** module chunks = 0\n **/","define(function () {\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * @namespace module:zrender/config.EVENT\n         */\n        EVENT : {\n            /**\n             * 窗口大小变化\n             * @type {string}\n             */\n            RESIZE : 'resize',\n            /**\n             * 鼠标按钮被（手指）按下，事件对象是：目标图形元素或空\n             * @type {string}\n             */\n            CLICK : 'click',\n            /**\n             * 双击事件\n             * @type {string}\n             */\n            DBLCLICK : 'dblclick',\n            /**\n             * 鼠标滚轮变化，事件对象是：目标图形元素或空\n             * @type {string}\n             */\n            MOUSEWHEEL : 'mousewheel',\n            /**\n             * 鼠标（手指）被移动，事件对象是：目标图形元素或空\n             * @type {string}\n             */\n            MOUSEMOVE : 'mousemove',\n            /**\n             * 鼠标移到某图形元素之上，事件对象是：目标图形元素\n             * @type {string}\n             */\n            MOUSEOVER : 'mouseover',\n            /**\n             * 鼠标从某图形元素移开，事件对象是：目标图形元素\n             * @type {string}\n             */\n            MOUSEOUT : 'mouseout',\n            /**\n             * 鼠标按钮（手指）被按下，事件对象是：目标图形元素或空\n             * @type {string}\n             */\n            MOUSEDOWN : 'mousedown',\n            /**\n             * 鼠标按键（手指）被松开，事件对象是：目标图形元素或空\n             * @type {string}\n             */\n            MOUSEUP : 'mouseup',\n            /**\n             * 全局离开，MOUSEOUT触发比较频繁，一次离开优化绑定\n             * @type {string}\n             */\n            GLOBALOUT : 'globalout',    // \n\n            // 一次成功元素拖拽的行为事件过程是：\n            // dragstart > dragenter > dragover [> dragleave] > drop > dragend\n            /**\n             * 开始拖拽时触发，事件对象是：被拖拽图形元素\n             * @type {string}\n             */\n            DRAGSTART : 'dragstart',\n            /**\n             * 拖拽完毕时触发（在drop之后触发），事件对象是：被拖拽图形元素\n             * @type {string}\n             */\n            DRAGEND : 'dragend',\n            /**\n             * 拖拽图形元素进入目标图形元素时触发，事件对象是：目标图形元素\n             * @type {string}\n             */\n            DRAGENTER : 'dragenter',\n            /**\n             * 拖拽图形元素在目标图形元素上移动时触发，事件对象是：目标图形元素\n             * @type {string}\n             */\n            DRAGOVER : 'dragover',\n            /**\n             * 拖拽图形元素离开目标图形元素时触发，事件对象是：目标图形元素\n             * @type {string}\n             */\n            DRAGLEAVE : 'dragleave',\n            /**\n             * 拖拽图形元素放在目标图形元素内时触发，事件对象是：目标图形元素\n             * @type {string}\n             */\n            DROP : 'drop',\n            /**\n             * touch end - start < delay is click\n             * @type {number}\n             */\n            touchClickDelay : 300\n        },\n\n        elementClassName: 'zr-element',\n\n        // 是否异常捕获\n        catchBrushException: false,\n\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: Math.max(window.devicePixelRatio || 1, 1)\n    };\n    return config;\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/config.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\ndefine(\n    function() {\n        var idStart = 0x0907;\n\n        return function () {\n            return 'zrender__' + (idStart++);\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/guid.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Handler控制模块\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *\n */\n// TODO mouseover 只触发一次\n// 目前的高亮因为每次都需要 addHover 所以不能只是开始的时候触发一次\ndefine(\n    function (require) {\n\n        'use strict';\n\n        var config = require('./config');\n        var env = require('./tool/env');\n        var eventTool = require('./tool/event');\n        var util = require('./tool/util');\n        var vec2 = require('./tool/vector');\n        var mat2d = require('./tool/matrix');\n        var EVENT = config.EVENT;\n\n        var Eventful = require('./mixin/Eventful');\n\n        var domHandlerNames = [\n            'resize', 'click', 'dblclick',\n            'mousewheel', 'mousemove', 'mouseout', 'mouseup', 'mousedown',\n            'touchstart', 'touchend', 'touchmove'\n        ];\n\n        var isZRenderElement = function (event) {\n            // 暂时忽略 IE8-\n            if (window.G_vmlCanvasManager) {\n                return true;\n            }\n\n            event = event || window.event;\n            // 进入对象优先~\n            var target = event.toElement\n                          || event.relatedTarget\n                          || event.srcElement\n                          || event.target;\n\n            return target && target.className.match(config.elementClassName)\n        };\n\n        var domHandlers = {\n            /**\n             * 窗口大小改变响应函数\n             * @inner\n             * @param {Event} event\n             */\n            resize: function (event) {\n                event = event || window.event;\n                this._lastHover = null;\n                this._isMouseDown = 0;\n                \n                // 分发config.EVENT.RESIZE事件，global\n                this.dispatch(EVENT.RESIZE, event);\n            },\n\n            /**\n             * 点击响应函数\n             * @inner\n             * @param {Event} event\n             */\n            click: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                event = this._zrenderEventFixed(event);\n\n                // 分发config.EVENT.CLICK事件\n                var _lastHover = this._lastHover;\n                if ((_lastHover && _lastHover.clickable)\n                    || !_lastHover\n                ) {\n\n                    // 判断没有发生拖拽才触发click事件\n                    if (this._clickThreshold < 5) {\n                        this._dispatchAgency(_lastHover, EVENT.CLICK, event);\n                    }\n                }\n\n                this._mousemoveHandler(event);\n            },\n            \n            /**\n             * 双击响应函数\n             * @inner\n             * @param {Event} event\n             */\n            dblclick: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                event = event || window.event;\n                event = this._zrenderEventFixed(event);\n\n                // 分发config.EVENT.DBLCLICK事件\n                var _lastHover = this._lastHover;\n                if ((_lastHover && _lastHover.clickable)\n                    || !_lastHover\n                ) {\n\n                    // 判断没有发生拖拽才触发dblclick事件\n                    if (this._clickThreshold < 5) {\n                        this._dispatchAgency(_lastHover, EVENT.DBLCLICK, event);\n                    }\n                }\n\n                this._mousemoveHandler(event);\n            },\n            \n\n            /**\n             * 鼠标滚轮响应函数\n             * @inner\n             * @param {Event} event\n             */\n            mousewheel: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                event = this._zrenderEventFixed(event);\n\n                // http://www.sitepoint.com/html5-javascript-mouse-wheel/\n                // https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/mousewheel\n                var delta = event.wheelDelta // Webkit\n                            || -event.detail; // Firefox\n                var scale = delta > 0 ? 1.1 : 1 / 1.1;\n\n                var needsRefresh = false;\n\n                var mouseX = this._mouseX;\n                var mouseY = this._mouseY;\n                this.painter.eachBuildinLayer(function (layer) {\n                    var pos = layer.position;\n                    if (layer.zoomable) {\n                        layer.__zoom = layer.__zoom || 1;\n                        var newZoom = layer.__zoom;\n                        newZoom *= scale;\n                        newZoom = Math.max(\n                            Math.min(layer.maxZoom, newZoom),\n                            layer.minZoom\n                        );\n                        scale = newZoom / layer.__zoom;\n                        layer.__zoom = newZoom;\n                        // Keep the mouse center when scaling\n                        pos[0] -= (mouseX - pos[0]) * (scale - 1);\n                        pos[1] -= (mouseY - pos[1]) * (scale - 1);\n                        layer.scale[0] *= scale;\n                        layer.scale[1] *= scale;\n                        layer.dirty = true;\n                        needsRefresh = true;\n\n                        // Prevent browser default scroll action \n                        eventTool.stop(event);\n                    }\n                });\n                if (needsRefresh) {\n                    this.painter.refresh();\n                }\n\n                // 分发config.EVENT.MOUSEWHEEL事件\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEWHEEL, event);\n                this._mousemoveHandler(event);\n            },\n\n            /**\n             * 鼠标（手指）移动响应函数\n             * @inner\n             * @param {Event} event\n             */\n            mousemove: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                if (this.painter.isLoading()) {\n                    return;\n                }\n\n                event = this._zrenderEventFixed(event);\n                this._lastX = this._mouseX;\n                this._lastY = this._mouseY;\n                this._mouseX = eventTool.getX(event);\n                this._mouseY = eventTool.getY(event);\n                var dx = this._mouseX - this._lastX;\n                var dy = this._mouseY - this._lastY;\n\n                // 可能出现config.EVENT.DRAGSTART事件\n                // 避免手抖点击误认为拖拽\n                // if (this._mouseX - this._lastX > 1 || this._mouseY - this._lastY > 1) {\n                this._processDragStart(event);\n                // }\n                this._hasfound = 0;\n                this._event = event;\n\n                this._iterateAndFindHover();\n\n                // 找到的在迭代函数里做了处理，没找到得在迭代完后处理\n                if (!this._hasfound) {\n                    // 过滤首次拖拽产生的mouseout和dragLeave\n                    if (!this._draggingTarget\n                        || (this._lastHover && this._lastHover != this._draggingTarget)\n                    ) {\n                        // 可能出现config.EVENT.MOUSEOUT事件\n                        this._processOutShape(event);\n\n                        // 可能出现config.EVENT.DRAGLEAVE事件\n                        this._processDragLeave(event);\n                    }\n\n                    this._lastHover = null;\n                    this.storage.delHover();\n                    this.painter.clearHover();\n                }\n\n                // set cursor for root element\n                var cursor = 'default';\n\n                // 如果存在拖拽中元素，被拖拽的图形元素最后addHover\n                if (this._draggingTarget) {\n                    this.storage.drift(this._draggingTarget.id, dx, dy);\n                    this._draggingTarget.modSelf();\n                    this.storage.addHover(this._draggingTarget);\n\n                    // 拖拽不触发click事件\n                    this._clickThreshold++;\n                }\n                else if (this._isMouseDown) {\n                    var needsRefresh = false;\n                    // Layer dragging\n                    this.painter.eachBuildinLayer(function (layer) {\n                        if (layer.panable) {\n                            // PENDING\n                            cursor = 'move';\n                            // Keep the mouse center when scaling\n                            layer.position[0] += dx;\n                            layer.position[1] += dy;\n                            needsRefresh = true;\n                            layer.dirty = true;\n                        }\n                    });\n                    if (needsRefresh) {\n                        this.painter.refresh();\n                    }\n                }\n\n                if (this._draggingTarget || (this._hasfound && this._lastHover.draggable)) {\n                    cursor = 'move';\n                }\n                else if (this._hasfound && this._lastHover.clickable) {\n                    cursor = 'pointer';\n                }\n                this.root.style.cursor = cursor;\n\n                // 分发config.EVENT.MOUSEMOVE事件\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEMOVE, event);\n\n                if (this._draggingTarget || this._hasfound || this.storage.hasHoverShape()) {\n                    this.painter.refreshHover();\n                }\n            },\n\n            /**\n             * 鼠标（手指）离开响应函数\n             * @inner\n             * @param {Event} event\n             */\n            mouseout: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                event = this._zrenderEventFixed(event);\n\n                var element = event.toElement || event.relatedTarget;\n                if (element != this.root) {\n                    while (element && element.nodeType != 9) {\n                        // 忽略包含在root中的dom引起的mouseOut\n                        if (element == this.root) {\n                            this._mousemoveHandler(event);\n                            return;\n                        }\n\n                        element = element.parentNode;\n                    }\n                }\n\n                event.zrenderX = this._lastX;\n                event.zrenderY = this._lastY;\n                this.root.style.cursor = 'default';\n                this._isMouseDown = 0;\n\n                this._processOutShape(event);\n                this._processDrop(event);\n                this._processDragEnd(event);\n                if (!this.painter.isLoading()) {\n                    this.painter.refreshHover();\n                }\n                \n                this.dispatch(EVENT.GLOBALOUT, event);\n            },\n\n            /**\n             * 鼠标（手指）按下响应函数\n             * @inner\n             * @param {Event} event\n             */\n            mousedown: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                // 重置 clickThreshold\n                this._clickThreshold = 0;\n\n                if (this._lastDownButton == 2) {\n                    this._lastDownButton = event.button;\n                    this._mouseDownTarget = null;\n                    // 仅作为关闭右键菜单使用\n                    return;\n                }\n\n                this._lastMouseDownMoment = new Date();\n                event = this._zrenderEventFixed(event);\n                this._isMouseDown = 1;\n\n                // 分发config.EVENT.MOUSEDOWN事件\n                this._mouseDownTarget = this._lastHover;\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEDOWN, event);\n                this._lastDownButton = event.button;\n            },\n\n            /**\n             * 鼠标（手指）抬起响应函数\n             * @inner\n             * @param {Event} event\n             */\n            mouseup: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                event = this._zrenderEventFixed(event);\n                this.root.style.cursor = 'default';\n                this._isMouseDown = 0;\n                this._mouseDownTarget = null;\n\n                // 分发config.EVENT.MOUSEUP事件\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEUP, event);\n                this._processDrop(event);\n                this._processDragEnd(event);\n            },\n\n            /**\n             * Touch开始响应函数\n             * @inner\n             * @param {Event} event\n             */\n            touchstart: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                // eventTool.stop(event);// 阻止浏览器默认事件，重要\n                event = this._zrenderEventFixed(event, true);\n                this._lastTouchMoment = new Date();\n\n                // 平板补充一次findHover\n                this._mobileFindFixed(event);\n                this._mousedownHandler(event);\n            },\n\n            /**\n             * Touch移动响应函数\n             * @inner\n             * @param {Event} event\n             */\n            touchmove: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                event = this._zrenderEventFixed(event, true);\n                this._mousemoveHandler(event);\n                if (this._isDragging) {\n                    eventTool.stop(event);// 阻止浏览器默认事件，重要\n                }\n            },\n\n            /**\n             * Touch结束响应函数\n             * @inner\n             * @param {Event} event\n             */\n            touchend: function (event) {\n                if (! isZRenderElement(event)) {\n                    return;\n                }\n\n                // eventTool.stop(event);// 阻止浏览器默认事件，重要\n                event = this._zrenderEventFixed(event, true);\n                this._mouseupHandler(event);\n                \n                var now = new Date();\n                if (now - this._lastTouchMoment < EVENT.touchClickDelay) {\n                    this._mobileFindFixed(event);\n                    this._clickHandler(event);\n                    if (now - this._lastClickMoment < EVENT.touchClickDelay / 2) {\n                        this._dblclickHandler(event);\n                        if (this._lastHover && this._lastHover.clickable) {\n                            eventTool.stop(event);// 阻止浏览器默认事件，重要\n                        }\n                    }\n                    this._lastClickMoment = now;\n                }\n                this.painter.clearHover();\n            }\n        };\n\n        /**\n         * bind一个参数的function\n         * \n         * @inner\n         * @param {Function} handler 要bind的function\n         * @param {Object} context 运行时this环境\n         * @return {Function}\n         */\n        function bind1Arg(handler, context) {\n            return function (e) {\n                return handler.call(context, e);\n            };\n        }\n        /**function bind2Arg(handler, context) {\n            return function (arg1, arg2) {\n                return handler.call(context, arg1, arg2);\n            };\n        }*/\n\n        function bind3Arg(handler, context) {\n            return function (arg1, arg2, arg3) {\n                return handler.call(context, arg1, arg2, arg3);\n            };\n        }\n        /**\n         * 为控制类实例初始化dom 事件处理函数\n         * \n         * @inner\n         * @param {module:zrender/Handler} instance 控制类实例\n         */\n        function initDomHandler(instance) {\n            var len = domHandlerNames.length;\n            while (len--) {\n                var name = domHandlerNames[len];\n                instance['_' + name + 'Handler'] = bind1Arg(domHandlers[name], instance);\n            }\n        }\n\n        /**\n         * @alias module:zrender/Handler\n         * @constructor\n         * @extends module:zrender/mixin/Eventful\n         * @param {HTMLElement} root 绘图区域\n         * @param {module:zrender/Storage} storage Storage实例\n         * @param {module:zrender/Painter} painter Painter实例\n         */\n        var Handler = function(root, storage, painter) {\n            // 添加事件分发器特性\n            Eventful.call(this);\n\n            this.root = root;\n            this.storage = storage;\n            this.painter = painter;\n\n            // 各种事件标识的私有变量\n            // this._hasfound = false;              //是否找到hover图形元素\n            // this._lastHover = null;              //最后一个hover图形元素\n            // this._mouseDownTarget = null;\n            // this._draggingTarget = null;         //当前被拖拽的图形元素\n            // this._isMouseDown = false;\n            // this._isDragging = false;\n            // this._lastMouseDownMoment;\n            // this._lastTouchMoment;\n            // this._lastDownButton;\n\n            this._lastX = \n            this._lastY = \n            this._mouseX = \n            this._mouseY = 0;\n\n            this._findHover = bind3Arg(findHover, this);\n            this._domHover = painter.getDomHover();\n            initDomHandler(this);\n\n            // 初始化，事件绑定，支持的所有事件都由如下原生事件计算得来\n            if (window.addEventListener) {\n                window.addEventListener('resize', this._resizeHandler);\n                \n                if (env.os.tablet || env.os.phone) {\n                    // mobile支持\n                    root.addEventListener('touchstart', this._touchstartHandler);\n                    root.addEventListener('touchmove', this._touchmoveHandler);\n                    root.addEventListener('touchend', this._touchendHandler);\n                }\n                else {\n                    // mobile的click/move/up/down自己模拟\n                    root.addEventListener('click', this._clickHandler);\n                    root.addEventListener('dblclick', this._dblclickHandler);\n                    root.addEventListener('mousewheel', this._mousewheelHandler);\n                    root.addEventListener('mousemove', this._mousemoveHandler);\n                    root.addEventListener('mousedown', this._mousedownHandler);\n                    root.addEventListener('mouseup', this._mouseupHandler);\n                } \n                root.addEventListener('DOMMouseScroll', this._mousewheelHandler);\n                root.addEventListener('mouseout', this._mouseoutHandler);\n            }\n            else {\n                window.attachEvent('onresize', this._resizeHandler);\n\n                root.attachEvent('onclick', this._clickHandler);\n                //root.attachEvent('ondblclick ', this._dblclickHandler);\n                root.ondblclick = this._dblclickHandler;\n                root.attachEvent('onmousewheel', this._mousewheelHandler);\n                root.attachEvent('onmousemove', this._mousemoveHandler);\n                root.attachEvent('onmouseout', this._mouseoutHandler);\n                root.attachEvent('onmousedown', this._mousedownHandler);\n                root.attachEvent('onmouseup', this._mouseupHandler);\n            }\n        };\n\n        /**\n         * 自定义事件绑定\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\n         * @param {Function} handler 响应函数\n         * @param {Object} [context] 响应函数\n         */\n        Handler.prototype.on = function (eventName, handler, context) {\n            this.bind(eventName, handler, context);\n            return this;\n        };\n\n        /**\n         * 自定义事件解绑\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\n         * @param {Function} handler 响应函数\n         */\n        Handler.prototype.un = function (eventName, handler) {\n            this.unbind(eventName, handler);\n            return this;\n        };\n\n        /**\n         * 事件触发\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\n         * @param {event=} eventArgs event dom事件对象\n         */\n        Handler.prototype.trigger = function (eventName, eventArgs) {\n            switch (eventName) {\n                case EVENT.RESIZE:\n                case EVENT.CLICK:\n                case EVENT.DBLCLICK:\n                case EVENT.MOUSEWHEEL:\n                case EVENT.MOUSEMOVE:\n                case EVENT.MOUSEDOWN:\n                case EVENT.MOUSEUP:\n                case EVENT.MOUSEOUT:\n                    this['_' + eventName + 'Handler'](eventArgs);\n                    break;\n            }\n        };\n\n        /**\n         * 释放，解绑所有事件\n         */\n        Handler.prototype.dispose = function () {\n            var root = this.root;\n\n            if (window.removeEventListener) {\n                window.removeEventListener('resize', this._resizeHandler);\n\n                if (env.os.tablet || env.os.phone) {\n                    // mobile支持\n                    root.removeEventListener('touchstart', this._touchstartHandler);\n                    root.removeEventListener('touchmove', this._touchmoveHandler);\n                    root.removeEventListener('touchend', this._touchendHandler);\n                }\n                else {\n                    // mobile的click自己模拟\n                    root.removeEventListener('click', this._clickHandler);\n                    root.removeEventListener('dblclick', this._dblclickHandler);\n                    root.removeEventListener('mousewheel', this._mousewheelHandler);\n                    root.removeEventListener('mousemove', this._mousemoveHandler);\n                    root.removeEventListener('mousedown', this._mousedownHandler);\n                    root.removeEventListener('mouseup', this._mouseupHandler);\n                }\n                root.removeEventListener('DOMMouseScroll', this._mousewheelHandler);\n                root.removeEventListener('mouseout', this._mouseoutHandler);\n            }\n            else {\n                window.detachEvent('onresize', this._resizeHandler);\n\n                root.detachEvent('onclick', this._clickHandler);\n                root.detachEvent('dblclick', this._dblclickHandler);\n                root.detachEvent('onmousewheel', this._mousewheelHandler);\n                root.detachEvent('onmousemove', this._mousemoveHandler);\n                root.detachEvent('onmouseout', this._mouseoutHandler);\n                root.detachEvent('onmousedown', this._mousedownHandler);\n                root.detachEvent('onmouseup', this._mouseupHandler);\n            }\n\n            this.root =\n            this._domHover =\n            this.storage =\n            this.painter = null;\n            \n            this.un();\n        };\n\n        /**\n         * 拖拽开始\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processDragStart = function (event) {\n            var _lastHover = this._lastHover;\n\n            if (this._isMouseDown\n                && _lastHover\n                && _lastHover.draggable\n                && !this._draggingTarget\n                && this._mouseDownTarget == _lastHover\n            ) {\n                // 拖拽点击生效时长阀门，某些场景需要降低拖拽敏感度\n                if (_lastHover.dragEnableTime && \n                    new Date() - this._lastMouseDownMoment < _lastHover.dragEnableTime\n                ) {\n                    return;\n                }\n\n                var _draggingTarget = _lastHover;\n                this._draggingTarget = _draggingTarget;\n                this._isDragging = 1;\n\n                _draggingTarget.invisible = true;\n                this.storage.mod(_draggingTarget.id);\n\n                // 分发config.EVENT.DRAGSTART事件\n                this._dispatchAgency(\n                    _draggingTarget,\n                    EVENT.DRAGSTART,\n                    event\n                );\n                this.painter.refresh();\n            }\n        };\n\n        /**\n         * 拖拽进入目标元素\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processDragEnter = function (event) {\n            if (this._draggingTarget) {\n                // 分发config.EVENT.DRAGENTER事件\n                this._dispatchAgency(\n                    this._lastHover,\n                    EVENT.DRAGENTER,\n                    event,\n                    this._draggingTarget\n                );\n            }\n        };\n\n        /**\n         * 拖拽在目标元素上移动\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processDragOver = function (event) {\n            if (this._draggingTarget) {\n                // 分发config.EVENT.DRAGOVER事件\n                this._dispatchAgency(\n                    this._lastHover,\n                    EVENT.DRAGOVER,\n                    event,\n                    this._draggingTarget\n                );\n            }\n        };\n\n        /**\n         * 拖拽离开目标元素\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processDragLeave = function (event) {\n            if (this._draggingTarget) {\n                // 分发config.EVENT.DRAGLEAVE事件\n                this._dispatchAgency(\n                    this._lastHover,\n                    EVENT.DRAGLEAVE,\n                    event,\n                    this._draggingTarget\n                );\n            }\n        };\n\n        /**\n         * 拖拽在目标元素上完成\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processDrop = function (event) {\n            if (this._draggingTarget) {\n                this._draggingTarget.invisible = false;\n                this.storage.mod(this._draggingTarget.id);\n                this.painter.refresh();\n\n                // 分发config.EVENT.DROP事件\n                this._dispatchAgency(\n                    this._lastHover,\n                    EVENT.DROP,\n                    event,\n                    this._draggingTarget\n                );\n            }\n        };\n\n        /**\n         * 拖拽结束\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processDragEnd = function (event) {\n            if (this._draggingTarget) {\n                // 分发config.EVENT.DRAGEND事件\n                this._dispatchAgency(\n                    this._draggingTarget,\n                    EVENT.DRAGEND,\n                    event\n                );\n\n                this._lastHover = null;\n            }\n\n            this._isDragging = 0;\n            this._draggingTarget = null;\n        };\n\n        /**\n         * 鼠标在某个图形元素上移动\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processOverShape = function (event) {\n            // 分发config.EVENT.MOUSEOVER事件\n            this._dispatchAgency(this._lastHover, EVENT.MOUSEOVER, event);\n        };\n\n        /**\n         * 鼠标离开某个图形元素\n         * \n         * @private\n         * @param {Object} event 事件对象\n         */\n        Handler.prototype._processOutShape = function (event) {\n            // 分发config.EVENT.MOUSEOUT事件\n            this._dispatchAgency(this._lastHover, EVENT.MOUSEOUT, event);\n        };\n\n        /**\n         * 事件分发代理\n         * \n         * @private\n         * @param {Object} targetShape 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         * @param {Object=} draggedShape 拖拽事件特有，当前被拖拽图形元素\n         */\n        Handler.prototype._dispatchAgency = function (targetShape, eventName, event, draggedShape) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = {\n                type : eventName,\n                event : event,\n                target : targetShape,\n                cancelBubble: false\n            };\n\n            var el = targetShape;\n\n            if (draggedShape) {\n                eventPacket.dragged = draggedShape;\n            }\n\n            while (el) {\n                el[eventHandler] \n                && (eventPacket.cancelBubble = el[eventHandler](eventPacket));\n                el.dispatch(eventName, eventPacket);\n\n                el = el.parent;\n                \n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (targetShape) {\n                // 冒泡到顶级 zrender 对象\n                if (!eventPacket.cancelBubble) {\n                    this.dispatch(eventName, eventPacket);\n                }\n            }\n            else if (!draggedShape) {\n                // 无hover目标，无拖拽对象，原生事件分发\n                var eveObj = {\n                    type: eventName,\n                    event: event\n                };\n                this.dispatch(eventName, eveObj);\n                // 分发事件到用户自定义层\n                this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler](eveObj);\n                    }\n                    if (layer.dispatch) {\n                        layer.dispatch(eventName, eveObj);\n                    }\n                });\n            }\n        };\n\n        /**\n         * 迭代寻找hover shape\n         * @private\n         * @method\n         */\n        Handler.prototype._iterateAndFindHover = (function() {\n            var invTransform = mat2d.create();\n            return function() {\n                var list = this.storage.getShapeList();\n                var currentZLevel;\n                var currentLayer;\n                var tmp = [ 0, 0 ];\n                for (var i = list.length - 1; i >= 0 ; i--) {\n                    var shape = list[i];\n\n                    if (currentZLevel !== shape.zlevel) {\n                        currentLayer = this.painter.getLayer(shape.zlevel, currentLayer);\n                        tmp[0] = this._mouseX;\n                        tmp[1] = this._mouseY;\n\n                        if (currentLayer.needTransform) {\n                            mat2d.invert(invTransform, currentLayer.transform);\n                            vec2.applyTransform(tmp, tmp, invTransform);\n                        }\n                    }\n\n                    if (this._findHover(shape, tmp[0], tmp[1])) {\n                        break;\n                    }\n                }\n            };\n        })();\n        \n        // touch指尖错觉的尝试偏移量配置\n        var MOBILE_TOUCH_OFFSETS = [\n            { x: 10 },\n            { x: -20 },\n            { x: 10, y: 10 },\n            { y: -20 }\n        ];\n\n        // touch有指尖错觉，四向尝试，让touch上的点击更好触发事件\n        Handler.prototype._mobileFindFixed = function (event) {\n            this._lastHover = null;\n            this._mouseX = event.zrenderX;\n            this._mouseY = event.zrenderY;\n\n            this._event = event;\n\n            this._iterateAndFindHover();\n            for (var i = 0; !this._lastHover && i < MOBILE_TOUCH_OFFSETS.length ; i++) {\n                var offset = MOBILE_TOUCH_OFFSETS[ i ];\n                offset.x && (this._mouseX += offset.x);\n                offset.y && (this._mouseY += offset.y);\n\n                this._iterateAndFindHover();\n            }\n\n            if (this._lastHover) {\n                event.zrenderX = this._mouseX;\n                event.zrenderY = this._mouseY;\n            }\n        };\n\n        /**\n         * 迭代函数，查找hover到的图形元素并即时做些事件分发\n         * \n         * @inner\n         * @param {Object} shape 图形元素\n         * @param {number} x\n         * @param {number} y\n         */\n        function findHover(shape, x, y) {\n            if (\n                (this._draggingTarget && this._draggingTarget.id == shape.id) // 迭代到当前拖拽的图形上\n                || shape.isSilent() // 打酱油的路过，啥都不响应的shape~\n            ) {\n                return false;\n            }\n\n            var event = this._event;\n            if (shape.isCover(x, y)) {\n                if (shape.hoverable) {\n                    this.storage.addHover(shape);\n                }\n                // 查找是否在 clipShape 中\n                var p = shape.parent;\n                while (p) {\n                    if (p.clipShape && !p.clipShape.isCover(this._mouseX, this._mouseY))  {\n                        // 已经被祖先 clip 掉了\n                        return false;\n                    }\n                    p = p.parent;\n                }\n\n                if (this._lastHover != shape) {\n                    this._processOutShape(event);\n\n                    // 可能出现config.EVENT.DRAGLEAVE事件\n                    this._processDragLeave(event);\n\n                    this._lastHover = shape;\n\n                    // 可能出现config.EVENT.DRAGENTER事件\n                    this._processDragEnter(event);\n                }\n\n                this._processOverShape(event);\n\n                // 可能出现config.EVENT.DRAGOVER\n                this._processDragOver(event);\n\n                this._hasfound = 1;\n\n                return true;    // 找到则中断迭代查找\n            }\n\n            return false;\n        }\n\n        /**\n         * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标\n         * \n         * @private\n         */\n        Handler.prototype._zrenderEventFixed = function (event, isTouch) {\n            if (event.zrenderFixed) {\n                return event;\n            }\n\n            if (!isTouch) {\n                event = event || window.event;\n                // 进入对象优先~\n                var target = event.toElement\n                              || event.relatedTarget\n                              || event.srcElement\n                              || event.target;\n\n                if (target && target != this._domHover) {\n                    event.zrenderX = (typeof event.offsetX != 'undefined'\n                                        ? event.offsetX\n                                        : event.layerX)\n                                      + target.offsetLeft;\n                    event.zrenderY = (typeof event.offsetY != 'undefined'\n                                        ? event.offsetY\n                                        : event.layerY)\n                                      + target.offsetTop;\n                }\n            }\n            else {\n                var touch = event.type != 'touchend'\n                                ? event.targetTouches[0]\n                                : event.changedTouches[0];\n                if (touch) {\n                    var rBounding = this.painter._domRoot.getBoundingClientRect();\n                    // touch事件坐标是全屏的~\n                    event.zrenderX = touch.clientX - rBounding.left;\n                    event.zrenderY = touch.clientY - rBounding.top;\n                }\n            }\n\n            event.zrenderFixed = 1;\n            return event;\n        };\n\n        util.merge(Handler.prototype, Eventful.prototype, true);\n\n        return Handler;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/Handler.js\n ** module id = 13\n ** module chunks = 0\n **/","define(\n    function () {\n        var ArrayCtor = typeof Float32Array === 'undefined'\n            ? Array\n            : Float32Array;\n\n        /**\n         * @typedef {Float32Array|Array.<number>} Vector2\n         */\n        /**\n         * 二维向量类\n         * @exports zrender/tool/vector\n         */\n        var vector = {\n            /**\n             * 创建一个向量\n             * @param {number} [x=0]\n             * @param {number} [y=0]\n             * @return {Vector2}\n             */\n            create: function (x, y) {\n                var out = new ArrayCtor(2);\n                out[0] = x || 0;\n                out[1] = y || 0;\n                return out;\n            },\n\n            /**\n             * 复制向量数据\n             * @param {Vector2} out\n             * @param {Vector2} v\n             * @return {Vector2}\n             */\n            copy: function (out, v) {\n                out[0] = v[0];\n                out[1] = v[1];\n                return out;\n            },\n\n            /**\n             * 克隆一个向量\n             * @param {Vector2} v\n             * @return {Vector2}\n             */\n            clone: function (v) {\n                var out = new ArrayCtor(2);\n                out[0] = v[0];\n                out[1] = v[1];\n                return out;\n            },\n\n            /**\n             * 设置向量的两个项\n             * @param {Vector2} out\n             * @param {number} a\n             * @param {number} b\n             * @return {Vector2} 结果\n             */\n            set: function (out, a, b) {\n                out[0] = a;\n                out[1] = b;\n                return out;\n            },\n\n            /**\n             * 向量相加\n             * @param {Vector2} out\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             */\n            add: function (out, v1, v2) {\n                out[0] = v1[0] + v2[0];\n                out[1] = v1[1] + v2[1];\n                return out;\n            },\n\n            /**\n             * 向量缩放后相加\n             * @param {Vector2} out\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             * @param {number} a\n             */\n            scaleAndAdd: function (out, v1, v2, a) {\n                out[0] = v1[0] + v2[0] * a;\n                out[1] = v1[1] + v2[1] * a;\n                return out;\n            },\n\n            /**\n             * 向量相减\n             * @param {Vector2} out\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             */\n            sub: function (out, v1, v2) {\n                out[0] = v1[0] - v2[0];\n                out[1] = v1[1] - v2[1];\n                return out;\n            },\n\n            /**\n             * 向量长度\n             * @param {Vector2} v\n             * @return {number}\n             */\n            len: function (v) {\n                return Math.sqrt(this.lenSquare(v));\n            },\n\n            /**\n             * 向量长度平方\n             * @param {Vector2} v\n             * @return {number}\n             */\n            lenSquare: function (v) {\n                return v[0] * v[0] + v[1] * v[1];\n            },\n\n            /**\n             * 向量乘法\n             * @param {Vector2} out\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             */\n            mul: function (out, v1, v2) {\n                out[0] = v1[0] * v2[0];\n                out[1] = v1[1] * v2[1];\n                return out;\n            },\n\n            /**\n             * 向量除法\n             * @param {Vector2} out\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             */\n            div: function (out, v1, v2) {\n                out[0] = v1[0] / v2[0];\n                out[1] = v1[1] / v2[1];\n                return out;\n            },\n\n            /**\n             * 向量点乘\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             * @return {number}\n             */\n            dot: function (v1, v2) {\n                return v1[0] * v2[0] + v1[1] * v2[1];\n            },\n\n            /**\n             * 向量缩放\n             * @param {Vector2} out\n             * @param {Vector2} v\n             * @param {number} s\n             */\n            scale: function (out, v, s) {\n                out[0] = v[0] * s;\n                out[1] = v[1] * s;\n                return out;\n            },\n\n            /**\n             * 向量归一化\n             * @param {Vector2} out\n             * @param {Vector2} v\n             */\n            normalize: function (out, v) {\n                var d = vector.len(v);\n                if (d === 0) {\n                    out[0] = 0;\n                    out[1] = 0;\n                }\n                else {\n                    out[0] = v[0] / d;\n                    out[1] = v[1] / d;\n                }\n                return out;\n            },\n\n            /**\n             * 计算向量间距离\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             * @return {number}\n             */\n            distance: function (v1, v2) {\n                return Math.sqrt(\n                    (v1[0] - v2[0]) * (v1[0] - v2[0])\n                    + (v1[1] - v2[1]) * (v1[1] - v2[1])\n                );\n            },\n\n            /**\n             * 向量距离平方\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             * @return {number}\n             */\n            distanceSquare: function (v1, v2) {\n                return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                    + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n            },\n\n            /**\n             * 求负向量\n             * @param {Vector2} out\n             * @param {Vector2} v\n             */\n            negate: function (out, v) {\n                out[0] = -v[0];\n                out[1] = -v[1];\n                return out;\n            },\n\n            /**\n             * 插值两个点\n             * @param {Vector2} out\n             * @param {Vector2} v1\n             * @param {Vector2} v2\n             * @param {number} t\n             */\n            lerp: function (out, v1, v2, t) {\n                // var ax = v1[0];\n                // var ay = v1[1];\n                out[0] = v1[0] + t * (v2[0] - v1[0]);\n                out[1] = v1[1] + t * (v2[1] - v1[1]);\n                return out;\n            },\n            \n            /**\n             * 矩阵左乘向量\n             * @param {Vector2} out\n             * @param {Vector2} v\n             * @param {Vector2} m\n             */\n            applyTransform: function (out, v, m) {\n                var x = v[0];\n                var y = v[1];\n                out[0] = m[0] * x + m[2] * y + m[4];\n                out[1] = m[1] * x + m[3] * y + m[5];\n                return out;\n            },\n            /**\n             * 求两个向量最小值\n             * @param  {Vector2} out\n             * @param  {Vector2} v1\n             * @param  {Vector2} v2\n             */\n            min: function (out, v1, v2) {\n                out[0] = Math.min(v1[0], v2[0]);\n                out[1] = Math.min(v1[1], v2[1]);\n                return out;\n            },\n            /**\n             * 求两个向量最大值\n             * @param  {Vector2} out\n             * @param  {Vector2} v1\n             * @param  {Vector2} v2\n             */\n            max: function (out, v1, v2) {\n                out[0] = Math.max(v1[0], v2[0]);\n                out[1] = Math.max(v1[1], v2[1]);\n                return out;\n            }\n        };\n\n        vector.length = vector.len;\n        vector.lengthSquare = vector.lenSquare;\n        vector.dist = vector.distance;\n        vector.distSquare = vector.distanceSquare;\n        \n        return vector;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/vector.js\n ** module id = 14\n ** module chunks = 0\n **/","define(\n    function () {\n\n        var ArrayCtor = typeof Float32Array === 'undefined'\n            ? Array\n            : Float32Array;\n        /**\n         * 3x2矩阵操作类\n         * @exports zrender/tool/matrix\n         */\n        var matrix = {\n            /**\n             * 创建一个单位矩阵\n             * @return {Float32Array|Array.<number>}\n             */\n            create : function() {\n                var out = new ArrayCtor(6);\n                matrix.identity(out);\n                \n                return out;\n            },\n            /**\n             * 设置矩阵为单位矩阵\n             * @param {Float32Array|Array.<number>} out\n             */\n            identity : function(out) {\n                out[0] = 1;\n                out[1] = 0;\n                out[2] = 0;\n                out[3] = 1;\n                out[4] = 0;\n                out[5] = 0;\n                return out;\n            },\n            /**\n             * 复制矩阵\n             * @param {Float32Array|Array.<number>} out\n             * @param {Float32Array|Array.<number>} m\n             */\n            copy: function(out, m) {\n                out[0] = m[0];\n                out[1] = m[1];\n                out[2] = m[2];\n                out[3] = m[3];\n                out[4] = m[4];\n                out[5] = m[5];\n                return out;\n            },\n            /**\n             * 矩阵相乘\n             * @param {Float32Array|Array.<number>} out\n             * @param {Float32Array|Array.<number>} m1\n             * @param {Float32Array|Array.<number>} m2\n             */\n            mul : function (out, m1, m2) {\n                out[0] = m1[0] * m2[0] + m1[2] * m2[1];\n                out[1] = m1[1] * m2[0] + m1[3] * m2[1];\n                out[2] = m1[0] * m2[2] + m1[2] * m2[3];\n                out[3] = m1[1] * m2[2] + m1[3] * m2[3];\n                out[4] = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n                out[5] = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n                return out;\n            },\n            /**\n             * 平移变换\n             * @param {Float32Array|Array.<number>} out\n             * @param {Float32Array|Array.<number>} a\n             * @param {Float32Array|Array.<number>} v\n             */\n            translate : function(out, a, v) {\n                out[0] = a[0];\n                out[1] = a[1];\n                out[2] = a[2];\n                out[3] = a[3];\n                out[4] = a[4] + v[0];\n                out[5] = a[5] + v[1];\n                return out;\n            },\n            /**\n             * 旋转变换\n             * @param {Float32Array|Array.<number>} out\n             * @param {Float32Array|Array.<number>} a\n             * @param {number} rad\n             */\n            rotate : function(out, a, rad) {\n                var aa = a[0];\n                var ac = a[2];\n                var atx = a[4];\n                var ab = a[1];\n                var ad = a[3];\n                var aty = a[5];\n                var st = Math.sin(rad);\n                var ct = Math.cos(rad);\n\n                out[0] = aa * ct + ab * st;\n                out[1] = -aa * st + ab * ct;\n                out[2] = ac * ct + ad * st;\n                out[3] = -ac * st + ct * ad;\n                out[4] = ct * atx + st * aty;\n                out[5] = ct * aty - st * atx;\n                return out;\n            },\n            /**\n             * 缩放变换\n             * @param {Float32Array|Array.<number>} out\n             * @param {Float32Array|Array.<number>} a\n             * @param {Float32Array|Array.<number>} v\n             */\n            scale : function(out, a, v) {\n                var vx = v[0];\n                var vy = v[1];\n                out[0] = a[0] * vx;\n                out[1] = a[1] * vy;\n                out[2] = a[2] * vx;\n                out[3] = a[3] * vy;\n                out[4] = a[4] * vx;\n                out[5] = a[5] * vy;\n                return out;\n            },\n            /**\n             * 求逆矩阵\n             * @param {Float32Array|Array.<number>} out\n             * @param {Float32Array|Array.<number>} a\n             */\n            invert : function(out, a) {\n            \n                var aa = a[0];\n                var ac = a[2];\n                var atx = a[4];\n                var ab = a[1];\n                var ad = a[3];\n                var aty = a[5];\n\n                var det = aa * ad - ab * ac;\n                if (!det) {\n                    return null;\n                }\n                det = 1.0 / det;\n\n                out[0] = ad * det;\n                out[1] = -ab * det;\n                out[2] = -ac * det;\n                out[3] = aa * det;\n                out[4] = (ac * aty - ad * atx) * det;\n                out[5] = (ab * atx - aa * aty) * det;\n                return out;\n            }\n        };\n\n        return matrix;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/matrix.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * Painter绘图模块\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n define(\n    function (require) {\n        'use strict';\n\n        var config = require('./config');\n        var util = require('./tool/util');\n        // var vec2 = require('./tool/vector');\n        var log = require('./tool/log');\n        // var matrix = require('./tool/matrix');\n        var BaseLoadingEffect = require('./loadingEffect/Base');\n\n        var Layer = require('./Layer');\n\n        // 返回false的方法，用于避免页面被选中\n        function returnFalse() {\n            return false;\n        }\n\n        // 什么都不干的空方法\n        function doNothing() {}\n\n        function isLayerValid(layer) {\n            if (!layer) {\n                return false;\n            }\n            \n            if (layer.isBuildin) {\n                return true;\n            }\n\n            if (typeof(layer.resize) !== 'function'\n                || typeof(layer.refresh) !== 'function'\n            ) {\n                return false;\n            }\n\n            return true;\n        }\n\n        /**\n         * @alias module:zrender/Painter\n         * @constructor\n         * @param {HTMLElement} root 绘图容器\n         * @param {module:zrender/Storage} storage\n         */\n        var Painter = function (root, storage) {\n            /**\n             * 绘图容器\n             * @type {HTMLElement}\n             */\n            this.root = root;\n            root.style['-webkit-tap-highlight-color'] = 'transparent';\n            root.style['-webkit-user-select'] = 'none';\n            root.style['user-select'] = 'none';\n            root.style['-webkit-touch-callout'] = 'none';\n\n            /**\n             * @type {module:zrender/Storage}\n             */\n            this.storage = storage;\n\n            root.innerHTML = '';\n            this._width = this._getWidth(); // 宽，缓存记录\n            this._height = this._getHeight(); // 高，缓存记录\n\n            var domRoot = document.createElement('div');\n            this._domRoot = domRoot;\n\n            // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domRoot.style.position = 'relative';\n            domRoot.style.overflow = 'hidden';\n            domRoot.style.width = this._width + 'px';\n            domRoot.style.height = this._height + 'px';\n            root.appendChild(domRoot);\n\n            this._layers = {};\n\n            this._zlevelList = [];\n\n            this._layerConfig = {};\n\n            this._loadingEffect = new BaseLoadingEffect({});\n            this.shapeToImage = this._createShapeToImageProcessor();\n\n            // 创建各层canvas\n            // 背景\n            this._bgDom = document.createElement('div');\n            this._bgDom.style.cssText = [\n                'position:absolute;left:0px;top:0px;width:',\n                this._width, 'px;height:', this._height + 'px;', \n                '-webkit-user-select:none;user-select;none;',\n                '-webkit-touch-callout:none;'\n            ].join('');\n            this._bgDom.setAttribute('data-zr-dom-id', 'bg');\n            this._bgDom.className = config.elementClassName;\n\n            domRoot.appendChild(this._bgDom);\n            this._bgDom.onselectstart = returnFalse;\n\n            // 高亮\n            var hoverLayer = new Layer('_zrender_hover_', this);\n            this._layers['hover'] = hoverLayer;\n            domRoot.appendChild(hoverLayer.dom);\n            hoverLayer.initContext();\n\n            hoverLayer.dom.onselectstart = returnFalse;\n            hoverLayer.dom.style['-webkit-user-select'] = 'none';\n            hoverLayer.dom.style['user-select'] = 'none';\n            hoverLayer.dom.style['-webkit-touch-callout'] = 'none';\n\n            // Will be injected by zrender instance\n            this.refreshNextFrame = null;\n        };\n\n        /**\n         * 首次绘图，创建各种dom和context\n         * \n         * @param {Function} callback 绘画结束后的回调函数\n         */\n        Painter.prototype.render = function (callback) {\n            if (this.isLoading()) {\n                this.hideLoading();\n            }\n            // TODO\n            this.refresh(callback, true);\n\n            return this;\n        };\n\n        /**\n         * 刷新\n         * @param {Function} callback 刷新结束后的回调函数\n         * @param {boolean} paintAll 强制绘制所有shape\n         */\n        Painter.prototype.refresh = function (callback, paintAll) {\n            var list = this.storage.getShapeList(true);\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var z = this._zlevelList[i];\n                var layer = this._layers[z];\n                if (! layer.isBuildin && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            if (typeof callback == 'function') {\n                callback();\n            }\n\n            return this;\n        };\n\n        Painter.prototype._preProcessLayer = function (layer) {\n            layer.unusedCount++;\n            layer.updateTransform();\n        };\n\n        Painter.prototype._postProcessLayer = function (layer) {\n            layer.dirty = false;\n            // 删除过期的层\n            // PENDING\n            // if (layer.unusedCount >= 500) {\n            //     this.delLayer(z);\n            // }\n            if (layer.unusedCount == 1) {\n                layer.clear();\n            }\n        };\n \n        Painter.prototype._paintList = function (list, paintAll) {\n\n            if (typeof(paintAll) == 'undefined') {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            this.eachBuildinLayer(this._preProcessLayer);\n\n            // var invTransform = [];\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var shape = list[i];\n\n                // Change draw layer\n                if (currentZLevel !== shape.zlevel) {\n                    if (currentLayer) {\n                        if (currentLayer.needTransform) {\n                            ctx.restore();\n                        }\n                        ctx.flush && ctx.flush();\n                    }\n\n                    currentZLevel = shape.zlevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.isBuildin) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n\n                    // Reset the count\n                    currentLayer.unusedCount = 0;\n\n                    if (currentLayer.dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n\n                    if (currentLayer.needTransform) {\n                        ctx.save();\n                        currentLayer.setTransform(ctx);\n                    }\n                }\n\n                if ((currentLayer.dirty || paintAll) && !shape.invisible) {\n                    if (\n                        !shape.onbrush\n                        || (shape.onbrush && !shape.onbrush(ctx, false))\n                    ) {\n                        if (config.catchBrushException) {\n                            try {\n                                shape.brush(ctx, false, this.refreshNextFrame);\n                            }\n                            catch (error) {\n                                log(\n                                    error,\n                                    'brush error of ' + shape.type,\n                                    shape\n                                );\n                            }\n                        }\n                        else {\n                            shape.brush(ctx, false, this.refreshNextFrame);\n                        }\n                    }\n                }\n\n                shape.__dirty = false;\n            }\n\n            if (currentLayer) {\n                if (currentLayer.needTransform) {\n                    ctx.restore();\n                }\n                ctx.flush && ctx.flush();\n            }\n\n            this.eachBuildinLayer(this._postProcessLayer);\n        };\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        Painter.prototype.getLayer = function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer(zlevel, this);\n                layer.isBuildin = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                layer.updateTransform();\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        };\n\n        Painter.prototype.insertLayer = function (zlevel, layer) {\n            if (this._layers[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            var len = this._zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            if (len > 0 && zlevel > this._zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        this._zlevelList[i] < zlevel\n                        && this._zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = this._layers[this._zlevelList[i]];\n            }\n            this._zlevelList.splice(i + 1, 0, zlevel);\n\n            var prevDom = prevLayer ? prevLayer.dom : this._bgDom;\n            if (prevDom.nextSibling) {\n                prevDom.parentNode.insertBefore(\n                    layer.dom,\n                    prevDom.nextSibling\n                );\n            }\n            else {\n                prevDom.parentNode.appendChild(layer.dom);\n            }\n\n            this._layers[zlevel] = layer;\n        };\n\n        // Iterate each layer\n        Painter.prototype.eachLayer = function (cb, context) {\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var z = this._zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        };\n\n        // Iterate each buildin layer\n        Painter.prototype.eachBuildinLayer = function (cb, context) {\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var z = this._zlevelList[i];\n                var layer = this._layers[z];\n                if (layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        };\n\n        // Iterate each other layer except buildin layer\n        Painter.prototype.eachOtherLayer = function (cb, context) {\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var z = this._zlevelList[i];\n                var layer = this._layers[z];\n                if (! layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        };\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        Painter.prototype.getLayers = function () {\n            return this._layers;\n        };\n\n        Painter.prototype._updateLayerStatus = function (list) {\n            \n            var layers = this._layers;\n\n            var elCounts = {};\n\n            this.eachBuildinLayer(function (layer, z) {\n                elCounts[z] = layer.elCount;\n                layer.elCount = 0;\n            });\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var shape = list[i];\n                var zlevel = shape.zlevel;\n                var layer = layers[zlevel];\n                if (layer) {\n                    layer.elCount++;\n                    // 已经被标记为需要刷新\n                    if (layer.dirty) {\n                        continue;\n                    }\n                    layer.dirty = shape.__dirty;\n                }\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuildinLayer(function (layer, z) {\n                if (elCounts[z] !== layer.elCount) {\n                    layer.dirty = true;\n                }\n            });\n        };\n\n        /**\n         * 指定的图形列表\n         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形元素列表\n         * @param {Function} [callback] 视图更新后回调函数\n         */\n        Painter.prototype.refreshShapes = function (shapeList, callback) {\n            for (var i = 0, l = shapeList.length; i < l; i++) {\n                var shape = shapeList[i];\n                shape.modSelf();\n            }\n\n            this.refresh(callback);\n            return this;\n        };\n\n        /**\n         * 设置loading特效\n         * \n         * @param {Object} loadingEffect loading特效\n         * @return {Painter}\n         */\n        Painter.prototype.setLoadingEffect = function (loadingEffect) {\n            this._loadingEffect = loadingEffect;\n            return this;\n        };\n\n        /**\n         * 清除hover层外所有内容\n         */\n        Painter.prototype.clear = function () {\n            this.eachBuildinLayer(this._clearLayer);\n            return this;\n        };\n\n        Painter.prototype._clearLayer = function (layer) {\n            layer.clear();\n        };\n\n        /**\n         * 修改指定zlevel的绘制参数\n         * \n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @param {Array.<number>} [position] 层的平移\n         * @param {Array.<number>} [rotation] 层的旋转\n         * @param {Array.<number>} [scale] 层的缩放\n         * @param {boolean} [zoomable=false] 层是否支持鼠标缩放操作\n         * @param {boolean} [panable=false] 层是否支持鼠标平移操作\n         */\n        Painter.prototype.modLayer = function (zlevel, config) {\n            if (config) {\n                if (!this._layerConfig[zlevel]) {\n                    this._layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(this._layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n            }\n        };\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        Painter.prototype.delLayer = function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            // Save config\n            this.modLayer(zlevel, {\n                position: layer.position,\n                rotation: layer.rotation,\n                scale: layer.scale\n            });\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete this._layers[zlevel];\n\n            this._zlevelList.splice(util.indexOf(this._zlevelList, zlevel), 1);\n        };\n\n        /**\n         * 刷新hover层\n         */\n        Painter.prototype.refreshHover = function () {\n            this.clearHover();\n            var list = this.storage.getHoverShapes(true);\n            for (var i = 0, l = list.length; i < l; i++) {\n                this._brushHover(list[i]);\n            }\n            var ctx = this._layers.hover.ctx;\n            ctx.flush && ctx.flush();\n\n            this.storage.delHover();\n\n            return this;\n        };\n\n        /**\n         * 清除hover层所有内容\n         */\n        Painter.prototype.clearHover = function () {\n            var hover = this._layers.hover;\n            hover && hover.clear();\n\n            return this;\n        };\n\n        /**\n         * 显示loading\n         * \n         * @param {Object=} loadingEffect loading效果对象\n         */\n        Painter.prototype.showLoading = function (loadingEffect) {\n            this._loadingEffect && this._loadingEffect.stop();\n            loadingEffect && this.setLoadingEffect(loadingEffect);\n            this._loadingEffect.start(this);\n            this.loading = true;\n\n            return this;\n        };\n\n        /**\n         * loading结束\n         */\n        Painter.prototype.hideLoading = function () {\n            this._loadingEffect.stop();\n\n            this.clearHover();\n            this.loading = false;\n            return this;\n        };\n\n        /**\n         * loading结束判断\n         */\n        Painter.prototype.isLoading = function () {\n            return this.loading;\n        };\n\n        /**\n         * 区域大小变化后重绘\n         */\n        Painter.prototype.resize = function () {\n            var domRoot = this._domRoot;\n            domRoot.style.display = 'none';\n\n            var width = this._getWidth();\n            var height = this._getHeight();\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                this._width = width;\n                this._height = height;\n\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n\n                    this._layers[id].resize(width, height);\n                }\n\n                this.refresh(null, true);\n            }\n\n            return this;\n        };\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zLevel\n         */\n        Painter.prototype.clearLayer = function (zLevel) {\n            var layer = this._layers[zLevel];\n            if (layer) {\n                layer.clear();\n            }\n        };\n\n        /**\n         * 释放\n         */\n        Painter.prototype.dispose = function () {\n            if (this.isLoading()) {\n                this.hideLoading();\n            }\n\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot = \n            this._layers = null;\n        };\n\n        Painter.prototype.getDomHover = function () {\n            return this._layers.hover.dom;\n        };\n\n        /**\n         * 图像导出\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff'] 背景色\n         * @return {string} 图片的Base64 url\n         */\n        Painter.prototype.toDataURL = function (type, backgroundColor, args) {\n            if (window['G_vmlCanvasManager']) {\n                return null;\n            }\n\n            var imageLayer = new Layer('image', this);\n            this._bgDom.appendChild(imageLayer.dom);\n            imageLayer.initContext();\n            \n            var ctx = imageLayer.ctx;\n            imageLayer.clearColor = backgroundColor || '#fff';\n            imageLayer.clear();\n            \n            var self = this;\n            // 升序遍历，shape上的zlevel指定绘画图层的z轴层叠\n\n            this.storage.iterShape(\n                function (shape) {\n                    if (!shape.invisible) {\n                        if (!shape.onbrush // 没有onbrush\n                            // 有onbrush并且调用执行返回false或undefined则继续粉刷\n                            || (shape.onbrush && !shape.onbrush(ctx, false))\n                        ) {\n                            if (config.catchBrushException) {\n                                try {\n                                    shape.brush(ctx, false, self.refreshNextFrame);\n                                }\n                                catch (error) {\n                                    log(\n                                        error,\n                                        'brush error of ' + shape.type,\n                                        shape\n                                    );\n                                }\n                            }\n                            else {\n                                shape.brush(ctx, false, self.refreshNextFrame);\n                            }\n                        }\n                    }\n                },\n                { normal: 'up', update: true }\n            );\n            var image = imageLayer.dom.toDataURL(type, args); \n            ctx = null;\n            this._bgDom.removeChild(imageLayer.dom);\n            return image;\n        };\n\n        /**\n         * 获取绘图区域宽度\n         */\n        Painter.prototype.getWidth = function () {\n            return this._width;\n        };\n\n        /**\n         * 获取绘图区域高度\n         */\n        Painter.prototype.getHeight = function () {\n            return this._height;\n        };\n\n        Painter.prototype._getWidth = function () {\n            var root = this.root;\n            var stl = root.currentStyle\n                      || document.defaultView.getComputedStyle(root);\n\n            return ((root.clientWidth || parseInt(stl.width, 10))\n                    - parseInt(stl.paddingLeft, 10) // 请原谅我这比较粗暴\n                    - parseInt(stl.paddingRight, 10)).toFixed(0) - 0;\n        };\n\n        Painter.prototype._getHeight = function () {\n            var root = this.root;\n            var stl = root.currentStyle\n                      || document.defaultView.getComputedStyle(root);\n\n            return ((root.clientHeight || parseInt(stl.height, 10))\n                    - parseInt(stl.paddingTop, 10) // 请原谅我这比较粗暴\n                    - parseInt(stl.paddingBottom, 10)).toFixed(0) - 0;\n        };\n\n        Painter.prototype._brushHover = function (shape) {\n            var ctx = this._layers.hover.ctx;\n\n            if (!shape.onbrush // 没有onbrush\n                // 有onbrush并且调用执行返回false或undefined则继续粉刷\n                || (shape.onbrush && !shape.onbrush(ctx, true))\n            ) {\n                var layer = this.getLayer(shape.zlevel);\n                if (layer.needTransform) {\n                    ctx.save();\n                    layer.setTransform(ctx);\n                }\n                // Retina 优化\n                if (config.catchBrushException) {\n                    try {\n                        shape.brush(ctx, true, this.refreshNextFrame);\n                    }\n                    catch (error) {\n                        log(\n                            error, 'hoverBrush error of ' + shape.type, shape\n                        );\n                    }\n                }\n                else {\n                    shape.brush(ctx, true, this.refreshNextFrame);\n                }\n                if (layer.needTransform) {\n                    ctx.restore();\n                }\n            }\n        };\n\n        Painter.prototype._shapeToImage = function (\n            id, shape, width, height, devicePixelRatio\n        ) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            \n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n            canvas.setAttribute('width', width * devicePixelRatio);\n            canvas.setAttribute('height', height * devicePixelRatio);\n\n            ctx.clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\n\n            var shapeTransform = {\n                position : shape.position,\n                rotation : shape.rotation,\n                scale : shape.scale\n            };\n            shape.position = [ 0, 0, 0 ];\n            shape.rotation = 0;\n            shape.scale = [ 1, 1 ];\n            if (shape) {\n                shape.brush(ctx, false);\n            }\n\n            var ImageShape = require('./shape/Image');\n            var imgShape = new ImageShape({\n                id : id,\n                style : {\n                    x : 0,\n                    y : 0,\n                    image : canvas\n                }\n            });\n\n            if (shapeTransform.position != null) {\n                imgShape.position = shape.position = shapeTransform.position;\n            }\n\n            if (shapeTransform.rotation != null) {\n                imgShape.rotation = shape.rotation = shapeTransform.rotation;\n            }\n\n            if (shapeTransform.scale != null) {\n                imgShape.scale = shape.scale = shapeTransform.scale;\n            }\n\n            return imgShape;\n        };\n\n        Painter.prototype._createShapeToImageProcessor = function () {\n            if (window['G_vmlCanvasManager']) {\n                return doNothing;\n            }\n\n            var me = this;\n\n            return function (id, e, width, height) {\n                return me._shapeToImage(\n                    id, e, width, height, config.devicePixelRatio\n                );\n            };\n        };\n\n        return Painter;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/Painter.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * zrender: loading特效类\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\ndefine(\n    function(require) {\n        var util = require('../tool/util');\n        var TextShape = require('../shape/Text');\n        var RectangleShape = require('../shape/Rectangle');\n\n\n        var DEFAULT_TEXT = 'Loading...';\n        var DEFAULT_TEXT_FONT = 'normal 16px Arial';\n\n        /**\n         * @constructor\n         * \n         * @param {Object} options 选项\n         * @param {color} options.backgroundColor 背景颜色\n         * @param {Object} options.textStyle 文字样式，同shape/text.style\n         * @param {number=} options.progress 进度参数，部分特效有用\n         * @param {Object=} options.effect 特效参数，部分特效有用\n         * \n         * {\n         *     effect,\n         *     //loading话术\n         *     text:'',\n         *     // 水平安放位置，默认为 'center'，可指定x坐标\n         *     x:'center' || 'left' || 'right' || {number},\n         *     // 垂直安放位置，默认为'top'，可指定y坐标\n         *     y:'top' || 'bottom' || {number},\n         *\n         *     textStyle:{\n         *         textFont: 'normal 20px Arial' || {textFont}, //文本字体\n         *         color: {color}\n         *     }\n         * }\n         */\n        function Base(options) {\n            this.setOptions(options);\n        }\n\n        /**\n         * 创建loading文字图形\n         * \n         * @param {Object} textStyle 文字style，同shape/text.style\n         */\n        Base.prototype.createTextShape = function (textStyle) {\n            return new TextShape({\n                highlightStyle : util.merge(\n                    {\n                        x : this.canvasWidth / 2,\n                        y : this.canvasHeight / 2,\n                        text : DEFAULT_TEXT,\n                        textAlign : 'center',\n                        textBaseline : 'middle',\n                        textFont : DEFAULT_TEXT_FONT,\n                        color: '#333',\n                        brushType : 'fill'\n                    },\n                    textStyle,\n                    true\n                )\n            });\n        };\n        \n        /**\n         * 获取loading背景图形\n         * \n         * @param {color} color 背景颜色\n         */\n        Base.prototype.createBackgroundShape = function (color) {\n            return new RectangleShape({\n                highlightStyle : {\n                    x : 0,\n                    y : 0,\n                    width : this.canvasWidth,\n                    height : this.canvasHeight,\n                    brushType : 'fill',\n                    color : color\n                }\n            });\n        };\n\n        Base.prototype.start = function (painter) {\n            this.canvasWidth = painter._width;\n            this.canvasHeight = painter._height;\n\n            function addShapeHandle(param) {\n                painter.storage.addHover(param);\n            }\n            function refreshHandle() {\n                painter.refreshHover();\n            }\n            this.loadingTimer = this._start(addShapeHandle, refreshHandle);\n        };\n\n        Base.prototype._start = function (/*addShapeHandle, refreshHandle*/) {\n            return setInterval(function () {\n            }, 10000);\n        };\n\n        Base.prototype.stop = function () {\n            clearInterval(this.loadingTimer);\n        };\n\n        Base.prototype.setOptions = function (options) {\n            this.options = options || {};\n        };\n        \n        Base.prototype.adjust = function (value, region) {\n            if (value <= region[0]) {\n                value = region[0];\n            }\n            else if (value >= region[1]) {\n                value = region[1];\n            }\n            return value;\n        };\n        \n        Base.prototype.getLocation = function(loc, totalWidth, totalHeight) {\n            var x = loc.x != null ? loc.x : 'center';\n            switch (x) {\n                case 'center' :\n                    x = Math.floor((this.canvasWidth - totalWidth) / 2);\n                    break;\n                case 'left' :\n                    x = 0;\n                    break;\n                case 'right' :\n                    x = this.canvasWidth - totalWidth;\n                    break;\n            }\n            var y = loc.y != null ? loc.y : 'center';\n            switch (y) {\n                case 'center' :\n                    y = Math.floor((this.canvasHeight - totalHeight) / 2);\n                    break;\n                case 'top' :\n                    y = 0;\n                    break;\n                case 'bottom' :\n                    y = this.canvasHeight - totalHeight;\n                    break;\n            }\n            return {\n                x : x,\n                y : y,\n                width : totalWidth,\n                height : totalHeight\n            };\n        };\n\n        return Base;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/loadingEffect/Base.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * @module zrender/shape/Text\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @example\n *     var Text = require('zrender/shape/Text');\n *     var shape = new Text({\n *         style: {\n *             text: 'Label',\n *             x: 100,\n *             y: 100,\n *             textFont: '14px Arial'\n *         }\n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} ITextStyle\n * @property {number} x 横坐标\n * @property {number} y 纵坐标\n * @property {string} text 文本内容\n * @property {number} [maxWidth=null] 最大宽度限制\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textAlign] 可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n */\n\ndefine(\n    function (require) {\n        var area = require('../tool/area');\n        var Base = require('./Base');\n        \n        /**\n         * @alias module:zrender/shape/Text\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Text = function (options) {\n            Base.call(this, options);\n            /**\n             * 文字绘制样式\n             * @name module:zrender/shape/Text#style\n             * @type {module:zrender/shape/Text~ITextStyle}\n             */\n            /**\n             * 文字高亮绘制样式\n             * @name module:zrender/shape/Text#highlightStyle\n             * @type {module:zrender/shape/Text~ITextStyle}\n             */\n        };\n\n        Text.prototype =  {\n            type: 'text',\n\n            brush : function (ctx, isHighlight) {\n                var style = this.style;\n                if (isHighlight) {\n                    // 根据style扩展默认高亮样式\n                    style = this.getHighlightStyle(\n                        style, this.highlightStyle || {}\n                    );\n                }\n                \n                if (typeof(style.text) == 'undefined' || style.text === false) {\n                    return;\n                }\n\n                ctx.save();\n                this.doClip(ctx);\n\n                this.setContext(ctx, style);\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.textFont) {\n                    ctx.font = style.textFont;\n                }\n                ctx.textAlign = style.textAlign || 'start';\n                ctx.textBaseline = style.textBaseline || 'middle';\n\n                var text = (style.text + '').split('\\n');\n                var lineHeight = area.getTextHeight('国', style.textFont);\n                var rect = this.getRect(style);\n                var x = style.x;\n                var y;\n                if (style.textBaseline == 'top') {\n                    y = rect.y;\n                }\n                else if (style.textBaseline == 'bottom') {\n                    y = rect.y + lineHeight;\n                }\n                else {\n                    y = rect.y + lineHeight / 2;\n                }\n                \n                for (var i = 0, l = text.length; i < l; i++) {\n                    if (style.maxWidth) {\n                        switch (style.brushType) {\n                            case 'fill':\n                                ctx.fillText(\n                                    text[i],\n                                    x, y, style.maxWidth\n                                );\n                                break;\n                            case 'stroke':\n                                ctx.strokeText(\n                                    text[i],\n                                    x, y, style.maxWidth\n                                );\n                                break;\n                            case 'both':\n                                ctx.fillText(\n                                    text[i],\n                                    x, y, style.maxWidth\n                                );\n                                ctx.strokeText(\n                                    text[i],\n                                    x, y, style.maxWidth\n                                );\n                                break;\n                            default:\n                                ctx.fillText(\n                                    text[i],\n                                    x, y, style.maxWidth\n                                );\n                        }\n                    }\n                    else {\n                        switch (style.brushType) {\n                            case 'fill':\n                                ctx.fillText(text[i], x, y);\n                                break;\n                            case 'stroke':\n                                ctx.strokeText(text[i], x, y);\n                                break;\n                            case 'both':\n                                ctx.fillText(text[i], x, y);\n                                ctx.strokeText(text[i], x, y);\n                                break;\n                            default:\n                                ctx.fillText(text[i], x, y);\n                        }\n                    }\n                    y += lineHeight;\n                }\n\n                ctx.restore();\n                return;\n            },\n\n            /**\n             * 返回文字包围盒矩形\n             * @param {module:zrender/shape/Text~ITextStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var width = area.getTextWidth(style.text, style.textFont);\n                var height = area.getTextHeight(style.text, style.textFont);\n                \n                var textX = style.x;                 // 默认start == left\n                if (style.textAlign == 'end' || style.textAlign == 'right') {\n                    textX -= width;\n                }\n                else if (style.textAlign == 'center') {\n                    textX -= (width / 2);\n                }\n\n                var textY;\n                if (style.textBaseline == 'top') {\n                    textY = style.y;\n                }\n                else if (style.textBaseline == 'bottom') {\n                    textY = style.y - height;\n                }\n                else {\n                    // middle\n                    textY = style.y - height / 2;\n                }\n\n                style.__rect = {\n                    x : textX,\n                    y : textY,\n                    width : width,\n                    height : height\n                };\n                \n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(Text, Base);\n        return Text;\n    }\n);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Text.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * zrender: 图形空间辅助类\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n *\n * isInside：是否在区域内部\n * isOutside：是否在区域外部\n * getTextWidth：测算单行文本宽度\n */\ndefine(\n    function (require) {\n\n        'use strict';\n\n        var util = require('./util');\n        var curve = require('./curve');\n\n        var _ctx;\n        \n        var _textWidthCache = {};\n        var _textHeightCache = {};\n        var _textWidthCacheCounter = 0;\n        var _textHeightCacheCounter = 0;\n        var TEXT_CACHE_MAX = 5000;\n            \n        var PI2 = Math.PI * 2;\n\n        function normalizeRadian(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n        /**\n         * 包含判断\n         *\n         * @param {Object} shape : 图形\n         * @param {Object} area ： 目标区域\n         * @param {number} x ： 横坐标\n         * @param {number} y ： 纵坐标\n         */\n        function isInside(shape, area, x, y) {\n            if (!area || !shape) {\n                // 无参数或不支持类型\n                return false;\n            }\n            var zoneType = shape.type;\n\n            _ctx = _ctx || util.getContext();\n\n            // 未实现或不可用时(excanvas不支持)则数学运算，主要是line，polyline，ring\n            var _mathReturn = _mathMethod(shape, area, x, y);\n            if (typeof _mathReturn != 'undefined') {\n                return _mathReturn;\n            }\n\n            if (shape.buildPath && _ctx.isPointInPath) {\n                return _buildPathMethod(shape, _ctx, area, x, y);\n            }\n\n            // 上面的方法都行不通时\n            switch (zoneType) {\n                case 'ellipse': // Todo，不精确\n                    return true;\n                // 旋轮曲线  不准确\n                case 'trochoid':\n                    var _r = area.location == 'out'\n                            ? area.r1 + area.r2 + area.d\n                            : area.r1 - area.r2 + area.d;\n                    return isInsideCircle(area, x, y, _r);\n                // 玫瑰线 不准确\n                case 'rose' :\n                    return isInsideCircle(area, x, y, area.maxr);\n                // 路径，椭圆，曲线等-----------------13\n                default:\n                    return false;   // Todo，暂不支持\n            }\n        }\n\n        /**\n         * @param {Object} shape : 图形\n         * @param {Object} area ：目标区域\n         * @param {number} x ： 横坐标\n         * @param {number} y ： 纵坐标\n         * @return {boolean=} true表示坐标处在图形中\n         */\n        function _mathMethod(shape, area, x, y) {\n            var zoneType = shape.type;\n            // 在矩形内则部分图形需要进一步判断\n            switch (zoneType) {\n                // 贝塞尔曲线\n                case 'bezier-curve':\n                    if (typeof(area.cpX2) === 'undefined') {\n                        return isInsideQuadraticStroke(\n                            area.xStart, area.yStart,\n                            area.cpX1, area.cpY1, \n                            area.xEnd, area.yEnd,\n                            area.lineWidth, x, y\n                        );\n                    }\n                    return isInsideCubicStroke(\n                        area.xStart, area.yStart,\n                        area.cpX1, area.cpY1, \n                        area.cpX2, area.cpY2, \n                        area.xEnd, area.yEnd,\n                        area.lineWidth, x, y\n                    );\n                // 线\n                case 'line':\n                    return isInsideLine(\n                        area.xStart, area.yStart,\n                        area.xEnd, area.yEnd,\n                        area.lineWidth, x, y\n                    );\n                // 折线\n                case 'polyline':\n                    return isInsidePolyline(\n                        area.pointList, area.lineWidth, x, y\n                    );\n                // 圆环\n                case 'ring':\n                    return isInsideRing(\n                        area.x, area.y, area.r0, area.r, x, y\n                    );\n                // 圆形\n                case 'circle':\n                    return isInsideCircle(\n                        area.x, area.y, area.r, x, y\n                    );\n                // 扇形\n                case 'sector':\n                    var startAngle = area.startAngle * Math.PI / 180;\n                    var endAngle = area.endAngle * Math.PI / 180;\n                    if (!area.clockWise) {\n                        startAngle = -startAngle;\n                        endAngle = -endAngle;\n                    }\n                    return isInsideSector(\n                        area.x, area.y, area.r0, area.r,\n                        startAngle, endAngle,\n                        !area.clockWise,\n                        x, y\n                    );\n                // 多边形\n                case 'path':\n                    return area.pathArray && isInsidePath(\n                        area.pathArray, Math.max(area.lineWidth, 5),\n                        area.brushType, x, y\n                    );\n                case 'polygon':\n                case 'star':\n                case 'isogon':\n                    return isInsidePolygon(area.pointList, x, y);\n                // 文本\n                case 'text':\n                    var rect =  area.__rect || shape.getRect(area);\n                    return isInsideRect(\n                        rect.x, rect.y, rect.width, rect.height, x, y\n                    );\n                // 矩形\n                case 'rectangle':\n                // 图片\n                case 'image':\n                    return isInsideRect(\n                        area.x, area.y, area.width, area.height, x, y\n                    );\n            }\n        }\n\n        /**\n         * 通过buildPath方法来判断，三个方法中较快，但是不支持线条类型的shape，\n         * 而且excanvas不支持isPointInPath方法\n         *\n         * @param {Object} shape ： shape\n         * @param {Object} context : 上下文\n         * @param {Object} area ：目标区域\n         * @param {number} x ： 横坐标\n         * @param {number} y ： 纵坐标\n         * @return {boolean} true表示坐标处在图形中\n         */\n        function _buildPathMethod(shape, context, area, x, y) {\n            // 图形类实现路径创建了则用类的path\n            context.beginPath();\n            shape.buildPath(context, area);\n            context.closePath();\n            return context.isPointInPath(x, y);\n        }\n\n        /**\n         * !isInside\n         */\n        function isOutside(shape, area, x, y) {\n            return !isInside(shape, area, x, y);\n        }\n\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        function isInsideLine(x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = Math.max(lineWidth, 5);\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        function isInsideCubicStroke(\n            x0, y0, x1, y1, x2, y2, x3, y3,\n            lineWidth, x, y\n        ) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = Math.max(lineWidth, 5);\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d =  curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        function isInsideQuadraticStroke(\n            x0, y0, x1, y1, x2, y2,\n            lineWidth, x, y\n        ) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = Math.max(lineWidth, 5);\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d =  curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        function isInsideArcStroke(\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = Math.max(lineWidth, 5);\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) >= PI2) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n            \n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n\n        function isInsidePolyline(points, lineWidth, x, y) {\n            var lineWidth = Math.max(lineWidth, 10);\n            for (var i = 0, l = points.length - 1; i < l; i++) {\n                var x0 = points[i][0];\n                var y0 = points[i][1];\n                var x1 = points[i + 1][0];\n                var y1 = points[i + 1][1];\n\n                if (isInsideLine(x0, y0, x1, y1, lineWidth, x, y)) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function isInsideRing(cx, cy, r0, r, x, y) {\n            var d = (x - cx) * (x - cx) + (y - cy) * (y - cy);\n            return (d < r * r) && (d > r0 * r0);\n        }\n\n        /**\n         * 矩形包含判断\n         */\n        function isInsideRect(x0, y0, width, height, x, y) {\n            return x >= x0 && x <= (x0 + width)\n                && y >= y0 && y <= (y0 + height);\n        }\n\n        /**\n         * 圆形包含判断\n         */\n        function isInsideCircle(x0, y0, r, x, y) {\n            return (x - x0) * (x - x0) + (y - y0) * (y - y0)\n                   < r * r;\n        }\n\n        /**\n         * 扇形包含判断\n         */\n        function isInsideSector(\n            cx, cy, r0, r, startAngle, endAngle, anticlockwise, x, y\n        ) {\n            return isInsideArcStroke(\n                cx, cy, (r0 + r) / 2, startAngle, endAngle, anticlockwise,\n                r - r0, x, y\n            );\n        }\n\n        /**\n         * 多边形包含判断\n         * 与 canvas 一样采用 non-zero winding rule\n         */\n        function isInsidePolygon(points, x, y) {\n            var N = points.length;\n            var w = 0;\n\n            for (var i = 0, j = N - 1; i < N; i++) {\n                var x0 = points[j][0];\n                var y0 = points[j][1];\n                var x1 = points[i][0];\n                var y1 = points[i][1];\n                w += windingLine(x0, y0, x1, y1, x, y);\n                j = i;\n            }\n            return w !== 0;\n        }\n\n        function windingLine(x0, y0, x1, y1, x, y) {\n            if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n                return 0;\n            }\n            if (y1 == y0) {\n                return 0;\n            }\n            var dir = y1 < y0 ? 1 : -1;\n            var t = (y - y0) / (y1 - y0);\n            var x_ = t * (x1 - x0) + x0;\n\n            return x_ > x ? dir : 0;\n        }\n\n        // 临时数组\n        var roots = [-1, -1, -1];\n        var extrema = [-1, -1];\n\n        function swapExtrema() {\n            var tmp = extrema[0];\n            extrema[0] = extrema[1];\n            extrema[1] = tmp;\n        }\n        function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n            // Quick reject\n            if (\n                (y > y0 && y > y1 && y > y2 && y > y3)\n                || (y < y0 && y < y1 && y < y2 && y < y3)\n            ) {\n                return 0;\n            }\n            var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n            if (nRoots === 0) {\n                return 0;\n            }\n            else {\n                var w = 0;\n                var nExtrema = -1;\n                var y0_, y1_;\n                for (var i = 0; i < nRoots; i++) {\n                    var t = roots[i];\n                    var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                    if (x_ < x) { // Quick reject\n                        continue;\n                    }\n                    if (nExtrema < 0) {\n                        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                        if (extrema[1] < extrema[0] && nExtrema > 1) {\n                            swapExtrema();\n                        }\n                        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                        if (nExtrema > 1) {\n                            y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                        }\n                    }\n                    if (nExtrema == 2) {\n                        // 分成三段单调函数\n                        if (t < extrema[0]) {\n                            w += y0_ < y0 ? 1 : -1;\n                        } \n                        else if (t < extrema[1]) {\n                            w += y1_ < y0_ ? 1 : -1;\n                        } \n                        else {\n                            w += y3 < y1_ ? 1 : -1;\n                        }\n                    } \n                    else {\n                        // 分成两段单调函数\n                        if (t < extrema[0]) {\n                            w += y0_ < y0 ? 1 : -1;\n                        } \n                        else {\n                            w += y3 < y0_ ? 1 : -1;\n                        }\n                    }\n                }\n                return w;\n            }\n        }\n\n        function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n            // Quick reject\n            if (\n                (y > y0 && y > y1 && y > y2)\n                || (y < y0 && y < y1 && y < y2)\n            ) {\n                return 0;\n            }\n            var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n            if (nRoots === 0) {\n                return 0;\n            } \n            else {\n                var t = curve.quadraticExtremum(y0, y1, y2);\n                if (t >=0 && t <= 1) {\n                    var w = 0;\n                    var y_ = curve.quadraticAt(y0, y1, y2, t);\n                    for (var i = 0; i < nRoots; i++) {\n                        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                        if (x_ < x) {\n                            continue;\n                        }\n                        if (roots[i] < t) {\n                            w += y_ < y0 ? 1 : -1;\n                        } \n                        else {\n                            w += y2 < y_ ? 1 : -1;\n                        }\n                    }\n                    return w;\n                } \n                else {\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                    if (x_ < x) {\n                        return 0;\n                    }\n                    return y2 < y0 ? 1 : -1;\n                }\n            }\n        }\n        \n        // TODO\n        // Arc 旋转\n        function windingArc(\n            cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n        ) {\n            y -= cy;\n            if (y > r || y < -r) {\n                return 0;\n            }\n            var tmp = Math.sqrt(r * r - y * y);\n            roots[0] = -tmp;\n            roots[1] = tmp;\n\n            if (Math.abs(startAngle - endAngle) >= PI2) {\n                // Is a circle\n                startAngle = 0;\n                endAngle = PI2;\n                var dir = anticlockwise ? 1 : -1;\n                if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                    return dir;\n                } else {\n                    return 0;\n                }\n            }\n\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);   \n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);   \n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var w = 0;\n            for (var i = 0; i < 2; i++) {\n                var x_ = roots[i];\n                if (x_ + cx > x) {\n                    var angle = Math.atan2(y, x_);\n                    var dir = anticlockwise ? 1 : -1;\n                    if (angle < 0) {\n                        angle = PI2 + angle;\n                    }\n                    if (\n                        (angle >= startAngle && angle <= endAngle)\n                        || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                    ) {\n                        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                            dir = -dir;\n                        }\n                        w += dir;\n                    }\n                }\n            }\n            return w;\n        }\n\n        /**\n         * 路径包含判断\n         * 与 canvas 一样采用 non-zero winding rule\n         */\n        function isInsidePath(pathArray, lineWidth, brushType, x, y) {\n            var w = 0;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n            var beginSubpath = true;\n            var firstCmd = true;\n\n            brushType = brushType || 'fill';\n\n            var hasStroke = brushType === 'stroke' || brushType === 'both';\n            var hasFill = brushType === 'fill' || brushType === 'both';\n\n            // var roots = [-1, -1, -1];\n            for (var i = 0; i < pathArray.length; i++) {\n                var seg = pathArray[i];\n                var p = seg.points;\n                // Begin a new subpath\n                if (beginSubpath || seg.command === 'M') {\n                    if (i > 0) {\n                        // Close previous subpath\n                        if (hasFill) {\n                            w += windingLine(xi, yi, x0, y0, x, y);\n                        }\n                        if (w !== 0) {\n                            return true;\n                        }\n                    }\n                    x0 = p[p.length - 2];\n                    y0 = p[p.length - 1];\n                    beginSubpath = false;\n                    if (firstCmd && seg.command !== 'A') {\n                        // 如果第一个命令不是M, 是lineTo, bezierCurveTo\n                        // 等绘制命令的话，是会从该绘制的起点开始算的\n                        // Arc 会在之后做单独处理所以这里忽略\n                        firstCmd = false;\n                        xi = x0;\n                        yi = y0;\n                    }\n                }\n                switch (seg.command) {\n                    case 'M':\n                        xi = p[0];\n                        yi = p[1];\n                        break;\n                    case 'L':\n                        if (hasStroke) {\n                            if (isInsideLine(\n                                xi, yi, p[0], p[1], lineWidth, x, y\n                            )) {\n                                return true;\n                            }\n                        }\n                        if (hasFill) {\n                            w += windingLine(xi, yi, p[0], p[1], x, y);\n                        }\n                        xi = p[0];\n                        yi = p[1];\n                        break;\n                    case 'C':\n                        if (hasStroke) {\n                            if (isInsideCubicStroke(\n                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5],\n                                lineWidth, x, y\n                            )) {\n                                return true;\n                            }\n                        }\n                        if (hasFill) {\n                            w += windingCubic(\n                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5], x, y\n                            );\n                        }\n                        xi = p[4];\n                        yi = p[5];\n                        break;\n                    case 'Q':\n                        if (hasStroke) {\n                            if (isInsideQuadraticStroke(\n                                xi, yi, p[0], p[1], p[2], p[3],\n                                lineWidth, x, y\n                            )) {\n                                return true;\n                            }\n                        }\n                        if (hasFill) {\n                            w += windingQuadratic(\n                                xi, yi, p[0], p[1], p[2], p[3], x, y\n                            );\n                        }\n                        xi = p[2];\n                        yi = p[3];\n                        break;\n                    case 'A':\n                        // TODO Arc 旋转\n                        // TODO Arc 判断的开销比较大\n                        var cx = p[0];\n                        var cy = p[1];\n                        var rx = p[2];\n                        var ry = p[3];\n                        var theta = p[4];\n                        var dTheta = p[5];\n                        var x1 = Math.cos(theta) * rx + cx;\n                        var y1 = Math.sin(theta) * ry + cy;\n                        // 不是直接使用 arc 命令\n                        if (!firstCmd) {\n                            w += windingLine(xi, yi, x1, y1);\n                        } else {\n                            firstCmd = false;\n                            // 第一个命令起点还未定义\n                            x0 = x1;\n                            y0 = y1;\n                        }\n                        // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                        var _x = (x - cx) * ry / rx + cx;\n                        if (hasStroke) {\n                            if (isInsideArcStroke(\n                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],\n                                lineWidth, _x, y\n                            )) {\n                                return true;\n                            }\n                        }\n                        if (hasFill) {\n                            w += windingArc(\n                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],\n                                _x, y\n                            );\n                        }\n                        xi = Math.cos(theta + dTheta) * rx + cx;\n                        yi = Math.sin(theta + dTheta) * ry + cy;\n                        break;\n                    case 'z':\n                        if (hasStroke) {\n                            if (isInsideLine(\n                                xi, yi, x0, y0, lineWidth, x, y\n                            )) {\n                                return true;\n                            }\n                        }\n                        beginSubpath = true;\n                        break;\n                }\n            }\n            if (hasFill) {\n                w += windingLine(xi, yi, x0, y0, x, y);\n            }\n            return w !== 0;\n        }\n\n        /**\n         * 测算多行文本宽度\n         * @param {Object} text\n         * @param {Object} textFont\n         */\n        function getTextWidth(text, textFont) {\n            var key = text + ':' + textFont;\n            if (_textWidthCache[key]) {\n                return _textWidthCache[key];\n            }\n            _ctx = _ctx || util.getContext();\n            _ctx.save();\n\n            if (textFont) {\n                _ctx.font = textFont;\n            }\n            \n            text = (text + '').split('\\n');\n            var width = 0;\n            for (var i = 0, l = text.length; i < l; i++) {\n                width =  Math.max(\n                    _ctx.measureText(text[i]).width,\n                    width\n                );\n            }\n            _ctx.restore();\n\n            _textWidthCache[key] = width;\n            if (++_textWidthCacheCounter > TEXT_CACHE_MAX) {\n                // 内存释放\n                _textWidthCacheCounter = 0;\n                _textWidthCache = {};\n            }\n            \n            return width;\n        }\n        \n        /**\n         * 测算多行文本高度\n         * @param {Object} text\n         * @param {Object} textFont\n         */\n        function getTextHeight(text, textFont) {\n            var key = text + ':' + textFont;\n            if (_textHeightCache[key]) {\n                return _textHeightCache[key];\n            }\n            \n            _ctx = _ctx || util.getContext();\n\n            _ctx.save();\n            if (textFont) {\n                _ctx.font = textFont;\n            }\n            \n            text = (text + '').split('\\n');\n            // 比较粗暴\n            var height = (_ctx.measureText('国').width + 2) * text.length;\n\n            _ctx.restore();\n\n            _textHeightCache[key] = height;\n            if (++_textHeightCacheCounter > TEXT_CACHE_MAX) {\n                // 内存释放\n                _textHeightCacheCounter = 0;\n                _textHeightCache = {};\n            }\n            return height;\n        }\n\n        return {\n            isInside : isInside,\n            isOutside : isOutside,\n            getTextWidth : getTextWidth,\n            getTextHeight : getTextHeight,\n\n            isInsidePath: isInsidePath,\n            isInsidePolygon: isInsidePolygon,\n            isInsideSector: isInsideSector,\n            isInsideCircle: isInsideCircle,\n            isInsideLine: isInsideLine,\n            isInsideRect: isInsideRect,\n            isInsidePolyline: isInsidePolyline,\n\n            isInsideCubicStroke: isInsideCubicStroke,\n            isInsideQuadraticStroke: isInsideQuadraticStroke\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/area.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * 曲线辅助模块\n * @module zrender/tool/curve\n * @author pissang(https://www.github.com/pissang)\n */\ndefine(function(require) {\n\n    var vector = require('./vector');\n\n    'use strict';\n\n    var EPSILON = 1e-4;\n\n    var THREE_SQRT = Math.sqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = vector.create();\n    var _v1 = vector.create();\n    var _v2 = vector.create();\n    // var _v3 = vector.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /*\n    function evalCubicCoeff(a, b, c, d, t) {\n        return ((a * t + b) * t + c) * t + d;\n    }\n    */\n\n    /** \n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/tool/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /** \n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/tool/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/tool/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = Math.sqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -Math.pow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = Math.pow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -Math.pow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = Math.pow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * Math.sqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = Math.sqrt(A);\n                var tmp = Math.cos(theta);\n                \n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/tool/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = Math.sqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/tool/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            var d1 = vector.distSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            var d1 = vector.distSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                var d2 = vector.distSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);   \n        }\n        // console.log(interval, i);\n        return Math.sqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = Math.sqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/tool/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2 \n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/tool/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = vector.distSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = vector.distSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = vector.distSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);   \n        }\n        // console.log(interval, i);\n        return Math.sqrt(d);\n    }\n\n    return {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/curve.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * shape基类\n * @module zrender/shape/Base\n * @author  Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *          errorrik (errorrik@gmail.com)\n */\n\n/**\n * @typedef {Object} IBaseShapeStyle\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\n\n/**\n * @typedef {Object} module:zrender/shape/Base~IBoundingRect\n * @property {number} x 左上角顶点x轴坐标 \n * @property {number} y 左上角顶点y轴坐标\n * @property {number} width 包围盒矩形宽度\n * @property {number} height 包围盒矩形高度\n */\n\ndefine(\n    function(require) {\n        var vmlCanvasManager = window['G_vmlCanvasManager'];\n\n        var matrix = require('../tool/matrix');\n        var guid = require('../tool/guid');\n        var util = require('../tool/util');\n        var log = require('../tool/log');\n\n        var Transformable = require('../mixin/Transformable');\n        var Eventful = require('../mixin/Eventful');\n\n        function _fillText(ctx, text, x, y, textFont, textAlign, textBaseline) {\n            if (textFont) {\n                ctx.font = textFont;\n            }\n            ctx.textAlign = textAlign;\n            ctx.textBaseline = textBaseline;\n            var rect = _getTextRect(\n                text, x, y, textFont, textAlign, textBaseline\n            );\n            \n            text = (text + '').split('\\n');\n            var lineHeight = require('../tool/area').getTextHeight('国', textFont);\n            \n            switch (textBaseline) {\n                case 'top':\n                    y = rect.y;\n                    break;\n                case 'bottom':\n                    y = rect.y + lineHeight;\n                    break;\n                default:\n                    y = rect.y + lineHeight / 2;\n            }\n            \n            for (var i = 0, l = text.length; i < l; i++) {\n                ctx.fillText(text[i], x, y);\n                y += lineHeight;\n            }\n        }\n\n        /**\n         * 返回矩形区域，用于局部刷新和文字定位\n         * @inner\n         * @param {string} text\n         * @param {number} x\n         * @param {number} y\n         * @param {string} textFont\n         * @param {string} textAlign\n         * @param {string} textBaseline\n         */\n        function _getTextRect(text, x, y, textFont, textAlign, textBaseline) {\n            var area = require('../tool/area');\n            var width = area.getTextWidth(text, textFont);\n            var lineHeight = area.getTextHeight('国', textFont);\n            \n            text = (text + '').split('\\n');\n            \n            switch (textAlign) {\n                case 'end':\n                case 'right':\n                    x -= width;\n                    break;\n                case 'center':\n                    x -= (width / 2);\n                    break;\n            }\n\n            switch (textBaseline) {\n                case 'top':\n                    break;\n                case 'bottom':\n                    y -= lineHeight * text.length;\n                    break;\n                default:\n                    y -= lineHeight * text.length / 2;\n            }\n\n            return {\n                x : x,\n                y : y,\n                width : width,\n                height : lineHeight * text.length\n            };\n        }\n\n        /**\n         * @alias module:zrender/shape/Base\n         * @constructor\n         * @extends module:zrender/mixin/Transformable\n         * @extends module:zrender/mixin/Eventful\n         * @param {Object} options 关于shape的配置项，可以是shape的自有属性，也可以是自定义的属性。\n         */\n        var Base = function(options) {\n            \n            options = options || {};\n            \n            /**\n             * Shape id, 全局唯一\n             * @type {string}\n             */\n            this.id = options.id || guid();\n\n            for (var key in options) {\n                this[key] = options[key];\n            }\n\n            /**\n             * 基础绘制样式\n             * @type {module:zrender/shape/Base~IBaseShapeStyle}\n             */\n            this.style = this.style || {};\n\n            /**\n             * 高亮样式\n             * @type {module:zrender/shape/Base~IBaseShapeStyle}\n             */\n            this.highlightStyle = this.highlightStyle || null;\n\n            /**\n             * 父节点\n             * @readonly\n             * @type {module:zrender/Group}\n             * @default null\n             */\n            this.parent = null;\n\n            this.__dirty = true;\n\n            this.__clipShapes = [];\n\n            Transformable.call(this);\n            Eventful.call(this);\n        };\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * @name module:zrender/shape/Base#invisible\n         * @type {boolean}\n         * @default false\n         */\n        Base.prototype.invisible = false;\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * @name module:zrender/shape/Base#ignore\n         * @type {boolean}\n         * @default false\n         */\n        Base.prototype.ignore = false;\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:zrender/shape/Base#zlevel\n         * @type {number}\n         * @default 0\n         */\n        Base.prototype.zlevel = 0;\n\n        /**\n         * 是否可拖拽\n         * @name module:zrender/shape/Base#draggable\n         * @type {boolean}\n         * @default false\n         */\n        Base.prototype.draggable = false;\n\n        /**\n         * 是否可点击\n         * @name module:zrender/shape/Base#clickable\n         * @type {boolean}\n         * @default false\n         */\n        Base.prototype.clickable = false;\n\n        /**\n         * 是否可以hover\n         * @name module:zrender/shape/Base#hoverable\n         * @type {boolean}\n         * @default true\n         */\n        Base.prototype.hoverable = true;\n        \n        /**\n         * z值，跟zlevel一样影响shape绘制的前后顺序，z值大的shape会覆盖在z值小的上面，\n         * 但是并不会创建新的canvas，所以优先级低于zlevel，而且频繁改动的开销比zlevel小很多。\n         * \n         * @name module:zrender/shape/Base#z\n         * @type {number}\n         * @default 0\n         */\n        Base.prototype.z = 0;\n\n        /**\n         * 绘制图形\n         * \n         * @param {CanvasRenderingContext2D} ctx\n         * @param {boolean} [isHighlight=false] 是否使用高亮属性\n         * @param {Function} [updateCallback]\n         *        需要异步加载资源的shape可以通过这个callback(e), \n         *        让painter更新视图，base.brush没用，需要的话重载brush\n         */\n        Base.prototype.brush = function (ctx, isHighlight) {\n\n            var style = this.beforeBrush(ctx, isHighlight);\n\n            ctx.beginPath();\n            this.buildPath(ctx, style);\n\n            switch (style.brushType) {\n                /* jshint ignore:start */\n                case 'both':\n                    ctx.fill();\n                case 'stroke':\n                    style.lineWidth > 0 && ctx.stroke();\n                    break;\n                /* jshint ignore:end */\n                default:\n                    ctx.fill();\n            }\n            \n            this.drawText(ctx, style, this.style);\n\n            this.afterBrush(ctx);\n        };\n\n        /**\n         * 具体绘制操作前的一些公共操作\n         * @param {CanvasRenderingContext2D} ctx\n         * @param {boolean} [isHighlight=false] 是否使用高亮属性\n         * @return {Object} 处理后的样式\n         */\n        Base.prototype.beforeBrush = function (ctx, isHighlight) {\n            var style = this.style;\n            \n            if (this.brushTypeOnly) {\n                style.brushType = this.brushTypeOnly;\n            }\n\n            if (isHighlight) {\n                // 根据style扩展默认高亮样式\n                style = this.getHighlightStyle(\n                    style,\n                    this.highlightStyle || {},\n                    this.brushTypeOnly\n                );\n            }\n\n            if (this.brushTypeOnly == 'stroke') {\n                style.strokeColor = style.strokeColor || style.color;\n            }\n\n            ctx.save();\n\n            this.doClip(ctx);\n\n            this.setContext(ctx, style);\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            return style;\n        };\n\n        /**\n         * 绘制后的处理\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        Base.prototype.afterBrush = function (ctx) {\n            ctx.restore();\n        };\n\n        var STYLE_CTX_MAP = [\n            [ 'color', 'fillStyle' ],\n            [ 'strokeColor', 'strokeStyle' ],\n            [ 'opacity', 'globalAlpha' ],\n            [ 'lineCap', 'lineCap' ],\n            [ 'lineJoin', 'lineJoin' ],\n            [ 'miterLimit', 'miterLimit' ],\n            [ 'lineWidth', 'lineWidth' ],\n            [ 'shadowBlur', 'shadowBlur' ],\n            [ 'shadowColor', 'shadowColor' ],\n            [ 'shadowOffsetX', 'shadowOffsetX' ],\n            [ 'shadowOffsetY', 'shadowOffsetY' ]\n        ];\n\n        /**\n         * 设置 fillStyle, strokeStyle, shadow 等通用绘制样式\n         * @param {CanvasRenderingContext2D} ctx\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\n         */\n        Base.prototype.setContext = function (ctx, style) {\n            for (var i = 0, len = STYLE_CTX_MAP.length; i < len; i++) {\n                var styleProp = STYLE_CTX_MAP[i][0];\n                var styleValue = style[styleProp];\n                var ctxProp = STYLE_CTX_MAP[i][1];\n\n                if (typeof styleValue != 'undefined') {\n                    ctx[ctxProp] = styleValue;\n                }\n            }\n        };\n\n        var clipShapeInvTransform = matrix.create();\n        Base.prototype.doClip = function (ctx) {\n            if (this.__clipShapes && !vmlCanvasManager) {\n                for (var i = 0; i < this.__clipShapes.length; i++) {\n                    var clipShape = this.__clipShapes[i];\n                    if (clipShape.needTransform) {\n                        var m = clipShape.transform;\n                        matrix.invert(clipShapeInvTransform, m);\n                        ctx.transform(\n                            m[0], m[1],\n                            m[2], m[3],\n                            m[4], m[5]\n                        );\n                    }\n                    ctx.beginPath();\n                    clipShape.buildPath(ctx, clipShape.style);\n                    ctx.clip();\n                    // Transform back\n                    if (clipShape.needTransform) {\n                        var m = clipShapeInvTransform;\n                        ctx.transform(\n                            m[0], m[1],\n                            m[2], m[3],\n                            m[4], m[5]\n                        );\n                    }\n                }\n            }\n        };\n    \n        /**\n         * 根据默认样式扩展高亮样式\n         * \n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 默认样式\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} highlightStyle 高亮样式\n         * @param {string} brushTypeOnly\n         */\n        Base.prototype.getHighlightStyle = function (style, highlightStyle, brushTypeOnly) {\n            var newStyle = {};\n            for (var k in style) {\n                newStyle[k] = style[k];\n            }\n\n            var color = require('../tool/color');\n            var highlightColor = color.getHighlightColor();\n            // 根据highlightStyle扩展\n            if (style.brushType != 'stroke') {\n                // 带填充则用高亮色加粗边线\n                newStyle.strokeColor = highlightColor;\n                newStyle.lineWidth = (style.lineWidth || 1)\n                                      + this.getHighlightZoom();\n                newStyle.brushType = 'both';\n            }\n            else {\n                if (brushTypeOnly != 'stroke') {\n                    // 描边型的则用原色加工高亮\n                    newStyle.strokeColor = highlightColor;\n                    newStyle.lineWidth = (style.lineWidth || 1)\n                                          + this.getHighlightZoom();\n                } \n                else {\n                    // 线型的则用原色加工高亮\n                    newStyle.strokeColor = highlightStyle.strokeColor\n                                           || color.mix(\n                                                 style.strokeColor,\n                                                 color.toRGB(highlightColor)\n                                              );\n                }\n            }\n\n            // 可自定义覆盖默认值\n            for (var k in highlightStyle) {\n                if (typeof highlightStyle[k] != 'undefined') {\n                    newStyle[k] = highlightStyle[k];\n                }\n            }\n\n            return newStyle;\n        };\n\n        // 高亮放大效果参数\n        // 当前统一设置为6，如有需要差异设置，通过this.type判断实例类型\n        Base.prototype.getHighlightZoom = function () {\n            return this.type != 'text' ? 6 : 2;\n        };\n\n        /**\n         * 移动位置\n         * @param {number} dx 横坐标变化\n         * @param {number} dy 纵坐标变化\n         */\n        Base.prototype.drift = function (dx, dy) {\n            this.position[0] += dx;\n            this.position[1] += dy;\n        };\n\n        /**\n         * 构建绘制的Path\n         * @param {CanvasRenderingContext2D} ctx\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\n         */\n        Base.prototype.buildPath = function (ctx, style) {\n            log('buildPath not implemented in ' + this.type);\n        };\n\n        /**\n         * 计算返回包围盒矩形\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\n         * @return {module:zrender/shape/Base~IBoundingRect}\n         */\n        Base.prototype.getRect = function (style) {\n            log('getRect not implemented in ' + this.type);   \n        };\n        \n        /**\n         * 判断鼠标位置是否在图形内\n         * @param {number} x\n         * @param {number} y\n         * @return {boolean}\n         */\n        Base.prototype.isCover = function (x, y) {\n            var originPos = this.transformCoordToLocal(x, y);\n            x = originPos[0];\n            y = originPos[1];\n\n            // 快速预判并保留判断矩形\n            if (this.isCoverRect(x, y)) {\n                // 矩形内\n                return require('../tool/area').isInside(this, this.style, x, y);\n            }\n            \n            return false;\n        };\n\n        Base.prototype.isCoverRect = function (x, y) {\n            // 快速预判并保留判断矩形\n            var rect = this.style.__rect;\n            if (!rect) {\n                rect = this.style.__rect = this.getRect(this.style);\n            }\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        };\n\n        /**\n         * 绘制附加文本\n         * @param {CanvasRenderingContext2D} ctx\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 样式\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} normalStyle 默认样式，用于定位文字显示\n         */\n        Base.prototype.drawText = function (ctx, style, normalStyle) {\n            if (typeof(style.text) == 'undefined' || style.text === false) {\n                return;\n            }\n            // 字体颜色策略\n            var textColor = style.textColor || style.color || style.strokeColor;\n            ctx.fillStyle = textColor;\n\n            // 文本与图形间空白间隙\n            var dd = 10;\n            var al;         // 文本水平对齐\n            var bl;         // 文本垂直对齐\n            var tx;         // 文本横坐标\n            var ty;         // 文本纵坐标\n\n            var textPosition = style.textPosition       // 用户定义\n                               || this.textPosition     // shape默认\n                               || 'top';                // 全局默认\n\n            switch (textPosition) {\n                case 'inside': \n                case 'top': \n                case 'bottom': \n                case 'left': \n                case 'right': \n                    if (this.getRect) {\n                        var rect = (normalStyle || style).__rect\n                                   || this.getRect(normalStyle || style);\n\n                        switch (textPosition) {\n                            case 'inside':\n                                tx = rect.x + rect.width / 2;\n                                ty = rect.y + rect.height / 2;\n                                al = 'center';\n                                bl = 'middle';\n                                if (style.brushType != 'stroke'\n                                    && textColor == style.color\n                                ) {\n                                    ctx.fillStyle = '#fff';\n                                }\n                                break;\n                            case 'left':\n                                tx = rect.x - dd;\n                                ty = rect.y + rect.height / 2;\n                                al = 'end';\n                                bl = 'middle';\n                                break;\n                            case 'right':\n                                tx = rect.x + rect.width + dd;\n                                ty = rect.y + rect.height / 2;\n                                al = 'start';\n                                bl = 'middle';\n                                break;\n                            case 'top':\n                                tx = rect.x + rect.width / 2;\n                                ty = rect.y - dd;\n                                al = 'center';\n                                bl = 'bottom';\n                                break;\n                            case 'bottom':\n                                tx = rect.x + rect.width / 2;\n                                ty = rect.y + rect.height + dd;\n                                al = 'center';\n                                bl = 'top';\n                                break;\n                        }\n                    }\n                    break;\n                case 'start':\n                case 'end':\n                    var pointList = style.pointList\n                                    || [\n                                        [style.xStart || 0, style.yStart || 0],\n                                        [style.xEnd || 0, style.yEnd || 0]\n                                    ];\n                    var length = pointList.length;\n                    if (length < 2) {\n                        // 少于2个点就不画了~\n                        return;\n                    }\n                    var xStart;\n                    var xEnd;\n                    var yStart;\n                    var yEnd;\n                    switch (textPosition) {\n                        case 'start':\n                            xStart = pointList[1][0];\n                            xEnd = pointList[0][0];\n                            yStart = pointList[1][1];\n                            yEnd = pointList[0][1];\n                            break;\n                        case 'end':\n                            xStart = pointList[length - 2][0];\n                            xEnd = pointList[length - 1][0];\n                            yStart = pointList[length - 2][1];\n                            yEnd = pointList[length - 1][1];\n                            break;\n                    }\n                    tx = xEnd;\n                    ty = yEnd;\n                    \n                    var angle = Math.atan((yStart - yEnd) / (xEnd - xStart)) / Math.PI * 180;\n                    if ((xEnd - xStart) < 0) {\n                        angle += 180;\n                    }\n                    else if ((yStart - yEnd) < 0) {\n                        angle += 360;\n                    }\n                    \n                    dd = 5;\n                    if (angle >= 30 && angle <= 150) {\n                        al = 'center';\n                        bl = 'bottom';\n                        ty -= dd;\n                    }\n                    else if (angle > 150 && angle < 210) {\n                        al = 'right';\n                        bl = 'middle';\n                        tx -= dd;\n                    }\n                    else if (angle >= 210 && angle <= 330) {\n                        al = 'center';\n                        bl = 'top';\n                        ty += dd;\n                    }\n                    else {\n                        al = 'left';\n                        bl = 'middle';\n                        tx += dd;\n                    }\n                    break;\n                case 'specific':\n                    tx = style.textX || 0;\n                    ty = style.textY || 0;\n                    al = 'start';\n                    bl = 'middle';\n                    break;\n            }\n\n            if (tx != null && ty != null) {\n                _fillText(\n                    ctx,\n                    style.text, \n                    tx, ty, \n                    style.textFont,\n                    style.textAlign || al,\n                    style.textBaseline || bl\n                );\n            }\n        };\n\n        Base.prototype.modSelf = function() {\n            this.__dirty = true;\n            if (this.style) {\n                this.style.__rect = null;\n            }\n            if (this.highlightStyle) {\n                this.highlightStyle.__rect = null;\n            }\n        };\n\n        /**\n         * 图形是否会触发事件\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        Base.prototype.isSilent = function () {\n            return !(\n                this.hoverable || this.draggable || this.clickable\n                || this.onmousemove || this.onmouseover || this.onmouseout\n                || this.onmousedown || this.onmouseup || this.onclick\n                || this.ondragenter || this.ondragover || this.ondragleave\n                || this.ondrop\n            );\n        };\n\n        util.merge(Base.prototype, Transformable.prototype, true);\n        util.merge(Base.prototype, Eventful.prototype, true);\n\n        return Base;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Base.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\ndefine(function (require) {\n\n    'use strict';\n\n    var matrix = require('../tool/matrix');\n    var vector = require('../tool/vector');\n    var origin = [0, 0];\n\n    var mTranslate = matrix.translate;\n\n    var EPSILON = 5e-5;\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function () {\n\n        if (!this.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [ 0, 0 ];\n        }\n        if (typeof(this.rotation) == 'undefined') {\n            /**\n             * 旋转，可以通过数组二三项指定旋转的原点\n             * @type {Array.<number>}\n             * @default [0, 0, 0]\n             */\n            this.rotation = [ 0, 0, 0 ];\n        }\n        if (!this.scale) {\n            /**\n             * 缩放，可以通过数组三四项指定缩放的原点\n             * @type {Array.<number>}\n             * @default [1, 1, 0, 0]\n             */\n            this.scale = [ 1, 1, 0, 0 ];\n        }\n\n        this.needLocalTransform = false;\n\n        /**\n         * 是否有坐标变换\n         * @type {boolean}\n         * @readOnly\n         */\n        this.needTransform = false;\n    };\n\n    Transformable.prototype = {\n        \n        constructor: Transformable,\n\n        updateNeedTransform: function () {\n            this.needLocalTransform = isNotAroundZero(this.rotation[0])\n                || isNotAroundZero(this.position[0])\n                || isNotAroundZero(this.position[1])\n                || isNotAroundZero(this.scale[0] - 1)\n                || isNotAroundZero(this.scale[1] - 1);\n        },\n\n        /**\n         * 判断是否需要有坐标变换，更新needTransform属性。\n         * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n         */\n        updateTransform: function () {\n            \n            this.updateNeedTransform();\n\n            var parentHasTransform = this.parent && this.parent.needTransform;\n            this.needTransform = this.needLocalTransform || parentHasTransform;\n            \n            if (!this.needTransform) {\n                return;\n            }\n\n            var m = this.transform || matrix.create();\n            matrix.identity(m);\n\n            if (this.needLocalTransform) {\n                var scale = this.scale;\n                if (\n                    isNotAroundZero(scale[0])\n                 || isNotAroundZero(scale[1])\n                ) {\n                    origin[0] = -scale[2] || 0;\n                    origin[1] = -scale[3] || 0;\n                    var haveOrigin = isNotAroundZero(origin[0])\n                                  || isNotAroundZero(origin[1]);\n                    if (haveOrigin) {\n                        mTranslate(m, m, origin);\n                    }\n                    matrix.scale(m, m, scale);\n                    if (haveOrigin) {\n                        origin[0] = -origin[0];\n                        origin[1] = -origin[1];\n                        mTranslate(m, m, origin);\n                    }\n                }\n\n                if (this.rotation instanceof Array) {\n                    if (this.rotation[0] !== 0) {\n                        origin[0] = -this.rotation[1] || 0;\n                        origin[1] = -this.rotation[2] || 0;\n                        var haveOrigin = isNotAroundZero(origin[0])\n                                      || isNotAroundZero(origin[1]);\n                        if (haveOrigin) {\n                            mTranslate(m, m, origin);\n                        }\n                        matrix.rotate(m, m, this.rotation[0]);\n                        if (haveOrigin) {\n                            origin[0] = -origin[0];\n                            origin[1] = -origin[1];\n                            mTranslate(m, m, origin);\n                        }\n                    }\n                }\n                else {\n                    if (this.rotation !== 0) {\n                        matrix.rotate(m, m, this.rotation);\n                    }\n                }\n\n                if (\n                    isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1])\n                ) {\n                    mTranslate(m, m, this.position);\n                }\n            }\n\n            // 应用父节点变换\n            if (parentHasTransform) {\n                if (this.needLocalTransform) {\n                    matrix.mul(m, this.parent.transform, m);\n                }\n                else {\n                    matrix.copy(m, this.parent.transform);\n                }\n            }\n            // 保存这个变换矩阵\n            this.transform = m;\n\n            this.invTransform = this.invTransform || matrix.create();\n            matrix.invert(this.invTransform, m);\n        },\n        /**\n         * 将自己的transform应用到context上\n         * @param {Context2D} ctx\n         */\n        setTransform: function (ctx) {\n            if (this.needTransform) {\n                var m = this.transform;\n                ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            }\n        },\n        /**\n         * 设置图形的朝向\n         * @param  {Array.<number>|Float32Array} target\n         * @method\n         */\n        lookAt: (function () {\n            var v = vector.create();\n            return function(target) {\n                if (!this.transform) {\n                    this.transform = matrix.create();\n                }\n                var m = this.transform;\n                vector.sub(v, target, this.position);\n                if (isAroundZero(v[0]) && isAroundZero(v[1])) {\n                    return;\n                }\n                vector.normalize(v, v);\n                var scale = this.scale;\n                // Y Axis\n                // TODO Scale origin ?\n                m[2] = v[0] * scale[1];\n                m[3] = v[1] * scale[1];\n                // X Axis\n                m[0] = v[1] * scale[0];\n                m[1] = -v[0] * scale[0];\n                // Position\n                m[4] = this.position[0];\n                m[5] = this.position[1];\n\n                this.decomposeTransform();\n            };\n        })(),\n        /**\n         * 分解`transform`矩阵到`position`, `rotation`, `scale`\n         */\n        decomposeTransform: function () {\n            if (!this.transform) {\n                return;\n            }\n            var m = this.transform;\n            var sx = m[0] * m[0] + m[1] * m[1];\n            var position = this.position;\n            var scale = this.scale;\n            var rotation = this.rotation;\n            if (isNotAroundZero(sx - 1)) {\n                sx = Math.sqrt(sx);\n            }\n            var sy = m[2] * m[2] + m[3] * m[3];\n            if (isNotAroundZero(sy - 1)) {\n                sy = Math.sqrt(sy);\n            }\n            position[0] = m[4];\n            position[1] = m[5];\n            scale[0] = sx;\n            scale[1] = sy;\n            scale[2] = scale[3] = 0;\n            rotation[0] = Math.atan2(-m[1] / sy, m[0] / sx);\n            rotation[1] = rotation[2] = 0;\n        },\n\n        /**\n         * 变换坐标位置到 shape 的局部坐标空间\n         * @method\n         * @param {number} x\n         * @param {number} y\n         * @return {Array.<number>}\n         */\n        transformCoordToLocal: function (x, y) {\n            var v2 = [x, y];\n            if (this.needTransform && this.invTransform) {\n                vector.applyTransform(v2, v2, this.invTransform);\n            }\n            return v2;\n        }\n    };\n\n    return Transformable;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/mixin/Transformable.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * 颜色辅助模块\n * @module zrender/tool/color\n */\ndefine(function(require) {\n    var util = require('../tool/util');\n\n    var _ctx;\n\n    // Color palette is an array containing the default colors for the chart's\n    // series.\n    // When all colors are used, new colors are selected from the start again.\n    // Defaults to:\n    // 默认色板\n    var palette = [\n        '#ff9277', ' #dddd00', ' #ffc877', ' #bbe3ff', ' #d5ffbb',\n        '#bbbbff', ' #ddb000', ' #b0dd00', ' #e2bbff', ' #ffbbe3',\n        '#ff7777', ' #ff9900', ' #83dd00', ' #77e3ff', ' #778fff',\n        '#c877ff', ' #ff77ab', ' #ff6600', ' #aa8800', ' #77c7ff',\n        '#ad77ff', ' #ff77ff', ' #dd0083', ' #777700', ' #00aa00',\n        '#0088aa', ' #8400dd', ' #aa0088', ' #dd0000', ' #772e00'\n    ];\n    var _palette = palette;\n\n    var highlightColor = 'rgba(255,255,0,0.5)';\n    var _highlightColor = highlightColor;\n\n    // 颜色格式\n    /*jshint maxlen: 330 */\n    var colorRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i;\n\n    var _nameColors = {\n        aliceblue : '#f0f8ff',\n        antiquewhite : '#faebd7',\n        aqua : '#0ff',\n        aquamarine : '#7fffd4',\n        azure : '#f0ffff',\n        beige : '#f5f5dc',\n        bisque : '#ffe4c4',\n        black : '#000',\n        blanchedalmond : '#ffebcd',\n        blue : '#00f',\n        blueviolet : '#8a2be2',\n        brown : '#a52a2a',\n        burlywood : '#deb887',\n        cadetblue : '#5f9ea0',\n        chartreuse : '#7fff00',\n        chocolate : '#d2691e',\n        coral : '#ff7f50',\n        cornflowerblue : '#6495ed',\n        cornsilk : '#fff8dc',\n        crimson : '#dc143c',\n        cyan : '#0ff',\n        darkblue : '#00008b',\n        darkcyan : '#008b8b',\n        darkgoldenrod : '#b8860b',\n        darkgray : '#a9a9a9',\n        darkgrey : '#a9a9a9',\n        darkgreen : '#006400',\n        darkkhaki : '#bdb76b',\n        darkmagenta : '#8b008b',\n        darkolivegreen : '#556b2f',\n        darkorange : '#ff8c00',\n        darkorchid : '#9932cc',\n        darkred : '#8b0000',\n        darksalmon : '#e9967a',\n        darkseagreen : '#8fbc8f',\n        darkslateblue : '#483d8b',\n        darkslategray : '#2f4f4f',\n        darkslategrey : '#2f4f4f',\n        darkturquoise : '#00ced1',\n        darkviolet : '#9400d3',\n        deeppink : '#ff1493',\n        deepskyblue : '#00bfff',\n        dimgray : '#696969',\n        dimgrey : '#696969',\n        dodgerblue : '#1e90ff',\n        firebrick : '#b22222',\n        floralwhite : '#fffaf0',\n        forestgreen : '#228b22',\n        fuchsia : '#f0f',\n        gainsboro : '#dcdcdc',\n        ghostwhite : '#f8f8ff',\n        gold : '#ffd700',\n        goldenrod : '#daa520',\n        gray : '#808080',\n        grey : '#808080',\n        green : '#008000',\n        greenyellow : '#adff2f',\n        honeydew : '#f0fff0',\n        hotpink : '#ff69b4',\n        indianred : '#cd5c5c',\n        indigo : '#4b0082',\n        ivory : '#fffff0',\n        khaki : '#f0e68c',\n        lavender : '#e6e6fa',\n        lavenderblush : '#fff0f5',\n        lawngreen : '#7cfc00',\n        lemonchiffon : '#fffacd',\n        lightblue : '#add8e6',\n        lightcoral : '#f08080',\n        lightcyan : '#e0ffff',\n        lightgoldenrodyellow : '#fafad2',\n        lightgray : '#d3d3d3',\n        lightgrey : '#d3d3d3',\n        lightgreen : '#90ee90',\n        lightpink : '#ffb6c1',\n        lightsalmon : '#ffa07a',\n        lightseagreen : '#20b2aa',\n        lightskyblue : '#87cefa',\n        lightslategray : '#789',\n        lightslategrey : '#789',\n        lightsteelblue : '#b0c4de',\n        lightyellow : '#ffffe0',\n        lime : '#0f0',\n        limegreen : '#32cd32',\n        linen : '#faf0e6',\n        magenta : '#f0f',\n        maroon : '#800000',\n        mediumaquamarine : '#66cdaa',\n        mediumblue : '#0000cd',\n        mediumorchid : '#ba55d3',\n        mediumpurple : '#9370d8',\n        mediumseagreen : '#3cb371',\n        mediumslateblue : '#7b68ee',\n        mediumspringgreen : '#00fa9a',\n        mediumturquoise : '#48d1cc',\n        mediumvioletred : '#c71585',\n        midnightblue : '#191970',\n        mintcream : '#f5fffa',\n        mistyrose : '#ffe4e1',\n        moccasin : '#ffe4b5',\n        navajowhite : '#ffdead',\n        navy : '#000080',\n        oldlace : '#fdf5e6',\n        olive : '#808000',\n        olivedrab : '#6b8e23',\n        orange : '#ffa500',\n        orangered : '#ff4500',\n        orchid : '#da70d6',\n        palegoldenrod : '#eee8aa',\n        palegreen : '#98fb98',\n        paleturquoise : '#afeeee',\n        palevioletred : '#d87093',\n        papayawhip : '#ffefd5',\n        peachpuff : '#ffdab9',\n        peru : '#cd853f',\n        pink : '#ffc0cb',\n        plum : '#dda0dd',\n        powderblue : '#b0e0e6',\n        purple : '#800080',\n        red : '#f00',\n        rosybrown : '#bc8f8f',\n        royalblue : '#4169e1',\n        saddlebrown : '#8b4513',\n        salmon : '#fa8072',\n        sandybrown : '#f4a460',\n        seagreen : '#2e8b57',\n        seashell : '#fff5ee',\n        sienna : '#a0522d',\n        silver : '#c0c0c0',\n        skyblue : '#87ceeb',\n        slateblue : '#6a5acd',\n        slategray : '#708090',\n        slategrey : '#708090',\n        snow : '#fffafa',\n        springgreen : '#00ff7f',\n        steelblue : '#4682b4',\n        tan : '#d2b48c',\n        teal : '#008080',\n        thistle : '#d8bfd8',\n        tomato : '#ff6347',\n        turquoise : '#40e0d0',\n        violet : '#ee82ee',\n        wheat : '#f5deb3',\n        white : '#fff',\n        whitesmoke : '#f5f5f5',\n        yellow : '#ff0',\n        yellowgreen : '#9acd32'\n    };\n\n    /**\n     * 自定义调色板\n     */\n    function customPalette(userPalete) {\n        palette = userPalete;\n    }\n\n    /**\n     * 复位默认色板\n     */\n    function resetPalette() {\n        palette = _palette;\n    }\n\n    /**\n     * 获取色板颜色\n     * @memberOf module:zrender/tool/color\n     * @param {number} idx 色板位置\n     * @param {Array.<string>} [userPalete] 自定义色板\n     * @return {string} 颜色\n     */\n    function getColor(idx, userPalete) {\n        idx = idx | 0;\n        userPalete = userPalete || palette;\n        return userPalete[idx % userPalete.length];\n    }\n\n    /**\n     * 自定义默认高亮颜色\n     */\n    function customHighlight(userHighlightColor) {\n        highlightColor = userHighlightColor;\n    }\n\n    /**\n     * 重置默认高亮颜色\n     */\n    function resetHighlight() {\n        _highlightColor = highlightColor;\n    }\n\n    /**\n     * 获取默认高亮颜色\n     */\n    function getHighlightColor() {\n        return highlightColor;\n    }\n\n    /**\n     * 径向渐变\n     * @memberOf module:zrender/tool/color\n     * @param {number} x0 渐变起点\n     * @param {number} y0\n     * @param {number} r0\n     * @param {number} x1 渐变终点\n     * @param {number} y1\n     * @param {number} r1\n     * @param {Array} colorList 颜色列表\n     * @return {CanvasGradient}\n     */\n    function getRadialGradient(x0, y0, r0, x1, y1, r1, colorList) {\n        if (!_ctx) {\n            _ctx = util.getContext();\n        }\n        var gradient = _ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n        for (var i = 0, l = colorList.length; i < l; i++) {\n            gradient.addColorStop(colorList[i][0], colorList[i][1]);\n        }\n        gradient.__nonRecursion = true;\n        return gradient;\n    }\n\n    /**\n     * 线性渐变\n     * @param {Object} x0 渐变起点\n     * @param {Object} y0\n     * @param {Object} x1 渐变终点\n     * @param {Object} y1\n     * @param {Array} colorList 颜色列表\n     */\n    function getLinearGradient(x0, y0, x1, y1, colorList) {\n        if (!_ctx) {\n            _ctx = util.getContext();\n        }\n        var gradient = _ctx.createLinearGradient(x0, y0, x1, y1);\n        for (var i = 0, l = colorList.length; i < l; i++) {\n            gradient.addColorStop(colorList[i][0], colorList[i][1]);\n        }\n        gradient.__nonRecursion = true;\n        return gradient;\n    }\n\n    /**\n     * 获取两种颜色之间渐变颜色数组\n     * @param {color} start 起始颜色\n     * @param {color} end 结束颜色\n     * @param {number} step 渐变级数\n     * @return {Array}  颜色数组\n     */\n    function getStepColors(start, end, step) {\n        start = toRGBA(start);\n        end = toRGBA(end);\n        start = getData(start);\n        end = getData(end);\n\n        var colors = [];\n        var stepR = (end[0] - start[0]) / step;\n        var stepG = (end[1] - start[1]) / step;\n        var stepB = (end[2] - start[2]) / step;\n        var stepA = (end[3] - start[3]) / step;\n        // 生成颜色集合\n        // fix by linfeng 颜色堆积\n        for (var i = 0, r = start[0], g = start[1], b = start[2], a = start[3]; i < step; i++) {\n            colors[i] = toColor([\n                adjust(Math.floor(r), [ 0, 255 ]),\n                adjust(Math.floor(g), [ 0, 255 ]), \n                adjust(Math.floor(b), [ 0, 255 ]),\n                a.toFixed(4) - 0\n            ],'rgba');\n            r += stepR;\n            g += stepG;\n            b += stepB;\n            a += stepA;\n        }\n        r = end[0];\n        g = end[1];\n        b = end[2];\n        a = end[3];\n        colors[i] = toColor([r, g, b, a], 'rgba');\n        return colors;\n    }\n\n    /**\n     * 获取指定级数的渐变颜色数组\n     * @memberOf module:zrender/tool/color\n     * @param {Array.<string>} colors 颜色组\n     * @param {number} [step=20] 渐变级数\n     * @return {Array.<string>}  颜色数组\n     */\n    function getGradientColors(colors, step) {\n        var ret = [];\n        var len = colors.length;\n        if (step === undefined) {\n            step = 20;\n        }\n        if (len === 1) {\n            ret = getStepColors(colors[0], colors[0], step);\n        }\n        else if (len > 1) {\n            for (var i = 0, n = len - 1; i < n; i++) {\n                var steps = getStepColors(colors[i], colors[i + 1], step);\n                if (i < n - 1) {\n                    steps.pop();\n                }\n                ret = ret.concat(steps);\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * 颜色值数组转为指定格式颜色,例如:<br/>\n     * data = [60,20,20,0.1] format = 'rgba'\n     * 返回：rgba(60,20,20,0.1)\n     * @param {Array} data 颜色值数组\n     * @param {string} format 格式,默认rgb\n     * @return {string} 颜色\n     */\n    function toColor(data, format) {\n        format = format || 'rgb';\n        if (data && (data.length === 3 || data.length === 4)) {\n            data = map(data,\n                function(c) {\n                    return c > 1 ? Math.ceil(c) : c;\n                }\n            );\n\n            if (format.indexOf('hex') > -1) {\n                return '#' + ((1 << 24) + (data[0] << 16) + (data[1] << 8) + (+data[2])).toString(16).slice(1);\n            }\n            else if (format.indexOf('hs') > -1) {\n                var sx = map(data.slice(1, 3),\n                    function(c) {\n                        return c + '%';\n                    }\n                );\n                data[1] = sx[0];\n                data[2] = sx[1];\n            }\n\n            if (format.indexOf('a') > -1) {\n                if (data.length === 3) {\n                    data.push(1);\n                }\n                data[3] = adjust(data[3], [ 0, 1 ]);\n                return format + '(' + data.slice(0, 4).join(',') + ')';\n            }\n\n            return format + '(' + data.slice(0, 3).join(',') + ')';\n        }\n    }\n\n    /**\n     * 颜色字符串转换为rgba数组\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {Array.<number>} 颜色值数组\n     */\n    function toArray(color) {\n        color = trim(color);\n        if (color.indexOf('rgba') < 0) {\n            color = toRGBA(color);\n        }\n\n        var data = [];\n        var i = 0;\n        color.replace(/[\\d.]+/g, function (n) {\n            if (i < 3) {\n                n = n | 0;\n            }\n            else {\n                // Alpha\n                n = +n;\n            }\n            data[i++] = n;\n        });\n        return data;\n    }\n\n    /**\n     * 颜色格式转化\n     *\n     * @param {string} color 颜色值数组\n     * @param {string} format 格式,默认rgb\n     * @return {string} 颜色\n     */\n    function convert(color, format) {\n        if (!isCalculableColor(color)) {\n            return color;\n        }\n        var data = getData(color);\n        var alpha = data[3];\n        if (typeof alpha === 'undefined') {\n            alpha = 1;\n        }\n\n        if (color.indexOf('hsb') > -1) {\n            data = _HSV_2_RGB(data);\n        }\n        else if (color.indexOf('hsl') > -1) {\n            data = _HSL_2_RGB(data);\n        }\n\n        if (format.indexOf('hsb') > -1 || format.indexOf('hsv') > -1) {\n            data = _RGB_2_HSB(data);\n        }\n        else if (format.indexOf('hsl') > -1) {\n            data = _RGB_2_HSL(data);\n        }\n\n        data[3] = alpha;\n\n        return toColor(data, format);\n    }\n\n    /**\n     * 转换为rgba格式的颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} rgba颜色，rgba(r,g,b,a)\n     */\n    function toRGBA(color) {\n        return convert(color, 'rgba');\n    }\n\n    /**\n     * 转换为rgb数字格式的颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} rgb颜色，rgb(0,0,0)格式\n     */\n    function toRGB(color) {\n        return convert(color, 'rgb');\n    }\n\n    /**\n     * 转换为16进制颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} 16进制颜色，#rrggbb格式\n     */\n    function toHex(color) {\n        return convert(color, 'hex');\n    }\n\n    /**\n     * 转换为HSV颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} HSVA颜色，hsva(h,s,v,a)\n     */\n    function toHSVA(color) {\n        return convert(color, 'hsva');\n    }\n\n    /**\n     * 转换为HSV颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} HSV颜色，hsv(h,s,v)\n     */\n    function toHSV(color) {\n        return convert(color, 'hsv');\n    }\n\n    /**\n     * 转换为HSBA颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} HSBA颜色，hsba(h,s,b,a)\n     */\n    function toHSBA(color) {\n        return convert(color, 'hsba');\n    }\n\n    /**\n     * 转换为HSB颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} HSB颜色，hsb(h,s,b)\n     */\n    function toHSB(color) {\n        return convert(color, 'hsb');\n    }\n\n    /**\n     * 转换为HSLA颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} HSLA颜色，hsla(h,s,l,a)\n     */\n    function toHSLA(color) {\n        return convert(color, 'hsla');\n    }\n\n    /**\n     * 转换为HSL颜色\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} HSL颜色，hsl(h,s,l)\n     */\n    function toHSL(color) {\n        return convert(color, 'hsl');\n    }\n\n    /**\n     * 转换颜色名\n     * \n     * @param {string} color 颜色\n     * @return {string} 颜色名\n     */\n    function toName(color) {\n        for (var key in _nameColors) {\n            if (toHex(_nameColors[key]) === toHex(color)) {\n                return key;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 移除颜色中多余空格\n     * \n     * @param {string} color 颜色\n     * @return {string} 无空格颜色\n     */\n    function trim(color) {\n        return String(color).replace(/\\s+/g, '');\n    }\n\n    /**\n     * 颜色规范化\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} 规范化后的颜色\n     */\n    function normalize(color) {\n        // 颜色名\n        if (_nameColors[color]) {\n            color = _nameColors[color];\n        }\n        // 去掉空格\n        color = trim(color);\n        // hsv与hsb等价\n        color = color.replace(/hsv/i, 'hsb');\n        // rgb转为rrggbb\n        if (/^#[\\da-f]{3}$/i.test(color)) {\n            color = parseInt(color.slice(1), 16);\n            var r = (color & 0xf00) << 8;\n            var g = (color & 0xf0) << 4;\n            var b = color & 0xf;\n\n            color = '#' + ((1 << 24) + (r << 4) + r + (g << 4) + g + (b << 4) + b).toString(16).slice(1);\n        }\n        // 或者使用以下正则替换，不过 chrome 下性能相对差点\n        // color = color.replace(/^#([\\da-f])([\\da-f])([\\da-f])$/i, '#$1$1$2$2$3$3');\n        return color;\n    }\n\n    /**\n     * 颜色加深或减淡，当level>0加深，当level<0减淡\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @param {number} level 升降程度,取值区间[-1,1]\n     * @return {string} 加深或减淡后颜色值\n     */\n    function lift(color, level) {\n        if (!isCalculableColor(color)) {\n            return color;\n        }\n        var direct = level > 0 ? 1 : -1;\n        if (typeof level === 'undefined') {\n            level = 0;\n        }\n        level = Math.abs(level) > 1 ? 1 : Math.abs(level);\n        color = toRGB(color);\n        var data = getData(color);\n        for (var i = 0; i < 3; i++) {\n            if (direct === 1) {\n                data[i] = data[i] * (1 - level) | 0;\n            }\n            else {\n                data[i] = ((255 - data[i]) * level + data[i]) | 0;\n            }\n        }\n        return 'rgb(' + data.join(',') + ')';\n    }\n\n    /**\n     * 颜色翻转,[255-r,255-g,255-b,1-a]\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @return {string} 翻转颜色\n     */\n    function reverse(color) {\n        if (!isCalculableColor(color)) {\n            return color;\n        }\n        var data = getData(toRGBA(color));\n        data = map(data,\n            function(c) {\n                return 255 - c;\n            }\n        );\n        return toColor(data, 'rgb');\n    }\n\n    /**\n     * 简单两种颜色混合\n     * @memberOf module:zrender/tool/color\n     * @param {string} color1 第一种颜色\n     * @param {string} color2 第二种颜色\n     * @param {number} weight 混合权重[0-1]\n     * @return {string} 结果色,rgb(r,g,b)或rgba(r,g,b,a)\n     */\n    function mix(color1, color2, weight) {\n        if (!isCalculableColor(color1) || !isCalculableColor(color2)) {\n            return color1;\n        }\n        \n        if (typeof weight === 'undefined') {\n            weight = 0.5;\n        }\n        weight = 1 - adjust(weight, [ 0, 1 ]);\n\n        var w = weight * 2 - 1;\n        var data1 = getData(toRGBA(color1));\n        var data2 = getData(toRGBA(color2));\n\n        var d = data1[3] - data2[3];\n\n        var weight1 = (((w * d === -1) ? w : (w + d) / (1 + w * d)) + 1) / 2;\n        var weight2 = 1 - weight1;\n\n        var data = [];\n\n        for (var i = 0; i < 3; i++) {\n            data[i] = data1[i] * weight1 + data2[i] * weight2;\n        }\n\n        var alpha = data1[3] * weight + data2[3] * (1 - weight);\n        alpha = Math.max(0, Math.min(1, alpha));\n\n        if (data1[3] === 1 && data2[3] === 1) {// 不考虑透明度\n            return toColor(data, 'rgb');\n        }\n        data[3] = alpha;\n        return toColor(data, 'rgba');\n    }\n\n    /**\n     * 随机颜色\n     * \n     * @return {string} 颜色值，#rrggbb格式\n     */\n    function random() {\n        return '#' + (Math.random().toString(16) + '0000').slice(2, 8);\n    }\n\n    /**\n     * 获取颜色值数组,返回值范围： <br/>\n     * RGB 范围[0-255] <br/>\n     * HSL/HSV/HSB 范围[0-1]<br/>\n     * A透明度范围[0-1]\n     * 支持格式：\n     * #rgb\n     * #rrggbb\n     * rgb(r,g,b)\n     * rgb(r%,g%,b%)\n     * rgba(r,g,b,a)\n     * hsb(h,s,b) // hsv与hsb等价\n     * hsb(h%,s%,b%)\n     * hsba(h,s,b,a)\n     * hsl(h,s,l)\n     * hsl(h%,s%,l%)\n     * hsla(h,s,l,a)\n     *\n     * @param {string} color 颜色\n     * @return {Array.<number>} 颜色值数组或null\n     */\n    function getData(color) {\n        color = normalize(color);\n        var r = color.match(colorRegExp);\n        if (r === null) {\n            throw new Error('The color format error'); // 颜色格式错误\n        }\n        var d;\n        var a;\n        var data = [];\n        var rgb;\n\n        if (r[2]) {\n            // #rrggbb\n            d = r[2].replace('#', '').split('');\n            rgb = [ d[0] + d[1], d[2] + d[3], d[4] + d[5] ];\n            data = map(rgb,\n                function(c) {\n                    return adjust(parseInt(c, 16), [ 0, 255 ]);\n                }\n            );\n\n        }\n        else if (r[4]) {\n            // rgb rgba\n            var rgba = (r[4]).split(',');\n            a = rgba[3];\n            rgb = rgba.slice(0, 3);\n            data = map(\n                rgb,\n                function(c) {\n                    c = Math.floor(\n                        c.indexOf('%') > 0 ? parseInt(c, 0) * 2.55 : c\n                    );\n                    return adjust(c, [ 0, 255 ]);\n                }\n            );\n\n            if (typeof a !== 'undefined') {\n                data.push(adjust(parseFloat(a), [ 0, 1 ]));\n            }\n        }\n        else if (r[5] || r[6]) {\n            // hsb hsba hsl hsla\n            var hsxa = (r[5] || r[6]).split(',');\n            var h = parseInt(hsxa[0], 0) / 360;\n            var s = hsxa[1];\n            var x = hsxa[2];\n            a = hsxa[3];\n            data = map([ s, x ],\n                function(c) {\n                    return adjust(parseFloat(c) / 100, [ 0, 1 ]);\n                }\n            );\n            data.unshift(h);\n            if (typeof a !== 'undefined') {\n                data.push(adjust(parseFloat(a), [ 0, 1 ]));\n            }\n        }\n        return data;\n    }\n\n    /**\n     * 设置颜色透明度\n     * @memberOf module:zrender/tool/color\n     * @param {string} color 颜色\n     * @param {number} a 透明度,区间[0,1]\n     * @return {string} rgba颜色值\n     */\n    function alpha(color, a) {\n        if (!isCalculableColor(color)) {\n            return color;\n        }\n        if (a === null) {\n            a = 1;\n        }\n        var data = getData(toRGBA(color));\n        data[3] = adjust(Number(a).toFixed(4), [ 0, 1 ]);\n\n        return toColor(data, 'rgba');\n    }\n\n    // 数组映射\n    function map(array, fun) {\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n        var len = array ? array.length : 0;\n        for (var i = 0; i < len; i++) {\n            array[i] = fun(array[i]);\n        }\n        return array;\n    }\n\n    // 调整值区间\n    function adjust(value, region) {\n        // < to <= & > to >=\n        // modify by linzhifeng 2014-05-25 because -0 == 0\n        if (value <= region[0]) {\n            value = region[0];\n        }\n        else if (value >= region[1]) {\n            value = region[1];\n        }\n        return value;\n    }\n    \n    function isCalculableColor(color) {\n        return color instanceof Array || typeof color === 'string';\n    }\n\n    // 参见 http:// www.easyrgb.com/index.php?X=MATH\n    function _HSV_2_RGB(data) {\n        var H = data[0];\n        var S = data[1];\n        var V = data[2];\n        // HSV from 0 to 1\n        var R; \n        var G;\n        var B;\n        if (S === 0) {\n            R = V * 255;\n            G = V * 255;\n            B = V * 255;\n        }\n        else {\n            var h = H * 6;\n            if (h === 6) {\n                h = 0;\n            }\n            var i = h | 0;\n            var v1 = V * (1 - S);\n            var v2 = V * (1 - S * (h - i));\n            var v3 = V * (1 - S * (1 - (h - i)));\n            var r = 0;\n            var g = 0;\n            var b = 0;\n\n            if (i === 0) {\n                r = V;\n                g = v3;\n                b = v1;\n            }\n            else if (i === 1) {\n                r = v2;\n                g = V;\n                b = v1;\n            }\n            else if (i === 2) {\n                r = v1;\n                g = V;\n                b = v3;\n            }\n            else if (i === 3) {\n                r = v1;\n                g = v2;\n                b = V;\n            }\n            else if (i === 4) {\n                r = v3;\n                g = v1;\n                b = V;\n            }\n            else {\n                r = V;\n                g = v1;\n                b = v2;\n            }\n\n            // RGB results from 0 to 255\n            R = r * 255;\n            G = g * 255;\n            B = b * 255;\n        }\n        return [ R, G, B ];\n    }\n\n    function _HSL_2_RGB(data) {\n        var H = data[0];\n        var S = data[1];\n        var L = data[2];\n        // HSL from 0 to 1\n        var R;\n        var G;\n        var B;\n        if (S === 0) {\n            R = L * 255;\n            G = L * 255;\n            B = L * 255;\n        }\n        else {\n            var v2;\n            if (L < 0.5) {\n                v2 = L * (1 + S);\n            }\n            else {\n                v2 = (L + S) - (S * L);\n            }\n\n            var v1 = 2 * L - v2;\n\n            R = 255 * _HUE_2_RGB(v1, v2, H + (1 / 3));\n            G = 255 * _HUE_2_RGB(v1, v2, H);\n            B = 255 * _HUE_2_RGB(v1, v2, H - (1 / 3));\n        }\n        return [ R, G, B ];\n    }\n\n    function _HUE_2_RGB(v1, v2, vH) {\n        if (vH < 0) {\n            vH += 1;\n        }\n        if (vH > 1) {\n            vH -= 1;\n        }\n        if ((6 * vH) < 1) {\n            return (v1 + (v2 - v1) * 6 * vH);\n        }\n        if ((2 * vH) < 1) {\n            return (v2);\n        }\n        if ((3 * vH) < 2) {\n            return (v1 + (v2 - v1) * ((2 / 3) - vH) * 6);\n        }\n        return v1;\n    }\n\n    function _RGB_2_HSB(data) {\n        // RGB from 0 to 255\n        var R = (data[0] / 255);\n        var G = (data[1] / 255);\n        var B = (data[2] / 255);\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n        var V = vMax;\n        var H;\n        var S;\n\n        // HSV results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            S = delta / vMax;\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n        H = H * 360;\n        S = S * 100;\n        V = V * 100;\n        return [ H, S, V ];\n    }\n\n    function _RGB_2_HSL(data) {\n        // RGB from 0 to 255\n        var R = (data[0] / 255);\n        var G = (data[1] / 255);\n        var B = (data[2] / 255);\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        H = H * 360;\n        S = S * 100;\n        L = L * 100;\n\n        return [ H, S, L ];\n    }\n\n    return {\n        customPalette : customPalette,\n        resetPalette : resetPalette,\n        getColor : getColor,\n        getHighlightColor : getHighlightColor,\n        customHighlight : customHighlight,\n        resetHighlight : resetHighlight,\n        getRadialGradient : getRadialGradient,\n        getLinearGradient : getLinearGradient,\n        getGradientColors : getGradientColors,\n        getStepColors : getStepColors,\n        reverse : reverse,\n        mix : mix,\n        lift : lift,\n        trim : trim,\n        random : random,\n        toRGB : toRGB,\n        toRGBA : toRGBA,\n        toHex : toHex,\n        toHSL : toHSL,\n        toHSLA : toHSLA,\n        toHSB : toHSB,\n        toHSBA : toHSBA,\n        toHSV : toHSV,\n        toHSVA : toHSVA,\n        toName : toName,\n        toColor : toColor,\n        toArray : toArray,\n        alpha : alpha,\n        getData : getData\n    };\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/color.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * 矩形\n * @module zrender/shape/Rectangle\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com) , \n *         strwind (@劲风FEI)\n * @example\n *     var Rectangle = require('zrender/shape/Rectangle');\n *     var shape = new Rectangle({\n *         style: {\n *             x: 0,\n *             y: 0,\n *             width: 100,\n *             height: 100,\n *             radius: 20\n *         }\n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IRectangleStyle\n * @property {number} x 左上角x坐标\n * @property {number} y 左上角y坐标\n * @property {number} width 宽度\n * @property {number} height 高度\n * @property {number|Array.<number>} radius 矩形圆角，可以用数组分别指定四个角的圆角\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        \n        /**\n         * @alias module:zrender/shape/Rectangle\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Rectangle = function (options) {\n            Base.call(this, options);\n            /**\n             * 矩形绘制样式\n             * @name module:zrender/shape/Rectangle#style\n             * @type {module:zrender/shape/Rectangle~IRectangleStyle}\n             */\n            /**\n             * 矩形高亮绘制样式\n             * @name module:zrender/shape/Rectangle#highlightStyle\n             * @type {module:zrender/shape/Rectangle~IRectangleStyle}\n             */\n        };\n\n        Rectangle.prototype =  {\n            type: 'rectangle',\n\n            _buildRadiusPath: function (ctx, style) {\n                // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n                // r缩写为1         相当于 [1, 1, 1, 1]\n                // r缩写为[1]       相当于 [1, 1, 1, 1]\n                // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n                // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n                var x = style.x;\n                var y = style.y;\n                var width = style.width;\n                var height = style.height;\n                var r = style.radius;\n                var r1; \n                var r2; \n                var r3; \n                var r4;\n                  \n                if (typeof r === 'number') {\n                    r1 = r2 = r3 = r4 = r;\n                }\n                else if (r instanceof Array) {\n                    if (r.length === 1) {\n                        r1 = r2 = r3 = r4 = r[0];\n                    }\n                    else if (r.length === 2) {\n                        r1 = r3 = r[0];\n                        r2 = r4 = r[1];\n                    }\n                    else if (r.length === 3) {\n                        r1 = r[0];\n                        r2 = r4 = r[1];\n                        r3 = r[2];\n                    }\n                    else {\n                        r1 = r[0];\n                        r2 = r[1];\n                        r3 = r[2];\n                        r4 = r[3];\n                    }\n                }\n                else {\n                    r1 = r2 = r3 = r4 = 0;\n                }\n                \n                var total;\n                if (r1 + r2 > width) {\n                    total = r1 + r2;\n                    r1 *= width / total;\n                    r2 *= width / total;\n                }\n                if (r3 + r4 > width) {\n                    total = r3 + r4;\n                    r3 *= width / total;\n                    r4 *= width / total;\n                }\n                if (r2 + r3 > height) {\n                    total = r2 + r3;\n                    r2 *= height / total;\n                    r3 *= height / total;\n                }\n                if (r1 + r4 > height) {\n                    total = r1 + r4;\n                    r1 *= height / total;\n                    r4 *= height / total;\n                }\n                ctx.moveTo(x + r1, y);\n                ctx.lineTo(x + width - r2, y);\n                r2 !== 0 && ctx.quadraticCurveTo(\n                    x + width, y, x + width, y + r2\n                );\n                ctx.lineTo(x + width, y + height - r3);\n                r3 !== 0 && ctx.quadraticCurveTo(\n                    x + width, y + height, x + width - r3, y + height\n                );\n                ctx.lineTo(x + r4, y + height);\n                r4 !== 0 && ctx.quadraticCurveTo(\n                    x, y + height, x, y + height - r4\n                );\n                ctx.lineTo(x, y + r1);\n                r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n            },\n            \n            /**\n             * 创建矩形路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {Object} style\n             */\n            buildPath : function (ctx, style) {\n                if (!style.radius) {\n                    ctx.moveTo(style.x, style.y);\n                    ctx.lineTo(style.x + style.width, style.y);\n                    ctx.lineTo(style.x + style.width, style.y + style.height);\n                    ctx.lineTo(style.x, style.y + style.height);\n                    ctx.lineTo(style.x, style.y);\n                    // ctx.rect(style.x, style.y, style.width, style.height);\n                }\n                else {\n                    this._buildRadiusPath(ctx, style);\n                }\n                ctx.closePath();\n                return;\n            },\n\n            /**\n             * 计算返回矩形包围盒矩阵\n             * @param {module:zrender/shape/Rectangle~IRectangleStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function(style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var lineWidth;\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\n                    lineWidth = style.lineWidth || 1;\n                }\n                else {\n                    lineWidth = 0;\n                }\n                style.__rect = {\n                    x : Math.round(style.x - lineWidth / 2),\n                    y : Math.round(style.y - lineWidth / 2),\n                    width : style.width + lineWidth,\n                    height : style.height + lineWidth\n                };\n                \n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(Rectangle, Base);\n        return Rectangle;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Rectangle.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\ndefine(function (require) {\n\n    var Transformable = require('./mixin/Transformable');\n    var util = require('./tool/util');\n    var vmlCanvasManager = window['G_vmlCanvasManager'];\n    var config = require('./config');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     * \n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     */\n    function createDom(id, type, painter) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        // 没append呢，请原谅我这样写，清晰~\n        newDom.style.position = 'absolute';\n        newDom.style.left = 0;\n        newDom.style.top = 0;\n        newDom.style.width = width + 'px';\n        newDom.style.height = height + 'px';\n        newDom.width = width * config.devicePixelRatio;\n        newDom.height = height * config.devicePixelRatio;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     */\n    var Layer = function(id, painter) {\n\n        this.id = id;\n\n        this.dom = createDom(id, 'canvas', painter);\n        this.dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n        this.dom.style['-webkit-user-select'] = 'none';\n        this.dom.style['user-select'] = 'none';\n        this.dom.style['-webkit-touch-callout'] = 'none';\n        this.dom.style['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n\n        this.dom.className = config.elementClassName;\n\n        vmlCanvasManager && vmlCanvasManager.initElement(this.dom);\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.unusedCount = 0;\n\n        this.config = null;\n\n        this.dirty = true;\n\n        this.elCount = 0;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n        /**\n         * 层是否支持鼠标平移操作\n         * @type {boolean}\n         * @default false\n         */\n        this.zoomable = false;\n        /**\n         * 层是否支持鼠标缩放操作\n         * @type {boolean}\n         * @default false\n         */\n        this.panable = false;\n\n        this.maxZoom = Infinity;\n        this.minZoom = 0;\n\n        Transformable.call(this);\n    };\n\n    Layer.prototype.initContext = function () {\n        this.ctx = this.dom.getContext('2d');\n\n        var dpr = config.devicePixelRatio;\n        if (dpr != 1) { \n            this.ctx.scale(dpr, dpr);\n        }\n    };\n\n    Layer.prototype.createBackBuffer = function () {\n        if (vmlCanvasManager) { // IE 8- should not support back buffer\n            return;\n        }\n        this.domBack = createDom('back-' + this.id, 'canvas', this.painter);\n        this.ctxBack = this.domBack.getContext('2d');\n\n        var dpr = config.devicePixelRatio;\n\n        if (dpr != 1) { \n            this.ctxBack.scale(dpr, dpr);\n        }\n    };\n\n    /**\n     * @param  {number} width\n     * @param  {number} height\n     */\n    Layer.prototype.resize = function (width, height) {\n        var dpr = config.devicePixelRatio;\n\n        this.dom.style.width = width + 'px';\n        this.dom.style.height = height + 'px';\n\n        this.dom.setAttribute('width', width * dpr);\n        this.dom.setAttribute('height', height * dpr);\n\n        if (dpr != 1) { \n            this.ctx.scale(dpr, dpr);\n        }\n\n        if (this.domBack) {\n            this.domBack.setAttribute('width', width * dpr);\n            this.domBack.setAttribute('height', height * dpr);\n\n            if (dpr != 1) { \n                this.ctxBack.scale(dpr, dpr);\n            }\n        }\n    };\n\n    /**\n     * 清空该层画布\n     */\n    Layer.prototype.clear = function () {\n        var dom = this.dom;\n        var ctx = this.ctx;\n        var width = dom.width;\n        var height = dom.height;\n\n        var haveClearColor = this.clearColor && !vmlCanvasManager;\n        var haveMotionBLur = this.motionBlur && !vmlCanvasManager;\n        var lastFrameAlpha = this.lastFrameAlpha;\n        \n        var dpr = config.devicePixelRatio;\n\n        if (haveMotionBLur) {\n            if (!this.domBack) {\n                this.createBackBuffer();\n            } \n\n            this.ctxBack.globalCompositeOperation = 'copy';\n            this.ctxBack.drawImage(\n                dom, 0, 0,\n                width / dpr,\n                height / dpr\n            );\n        }\n\n        ctx.clearRect(0, 0, width / dpr, height / dpr);\n        if (haveClearColor) {\n            ctx.save();\n            ctx.fillStyle = this.clearColor;\n            ctx.fillRect(0, 0, width / dpr, height / dpr);\n            ctx.restore();\n        }\n\n        if (haveMotionBLur) {\n            var domBack = this.domBack;\n            ctx.save();\n            ctx.globalAlpha = lastFrameAlpha;\n            ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);\n            ctx.restore();\n        }\n    };\n\n    util.merge(Layer.prototype, Transformable.prototype);\n\n    return Layer;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/Layer.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * 图片绘制\n * @module zrender/shape/Image\n * @author pissang(https://www.github.com/pissang)\n * @example\n *     var ImageShape = require('zrender/shape/Image');\n *     var image = new ImageShape({\n *         style: {\n *             image: 'test.jpg',\n *             x: 100,\n *             y: 100\n *         }\n *     });\n *     zr.addShape(image);\n */\n\n/**\n * @typedef {Object} IImageStyle\n * @property {string|HTMLImageElement|HTMLCanvasElement} image 图片url或者图片对象\n * @property {number} x 左上角横坐标\n * @property {number} y 左上角纵坐标\n * @property {number} [width] 绘制到画布上的宽度，默认为图片宽度\n * @property {number} [height] 绘制到画布上的高度，默认为图片高度\n * @property {number} [sx=0] 从图片中裁剪的左上角横坐标\n * @property {number} [sy=0] 从图片中裁剪的左上角纵坐标\n * @property {number} [sWidth] 从图片中裁剪的宽度，默认为图片高度\n * @property {number} [sHeight] 从图片中裁剪的高度，默认为图片高度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n\n        var Base = require('./Base');\n\n        /**\n         * @alias zrender/shape/Image\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var ZImage = function(options) {\n            Base.call(this, options);\n            /**\n             * 图片绘制样式\n             * @name module:zrender/shape/Image#style\n             * @type {module:zrender/shape/Image~IImageStyle}\n             */\n            /**\n             * 图片高亮绘制样式\n             * @name module:zrender/shape/Image#highlightStyle\n             * @type {module:zrender/shape/Image~IImageStyle}\n             */\n        };\n\n        ZImage.prototype = {\n            \n            type: 'image',\n\n            brush : function(ctx, isHighlight, refreshNextFrame) {\n                var style = this.style || {};\n\n                if (isHighlight) {\n                    // 根据style扩展默认高亮样式\n                    style = this.getHighlightStyle(\n                        style, this.highlightStyle || {}\n                    );\n                }\n\n                var image = style.image;\n                var self = this;\n\n                if (!this._imageCache) {\n                    this._imageCache = {};\n                }\n                if (typeof(image) === 'string') {\n                    var src = image;\n                    if (this._imageCache[src]) {\n                        image = this._imageCache[src];\n                    } else {\n                        image = new Image();\n                        image.onload = function () {\n                            image.onload = null;\n                            self.modSelf();\n                            refreshNextFrame();\n                        };\n\n                        image.src = src;\n                        this._imageCache[src] = image;\n                    }\n                }\n                if (image) {\n                    // 图片已经加载完成\n                    if (image.nodeName.toUpperCase() == 'IMG') {\n                        if (window.ActiveXObject) {\n                            if (image.readyState != 'complete') {\n                                return;\n                            }\n                        }\n                        else {\n                            if (!image.complete) {\n                                return;\n                            }\n                        }\n                    }\n                    // Else is canvas\n                    var width = style.width || image.width;\n                    var height = style.height || image.height;\n                    var x = style.x;\n                    var y = style.y;\n                    // 图片加载失败\n                    if (!image.width || !image.height) {\n                        return;\n                    }\n\n                    ctx.save();\n\n                    this.doClip(ctx);\n\n                    this.setContext(ctx, style);\n\n                    // 设置transform\n                    this.setTransform(ctx);\n\n                    if (style.sWidth && style.sHeight) {\n                        var sx = style.sx || 0;\n                        var sy = style.sy || 0;\n                        ctx.drawImage(\n                            image,\n                            sx, sy, style.sWidth, style.sHeight,\n                            x, y, width, height\n                        );\n                    }\n                    else if (style.sx && style.sy) {\n                        var sx = style.sx;\n                        var sy = style.sy;\n                        var sWidth = width - sx;\n                        var sHeight = height - sy;\n                        ctx.drawImage(\n                            image,\n                            sx, sy, sWidth, sHeight,\n                            x, y, width, height\n                        );\n                    }\n                    else {\n                        ctx.drawImage(image, x, y, width, height);\n                    }\n                    // 如果没设置宽和高的话自动根据图片宽高设置\n                    if (!style.width) {\n                        style.width = width;\n                    }\n                    if (!style.height) {\n                        style.height = height;\n                    }\n                    if (!this.style.width) {\n                        this.style.width = width;\n                    }\n                    if (!this.style.height) {\n                        this.style.height = height;\n                    }\n\n                    this.drawText(ctx, style, this.style);\n\n                    ctx.restore();\n                }\n            },\n\n            /**\n             * 计算返回图片的包围盒矩形\n             * @param {module:zrender/shape/Image~IImageStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect: function(style) {\n                return {\n                    x : style.x,\n                    y : style.y,\n                    width : style.width,\n                    height : style.height\n                };\n            },\n\n            clearCache: function() {\n                this._imageCache = {};\n            }\n        };\n\n        require('../tool/util').inherits(ZImage, Base);\n        return ZImage;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Image.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\ndefine(\n    function (require) {\n\n        'use strict';\n\n        var util = require('./tool/util');\n\n        var Group = require('./Group');\n\n        var defaultIterateOption = {\n            hover: false,\n            normal: 'down',\n            update: false\n        };\n\n        function shapeCompareFunc(a, b) {\n            if (a.zlevel == b.zlevel) {\n                if (a.z == b.z) {\n                    return a.__renderidx - b.__renderidx;\n                }\n                return a.z - b.z;\n            }\n            return a.zlevel - b.zlevel;\n        }\n        /**\n         * 内容仓库 (M)\n         * @alias module:zrender/Storage\n         * @constructor\n         */\n        var Storage = function () {\n            // 所有常规形状，id索引的map\n            this._elements = {};\n\n            // 高亮层形状，不稳定，动态增删，数组位置也是z轴方向，靠前显示在下方\n            this._hoverElements = [];\n\n            this._roots = [];\n\n            this._shapeList = [];\n\n            this._shapeListOffset = 0;\n        };\n\n        /**\n         * 遍历迭代器\n         * \n         * @param {Function} fun 迭代回调函数，return true终止迭代\n         * @param {Object} [option] 迭代参数，缺省为仅降序遍历普通层图形\n         * @param {boolean} [option.hover=true] 是否是高亮层图形\n         * @param {string} [option.normal='up'] 是否是普通层图形，迭代时是否指定及z轴顺序\n         * @param {boolean} [option.update=false] 是否在迭代前更新形状列表\n         * \n         */\n        Storage.prototype.iterShape = function (fun, option) {\n            if (!option) {\n                option = defaultIterateOption;\n            }\n\n            if (option.hover) {\n                // 高亮层数据遍历\n                for (var i = 0, l = this._hoverElements.length; i < l; i++) {\n                    var el = this._hoverElements[i];\n                    el.updateTransform();\n                    if (fun(el)) {\n                        return this;\n                    }\n                }\n            }\n\n            if (option.update) {\n                this.updateShapeList();\n            }\n\n            // 遍历: 'down' | 'up'\n            switch (option.normal) {\n                case 'down':\n                    // 降序遍历，高层优先\n                    var l = this._shapeList.length;\n                    while (l--) {\n                        if (fun(this._shapeList[l])) {\n                            return this;\n                        }\n                    }\n                    break;\n                // case 'up':\n                default:\n                    // 升序遍历，底层优先\n                    for (var i = 0, l = this._shapeList.length; i < l; i++) {\n                        if (fun(this._shapeList[i])) {\n                            return this;\n                        }\n                    }\n                    break;\n            }\n\n            return this;\n        };\n\n        /**\n         * 返回hover层的形状数组\n         * @param  {boolean} [update=false] 是否在返回前更新图形的变换\n         * @return {Array.<module:zrender/shape/Base>}\n         */\n        Storage.prototype.getHoverShapes = function (update) {\n            // hoverConnect\n            var hoverElements = [];\n            for (var i = 0, l = this._hoverElements.length; i < l; i++) {\n                hoverElements.push(this._hoverElements[i]);\n                var target = this._hoverElements[i].hoverConnect;\n                if (target) {\n                    var shape;\n                    target = target instanceof Array ? target : [target];\n                    for (var j = 0, k = target.length; j < k; j++) {\n                        shape = target[j].id ? target[j] : this.get(target[j]);\n                        if (shape) {\n                            hoverElements.push(shape);\n                        }\n                    }\n                }\n            }\n            hoverElements.sort(shapeCompareFunc);\n            if (update) {\n                for (var i = 0, l = hoverElements.length; i < l; i++) {\n                    hoverElements[i].updateTransform();\n                }\n            }\n            return hoverElements;\n        };\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param  {boolean} [update=false] 是否在返回前更新该数组\n         * 详见{@link module:zrender/shape/Base.prototype.updateShapeList}\n         * @return {Array.<module:zrender/shape/Base>}\n         */\n        Storage.prototype.getShapeList = function (update) {\n            if (update) {\n                this.updateShapeList();\n            }\n            return this._shapeList;\n        };\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         */\n        Storage.prototype.updateShapeList = function () {\n            this._shapeListOffset = 0;\n            for (var i = 0, len = this._roots.length; i < len; i++) {\n                var root = this._roots[i];\n                this._updateAndAddShape(root);\n            }\n            this._shapeList.length = this._shapeListOffset;\n\n            for (var i = 0, len = this._shapeList.length; i < len; i++) {\n                this._shapeList[i].__renderidx = i;\n            }\n\n            this._shapeList.sort(shapeCompareFunc);\n        };\n\n        Storage.prototype._updateAndAddShape = function (el, clipShapes) {\n            \n            if (el.ignore) {\n                return;\n            }\n\n            el.updateTransform();\n\n            if (el.clipShape) {\n                // clipShape 的变换是基于 group 的变换\n                el.clipShape.parent = el;\n                el.clipShape.updateTransform();\n\n                // PENDING 效率影响\n                if (clipShapes) {\n                    clipShapes = clipShapes.slice();\n                    clipShapes.push(el.clipShape);\n                } else {\n                    clipShapes = [el.clipShape];\n                }\n            }\n\n            if (el.type == 'group') {\n                \n                for (var i = 0; i < el._children.length; i++) {\n                    var child = el._children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    child.__dirty = el.__dirty || child.__dirty;\n\n                    this._updateAndAddShape(child, clipShapes);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n                \n            }\n            else {\n                el.__clipShapes = clipShapes;\n\n                this._shapeList[this._shapeListOffset++] = el;\n            }\n        };\n\n        /**\n         * 修改图形(Shape)或者组(Group)\n         * \n         * @param {string|module:zrender/shape/Base|module:zrender/Group} el\n         * @param {Object} [params] 参数\n         */\n        Storage.prototype.mod = function (el, params) {\n            if (typeof (el) === 'string') {\n                el = this._elements[el];\n            }\n            if (el) {\n\n                el.modSelf();\n\n                if (params) {\n                    // 如果第二个参数直接使用 shape\n                    // parent, _storage, __clipShapes 三个属性会有循环引用\n                    // 主要为了向 1.x 版本兼容，2.x 版本不建议使用第二个参数\n                    if (params.parent || params._storage || params.__clipShapes) {\n                        var target = {};\n                        for (var name in params) {\n                            if (\n                                name === 'parent'\n                                || name === '_storage'\n                                || name === '__clipShapes'\n                            ) {\n                                continue;\n                            }\n                            if (params.hasOwnProperty(name)) {\n                                target[name] = params[name];\n                            }\n                        }\n                        util.merge(el, target, true);\n                    }\n                    else {\n                        util.merge(el, params, true);\n                    }\n                }\n            }\n\n            return this;\n        };\n\n        /**\n         * 移动指定的图形(Shape)或者组(Group)的位置\n         * @param {string} shapeId 形状唯一标识\n         * @param {number} dx\n         * @param {number} dy\n         */\n        Storage.prototype.drift = function (shapeId, dx, dy) {\n            var shape = this._elements[shapeId];\n            if (shape) {\n                shape.needTransform = true;\n                if (shape.draggable === 'horizontal') {\n                    dy = 0;\n                }\n                else if (shape.draggable === 'vertical') {\n                    dx = 0;\n                }\n                if (!shape.ondrift // ondrift\n                    // 有onbrush并且调用执行返回false或undefined则继续\n                    || (shape.ondrift && !shape.ondrift(dx, dy))\n                ) {\n                    shape.drift(dx, dy);\n                }\n            }\n\n            return this;\n        };\n\n        /**\n         * 添加高亮层数据\n         * \n         * @param {module:zrender/shape/Base} shape\n         */\n        Storage.prototype.addHover = function (shape) {\n            shape.updateNeedTransform();\n            this._hoverElements.push(shape);\n            return this;\n        };\n\n        /**\n         * 清空高亮层数据\n         */\n        Storage.prototype.delHover = function () {\n            this._hoverElements = [];\n            return this;\n        };\n\n        /**\n         * 是否有图形在高亮层里\n         * @return {boolean}\n         */\n        Storage.prototype.hasHoverShape = function () {\n            return this._hoverElements.length > 0;\n        };\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/shape/Shape|module:zrender/Group} el\n         */\n        Storage.prototype.addRoot = function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        };\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        Storage.prototype.delRoot = function (elId) {\n            if (typeof(elId) == 'undefined') {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._hoverElements = [];\n                this._roots = [];\n                this._shapeList = [];\n                this._shapeListOffset = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        };\n\n        Storage.prototype.addToMap = function (el) {\n            if (el instanceof Group) {\n                el._storage = this;\n            }\n            el.modSelf();\n\n            this._elements[el.id] = el;\n\n            return this;\n        };\n\n        Storage.prototype.get = function (elId) {\n            return this._elements[elId];\n        };\n\n        Storage.prototype.delFromMap = function (elId) {\n            var el = this._elements[elId];\n            if (el) {\n                delete this._elements[elId];\n\n                if (el instanceof Group) {\n                    el._storage = null;\n                }\n            }\n\n            return this;\n        };\n\n        /**\n         * 清空并且释放Storage\n         */\n        Storage.prototype.dispose = function () {\n            this._elements = \n            this._renderList = \n            this._roots =\n            this._hoverElements = null;\n        };\n\n        return Storage;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/Storage.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/Group\n * @example\n *     var Group = require('zrender/Group');\n *     var Circle = require('zrender/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.addChild(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *             brushType: 'fill'\n *         }\n *     }));\n *     zr.addGroup(g);\n */\ndefine(function(require) {\n\n    var guid = require('./tool/guid');\n    var util = require('./tool/util');\n\n    var Transformable = require('./mixin/Transformable');\n    var Eventful = require('./mixin/Eventful');\n\n    /**\n     * @alias module:zrender/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function(options) {\n\n        options = options || {};\n\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.id = options.id || guid();\n\n        for (var key in options) {\n            this[key] = options[key];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.type = 'group';\n\n        /**\n         * 用于裁剪的图形(shape)，所有 Group 内的图形在绘制时都会被这个图形裁剪\n         * 该图形会继承Group的变换\n         * @type {module:zrender/shape/Base}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         */\n        this.clipShape = null;\n\n        this._children = [];\n\n        this._storage = null;\n\n        this.__dirty = true;\n\n        // Mixin\n        Transformable.call(this);\n        Eventful.call(this);\n    };\n\n    /**\n     * 是否忽略该 Group 及其所有子节点\n     * @type {boolean}\n     * @default false\n     */\n    Group.prototype.ignore = false;\n\n    /**\n     * 复制并返回一份新的包含所有儿子节点的数组\n     * @return {Array.<module:zrender/Group|module:zrender/shape/Base>}\n     */\n    Group.prototype.children = function() {\n        return this._children.slice();\n    };\n\n    /**\n     * 获取指定 index 的儿子节点\n     * @param  {number} idx\n     * @return {module:zrender/Group|module:zrender/shape/Base}\n     */\n    Group.prototype.childAt = function(idx) {\n        return this._children[idx];\n    };\n\n    /**\n     * 添加子节点，可以是Shape或者Group\n     * @param {module:zrender/Group|module:zrender/shape/Base} child\n     */\n    // TODO Type Check\n    Group.prototype.addChild = function(child) {\n        if (child == this) {\n            return;\n        }\n        \n        if (child.parent == this) {\n            return;\n        }\n        if (child.parent) {\n            child.parent.removeChild(child);\n        }\n\n        this._children.push(child);\n        child.parent = this;\n\n        if (this._storage && this._storage !== child._storage) {\n            \n            this._storage.addToMap(child);\n\n            if (child instanceof Group) {\n                child.addChildrenToStorage(this._storage);\n            }\n        }\n    };\n\n    /**\n     * 移除子节点\n     * @param {module:zrender/Group|module:zrender/shape/Base} child\n     */\n    // TODO Type Check\n    Group.prototype.removeChild = function(child) {\n        var idx = util.indexOf(this._children, child);\n\n        if (idx >= 0) {\n            this._children.splice(idx, 1);\n        }\n        child.parent = null;\n\n        if (this._storage) {\n            \n            this._storage.delFromMap(child.id);\n\n            if (child instanceof Group) {\n                child.delChildrenFromStorage(this._storage);\n            }\n        }\n    };\n\n    /**\n     * 移除所有子节点\n     */\n    Group.prototype.clearChildren = function () {\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            if (this._storage) {\n                this._storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(this._storage);\n                }\n            }\n        }\n        this._children.length = 0;\n    };\n\n    /**\n     * 遍历所有子节点\n     * @param  {Function} cb\n     * @param  {}   context\n     */\n    Group.prototype.eachChild = function(cb, context) {\n        var haveContext = !!context;\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            if (haveContext) {\n                cb.call(context, child);\n            } else {\n                cb(child);\n            }\n        }\n    };\n\n    /**\n     * 深度优先遍历所有子孙节点\n     * @param  {Function} cb\n     * @param  {}   context\n     */\n    Group.prototype.traverse = function(cb, context) {\n        var haveContext = !!context;\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            if (haveContext) {\n                cb.call(context, child);\n            } else {\n                cb(child);\n            }\n\n            if (child.type === 'group') {\n                child.traverse(cb, context);\n            }\n        }\n    };\n\n    Group.prototype.addChildrenToStorage = function(storage) {\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            storage.addToMap(child);\n            if (child instanceof Group) {\n                child.addChildrenToStorage(storage);\n            }\n        }\n    };\n\n    Group.prototype.delChildrenFromStorage = function(storage) {\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            storage.delFromMap(child.id);\n            if (child instanceof Group) {\n                child.delChildrenFromStorage(storage);\n            }\n        }\n    };\n\n    Group.prototype.modSelf = function() {\n        this.__dirty = true;\n    };\n\n    util.merge(Group.prototype, Transformable.prototype, true);\n    util.merge(Group.prototype, Eventful.prototype, true);\n\n    return Group;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/Group.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * 动画主类, 调度和管理所有动画控制器\n * \n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\ndefine(\n    function(require) {\n        \n        'use strict';\n\n        var Clip = require('./Clip');\n        var color = require('../tool/color');\n        var util = require('../tool/util');\n        var Dispatcher = require('../tool/event').Dispatcher;\n\n        var requestAnimationFrame = window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame\n                                    || function (func) {\n                                        setTimeout(func, 16);\n                                    };\n\n        var arraySlice = Array.prototype.slice;\n\n        /**\n         * @typedef {Object} IZRenderStage\n         * @property {Function} update\n         */\n        \n        /** \n         * @alias module:zrender/animation/Animation\n         * @constructor\n         * @param {Object} [options]\n         * @param {Function} [options.onframe]\n         * @param {IZRenderStage} [options.stage]\n         * @example\n         *     var animation = new Animation();\n         *     var obj = {\n         *         x: 100,\n         *         y: 100\n         *     };\n         *     animation.animate(node.position)\n         *         .when(1000, {\n         *             x: 500,\n         *             y: 500\n         *         })\n         *         .when(2000, {\n         *             x: 100,\n         *             y: 100\n         *         })\n         *         .start('spline');\n         */\n        var Animation = function (options) {\n\n            options = options || {};\n\n            this.stage = options.stage || {};\n\n            this.onframe = options.onframe || function() {};\n\n            // private properties\n            this._clips = [];\n\n            this._running = false;\n\n            this._time = 0;\n\n            Dispatcher.call(this);\n        };\n\n        Animation.prototype = {\n            /**\n             * 添加动画片段\n             * @param {module:zrender/animation/Clip} clip\n             */\n            add: function(clip) {\n                this._clips.push(clip);\n            },\n            /**\n             * 删除动画片段\n             * @param {module:zrender/animation/Clip} clip\n             */\n            remove: function(clip) {\n                var idx = util.indexOf(this._clips, clip);\n                if (idx >= 0) {\n                    this._clips.splice(idx, 1);\n                }\n            },\n            _update: function() {\n\n                var time = new Date().getTime();\n                var delta = time - this._time;\n                var clips = this._clips;\n                var len = clips.length;\n\n                var deferredEvents = [];\n                var deferredClips = [];\n                for (var i = 0; i < len; i++) {\n                    var clip = clips[i];\n                    var e = clip.step(time);\n                    // Throw out the events need to be called after\n                    // stage.update, like destroy\n                    if (e) {\n                        deferredEvents.push(e);\n                        deferredClips.push(clip);\n                    }\n                }\n\n                // Remove the finished clip\n                for (var i = 0; i < len;) {\n                    if (clips[i]._needsRemove) {\n                        clips[i] = clips[len - 1];\n                        clips.pop();\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n\n                len = deferredEvents.length;\n                for (var i = 0; i < len; i++) {\n                    deferredClips[i].fire(deferredEvents[i]);\n                }\n\n                this._time = time;\n\n                this.onframe(delta);\n\n                this.dispatch('frame', delta);\n\n                if (this.stage.update) {\n                    this.stage.update();\n                }\n            },\n            /**\n             * 开始运行动画\n             */\n            start: function () {\n                var self = this;\n\n                this._running = true;\n\n                function step() {\n                    if (self._running) {\n                        \n                        requestAnimationFrame(step);\n\n                        self._update();\n                    }\n                }\n\n                this._time = new Date().getTime();\n                requestAnimationFrame(step);\n            },\n            /**\n             * 停止运行动画\n             */\n            stop: function () {\n                this._running = false;\n            },\n            /**\n             * 清除所有动画片段\n             */\n            clear : function () {\n                this._clips = [];\n            },\n            /**\n             * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n             * @param  {Object} target\n             * @param  {Object} options\n             * @param  {boolean} [options.loop=false] 是否循环播放动画\n             * @param  {Function} [options.getter=null]\n             *         如果指定getter函数，会通过getter函数取属性值\n             * @param  {Function} [options.setter=null]\n             *         如果指定setter函数，会通过setter函数设置属性值\n             * @return {module:zrender/animation/Animation~Animator}\n             */\n            animate : function (target, options) {\n                options = options || {};\n                var deferred = new Animator(\n                    target,\n                    options.loop,\n                    options.getter, \n                    options.setter\n                );\n                deferred.animation = this;\n                return deferred;\n            },\n            constructor: Animation\n        };\n\n        util.merge(Animation.prototype, Dispatcher.prototype, true);\n\n        function _defaultGetter(target, key) {\n            return target[key];\n        }\n\n        function _defaultSetter(target, key, value) {\n            target[key] = value;\n        }\n\n        function _interpolateNumber(p0, p1, percent) {\n            return (p1 - p0) * percent + p0;\n        }\n\n        function _interpolateArray(p0, p1, percent, out, arrDim) {\n            var len = p0.length;\n            if (arrDim == 1) {\n                for (var i = 0; i < len; i++) {\n                    out[i] = _interpolateNumber(p0[i], p1[i], percent); \n                }\n            }\n            else {\n                var len2 = p0[0].length;\n                for (var i = 0; i < len; i++) {\n                    for (var j = 0; j < len2; j++) {\n                        out[i][j] = _interpolateNumber(\n                            p0[i][j], p1[i][j], percent\n                        );\n                    }\n                }\n            }\n        }\n\n        function _isArrayLike(data) {\n            switch (typeof data) {\n                case 'undefined':\n                case 'string':\n                    return false;\n            }\n            \n            return typeof data.length !== 'undefined';\n        }\n\n        function _catmullRomInterpolateArray(\n            p0, p1, p2, p3, t, t2, t3, out, arrDim\n        ) {\n            var len = p0.length;\n            if (arrDim == 1) {\n                for (var i = 0; i < len; i++) {\n                    out[i] = _catmullRomInterpolate(\n                        p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                    );\n                }\n            }\n            else {\n                var len2 = p0[0].length;\n                for (var i = 0; i < len; i++) {\n                    for (var j = 0; j < len2; j++) {\n                        out[i][j] = _catmullRomInterpolate(\n                            p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                            t, t2, t3\n                        );\n                    }\n                }\n            }\n        }\n\n        function _catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            return (2 * (p1 - p2) + v0 + v1) * t3 \n                    + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                    + v0 * t + p1;\n        }\n\n        function _cloneValue(value) {\n            if (_isArrayLike(value)) {\n                var len = value.length;\n                if (_isArrayLike(value[0])) {\n                    var ret = [];\n                    for (var i = 0; i < len; i++) {\n                        ret.push(arraySlice.call(value[i]));\n                    }\n                    return ret;\n                }\n                else {\n                    return arraySlice.call(value);\n                }\n            }\n            else {\n                return value;\n            }\n        }\n\n        function rgba2String(rgba) {\n            rgba[0] = Math.floor(rgba[0]);\n            rgba[1] = Math.floor(rgba[1]);\n            rgba[2] = Math.floor(rgba[2]);\n\n            return 'rgba(' + rgba.join(',') + ')';\n        }\n\n        /**\n         * @alias module:zrender/animation/Animation~Animator\n         * @constructor\n         * @param {Object} target\n         * @param {boolean} loop\n         * @param {Function} getter\n         * @param {Function} setter\n         */\n        var Animator = function(target, loop, getter, setter) {\n            this._tracks = {};\n            this._target = target;\n\n            this._loop = loop || false;\n\n            this._getter = getter || _defaultGetter;\n            this._setter = setter || _defaultSetter;\n\n            this._clipCount = 0;\n\n            this._delay = 0;\n\n            this._doneList = [];\n\n            this._onframeList = [];\n\n            this._clipList = [];\n        };\n\n        Animator.prototype = {\n            /**\n             * 设置动画关键帧\n             * @param  {number} time 关键帧时间，单位是ms\n             * @param  {Object} props 关键帧的属性值，key-value表示\n             * @return {module:zrender/animation/Animation~Animator}\n             */\n            when : function(time /* ms */, props) {\n                for (var propName in props) {\n                    if (!this._tracks[propName]) {\n                        this._tracks[propName] = [];\n                        // If time is 0 \n                        //  Then props is given initialize value\n                        // Else\n                        //  Initialize value from current prop value\n                        if (time !== 0) {\n                            this._tracks[propName].push({\n                                time : 0,\n                                value : _cloneValue(\n                                    this._getter(this._target, propName)\n                                )\n                            });\n                        }\n                    }\n                    this._tracks[propName].push({\n                        time : parseInt(time, 10),\n                        value : props[propName]\n                    });\n                }\n                return this;\n            },\n            /**\n             * 添加动画每一帧的回调函数\n             * @param  {Function} callback\n             * @return {module:zrender/animation/Animation~Animator}\n             */\n            during: function (callback) {\n                this._onframeList.push(callback);\n                return this;\n            },\n            /**\n             * 开始执行动画\n             * @param  {string|Function} easing \n             *         动画缓动函数，详见{@link module:zrender/animation/easing}\n             * @return {module:zrender/animation/Animation~Animator}\n             */\n            start: function (easing) {\n\n                var self = this;\n                var setter = this._setter;\n                var getter = this._getter;\n                var useSpline = easing === 'spline';\n\n                var ondestroy = function() {\n                    self._clipCount--;\n                    if (self._clipCount === 0) {\n                        // Clear all tracks\n                        self._tracks = {};\n\n                        var len = self._doneList.length;\n                        for (var i = 0; i < len; i++) {\n                            self._doneList[i].call(self);\n                        }\n                    }\n                };\n\n                var createTrackClip = function (keyframes, propName) {\n                    var trackLen = keyframes.length;\n                    if (!trackLen) {\n                        return;\n                    }\n                    // Guess data type\n                    var firstVal = keyframes[0].value;\n                    var isValueArray = _isArrayLike(firstVal);\n                    var isValueColor = false;\n\n                    // For vertices morphing\n                    var arrDim = (\n                            isValueArray \n                            && _isArrayLike(firstVal[0])\n                        )\n                        ? 2 : 1;\n                    // Sort keyframe as ascending\n                    keyframes.sort(function(a, b) {\n                        return a.time - b.time;\n                    });\n                    var trackMaxTime;\n                    if (trackLen) {\n                        trackMaxTime = keyframes[trackLen - 1].time;\n                    }\n                    else {\n                        return;\n                    }\n                    // Percents of each keyframe\n                    var kfPercents = [];\n                    // Value of each keyframe\n                    var kfValues = [];\n                    for (var i = 0; i < trackLen; i++) {\n                        kfPercents.push(keyframes[i].time / trackMaxTime);\n                        // Assume value is a color when it is a string\n                        var value = keyframes[i].value;\n                        if (typeof(value) == 'string') {\n                            value = color.toArray(value);\n                            if (value.length === 0) {    // Invalid color\n                                value[0] = value[1] = value[2] = 0;\n                                value[3] = 1;\n                            }\n                            isValueColor = true;\n                        }\n                        kfValues.push(value);\n                    }\n\n                    // Cache the key of last frame to speed up when \n                    // animation playback is sequency\n                    var cacheKey = 0;\n                    var cachePercent = 0;\n                    var start;\n                    var i;\n                    var w;\n                    var p0;\n                    var p1;\n                    var p2;\n                    var p3;\n\n\n                    if (isValueColor) {\n                        var rgba = [ 0, 0, 0, 0 ];\n                    }\n\n                    var onframe = function (target, percent) {\n                        // Find the range keyframes\n                        // kf1-----kf2---------current--------kf3\n                        // find kf2 and kf3 and do interpolation\n                        if (percent < cachePercent) {\n                            // Start from next key\n                            start = Math.min(cacheKey + 1, trackLen - 1);\n                            for (i = start; i >= 0; i--) {\n                                if (kfPercents[i] <= percent) {\n                                    break;\n                                }\n                            }\n                            i = Math.min(i, trackLen - 2);\n                        }\n                        else {\n                            for (i = cacheKey; i < trackLen; i++) {\n                                if (kfPercents[i] > percent) {\n                                    break;\n                                }\n                            }\n                            i = Math.min(i - 1, trackLen - 2);\n                        }\n                        cacheKey = i;\n                        cachePercent = percent;\n\n                        var range = (kfPercents[i + 1] - kfPercents[i]);\n                        if (range === 0) {\n                            return;\n                        }\n                        else {\n                            w = (percent - kfPercents[i]) / range;\n                        }\n                        if (useSpline) {\n                            p1 = kfValues[i];\n                            p0 = kfValues[i === 0 ? i : i - 1];\n                            p2 = kfValues[i > trackLen - 2 ? trackLen - 1 : i + 1];\n                            p3 = kfValues[i > trackLen - 3 ? trackLen - 1 : i + 2];\n                            if (isValueArray) {\n                                _catmullRomInterpolateArray(\n                                    p0, p1, p2, p3, w, w * w, w * w * w,\n                                    getter(target, propName),\n                                    arrDim\n                                );\n                            }\n                            else {\n                                var value;\n                                if (isValueColor) {\n                                    value = _catmullRomInterpolateArray(\n                                        p0, p1, p2, p3, w, w * w, w * w * w,\n                                        rgba, 1\n                                    );\n                                    value = rgba2String(rgba);\n                                }\n                                else {\n                                    value = _catmullRomInterpolate(\n                                        p0, p1, p2, p3, w, w * w, w * w * w\n                                    );\n                                }\n                                setter(\n                                    target,\n                                    propName,\n                                    value\n                                );\n                            }\n                        }\n                        else {\n                            if (isValueArray) {\n                                _interpolateArray(\n                                    kfValues[i], kfValues[i + 1], w,\n                                    getter(target, propName),\n                                    arrDim\n                                );\n                            }\n                            else {\n                                var value;\n                                if (isValueColor) {\n                                    _interpolateArray(\n                                        kfValues[i], kfValues[i + 1], w,\n                                        rgba, 1\n                                    );\n                                    value = rgba2String(rgba);\n                                }\n                                else {\n                                    value = _interpolateNumber(kfValues[i], kfValues[i + 1], w);\n                                }\n                                setter(\n                                    target,\n                                    propName,\n                                    value\n                                );\n                            }\n                        }\n\n                        for (i = 0; i < self._onframeList.length; i++) {\n                            self._onframeList[i](target, percent);\n                        }\n                    };\n\n                    var clip = new Clip({\n                        target : self._target,\n                        life : trackMaxTime,\n                        loop : self._loop,\n                        delay : self._delay,\n                        onframe : onframe,\n                        ondestroy : ondestroy\n                    });\n\n                    if (easing && easing !== 'spline') {\n                        clip.easing = easing;\n                    }\n                    self._clipList.push(clip);\n                    self._clipCount++;\n                    self.animation.add(clip);\n                };\n\n                for (var propName in this._tracks) {\n                    createTrackClip(this._tracks[propName], propName);\n                }\n                return this;\n            },\n            /**\n             * 停止动画\n             */\n            stop : function() {\n                for (var i = 0; i < this._clipList.length; i++) {\n                    var clip = this._clipList[i];\n                    this.animation.remove(clip);\n                }\n                this._clipList = [];\n            },\n            /**\n             * 设置动画延迟开始的时间\n             * @param  {number} time 单位ms\n             * @return {module:zrender/animation/Animation~Animator}\n             */\n            delay : function (time) {\n                this._delay = time;\n                return this;\n            },\n            /**\n             * 添加动画结束的回调\n             * @param  {Function} cb\n             * @return {module:zrender/animation/Animation~Animator}\n             */\n            done : function(cb) {\n                if (cb) {\n                    this._doneList.push(cb);\n                }\n                return this;\n            }\n        };\n\n        return Animation;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/animation/Animation.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n */\ndefine(\n    function(require) {\n\n        var Easing = require('./easing');\n\n        function Clip(options) {\n\n            this._targetPool = options.target || {};\n            if (!(this._targetPool instanceof Array)) {\n                this._targetPool = [ this._targetPool ];\n            }\n\n            // 生命周期\n            this._life = options.life || 1000;\n            // 延时\n            this._delay = options.delay || 0;\n            // 开始时间\n            this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n            // 结束时间\n            this._endTime = this._startTime + this._life * 1000;\n\n            // 是否循环\n            this.loop = typeof options.loop == 'undefined'\n                        ? false : options.loop;\n\n            this.gap = options.gap || 0;\n\n            this.easing = options.easing || 'Linear';\n\n            this.onframe = options.onframe;\n            this.ondestroy = options.ondestroy;\n            this.onrestart = options.onrestart;\n        }\n\n        Clip.prototype = {\n            step : function (time) {\n                var percent = (time - this._startTime) / this._life;\n\n                // 还没开始\n                if (percent < 0) {\n                    return;\n                }\n\n                percent = Math.min(percent, 1);\n\n                var easingFunc = typeof this.easing == 'string'\n                                 ? Easing[this.easing]\n                                 : this.easing;\n                var schedule = typeof easingFunc === 'function'\n                    ? easingFunc(percent)\n                    : percent;\n\n                this.fire('frame', schedule);\n\n                // 结束\n                if (percent == 1) {\n                    if (this.loop) {\n                        this.restart();\n                        // 重新开始周期\n                        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                        return 'restart';\n                    }\n                    \n                    // 动画完成将这个控制器标识为待删除\n                    // 在Animation.update中进行批量删除\n                    this._needsRemove = true;\n                    return 'destroy';\n                }\n                \n                return null;\n            },\n            restart : function() {\n                var time = new Date().getTime();\n                var remainder = (time - this._startTime) % this._life;\n                this._startTime = new Date().getTime() - remainder + this.gap;\n\n                this._needsRemove = false;\n            },\n            fire : function(eventType, arg) {\n                for (var i = 0, len = this._targetPool.length; i < len; i++) {\n                    if (this['on' + eventType]) {\n                        this['on' + eventType](this._targetPool[i], arg);\n                    }\n                }\n            },\n            constructor: Clip\n        };\n\n        return Clip;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/animation/Clip.js\n ** module id = 30\n ** module chunks = 0\n **/","define(\n    function() {\n        /**\n         * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n         * @see http://sole.github.io/tween.js/examples/03_graphs.html\n         * @exports zrender/animation/easing\n         */\n        var easing = {\n            // 线性\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            Linear: function (k) {\n                return k;\n            },\n\n            // 二次方的缓动（t^2）\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuadraticIn: function (k) {\n                return k * k;\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuadraticOut: function (k) {\n                return k * (2 - k);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuadraticInOut: function (k) {\n                if ((k *= 2) < 1) {\n                    return 0.5 * k * k;\n                }\n                return -0.5 * (--k * (k - 2) - 1);\n            },\n\n            // 三次方的缓动（t^3）\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            CubicIn: function (k) {\n                return k * k * k;\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            CubicOut: function (k) {\n                return --k * k * k + 1;\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            CubicInOut: function (k) {\n                if ((k *= 2) < 1) {\n                    return 0.5 * k * k * k;\n                }\n                return 0.5 * ((k -= 2) * k * k + 2);\n            },\n\n            // 四次方的缓动（t^4）\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuarticIn: function (k) {\n                return k * k * k * k;\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuarticOut: function (k) {\n                return 1 - (--k * k * k * k);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuarticInOut: function (k) {\n                if ((k *= 2) < 1) {\n                    return 0.5 * k * k * k * k;\n                }\n                return -0.5 * ((k -= 2) * k * k * k - 2);\n            },\n\n            // 五次方的缓动（t^5）\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuinticIn: function (k) {\n                return k * k * k * k * k;\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuinticOut: function (k) {\n                return --k * k * k * k * k + 1;\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            QuinticInOut: function (k) {\n                if ((k *= 2) < 1) {\n                    return 0.5 * k * k * k * k * k;\n                }\n                return 0.5 * ((k -= 2) * k * k * k * k + 2);\n            },\n\n            // 正弦曲线的缓动（sin(t)）\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            SinusoidalIn: function (k) {\n                return 1 - Math.cos(k * Math.PI / 2);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            SinusoidalOut: function (k) {\n                return Math.sin(k * Math.PI / 2);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            SinusoidalInOut: function (k) {\n                return 0.5 * (1 - Math.cos(Math.PI * k));\n            },\n\n            // 指数曲线的缓动（2^t）\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            ExponentialIn: function (k) {\n                return k === 0 ? 0 : Math.pow(1024, k - 1);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            ExponentialOut: function (k) {\n                return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            ExponentialInOut: function (k) {\n                if (k === 0) {\n                    return 0;\n                }\n                if (k === 1) {\n                    return 1;\n                }\n                if ((k *= 2) < 1) {\n                    return 0.5 * Math.pow(1024, k - 1);\n                }\n                return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n            },\n\n            // 圆形曲线的缓动（sqrt(1-t^2)）\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            CircularIn: function (k) {\n                return 1 - Math.sqrt(1 - k * k);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            CircularOut: function (k) {\n                return Math.sqrt(1 - (--k * k));\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            CircularInOut: function (k) {\n                if ((k *= 2) < 1) {\n                    return -0.5 * (Math.sqrt(1 - k * k) - 1);\n                }\n                return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n            },\n\n            // 创建类似于弹簧在停止前来回振荡的动画\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            ElasticIn: function (k) {\n                var s; \n                var a = 0.1;\n                var p = 0.4;\n                if (k === 0) {\n                    return 0;\n                }\n                if (k === 1) {\n                    return 1;\n                }\n                if (!a || a < 1) {\n                    a = 1; s = p / 4;\n                }\n                else {\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\n                }\n                return -(a * Math.pow(2, 10 * (k -= 1)) *\n                            Math.sin((k - s) * (2 * Math.PI) / p));\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            ElasticOut: function (k) {\n                var s;\n                var a = 0.1;\n                var p = 0.4;\n                if (k === 0) {\n                    return 0;\n                }\n                if (k === 1) {\n                    return 1;\n                }\n                if (!a || a < 1) {\n                    a = 1; s = p / 4;\n                }\n                else {\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\n                }\n                return (a * Math.pow(2, -10 * k) *\n                        Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            ElasticInOut: function (k) {\n                var s;\n                var a = 0.1;\n                var p = 0.4;\n                if (k === 0) {\n                    return 0;\n                }\n                if (k === 1) {\n                    return 1;\n                }\n                if (!a || a < 1) {\n                    a = 1; s = p / 4;\n                }\n                else {\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\n                }\n                if ((k *= 2) < 1) {\n                    return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                        * Math.sin((k - s) * (2 * Math.PI) / p));\n                }\n                return a * Math.pow(2, -10 * (k -= 1))\n                        * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n            },\n\n            // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            BackIn: function (k) {\n                var s = 1.70158;\n                return k * k * ((s + 1) * k - s);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            BackOut: function (k) {\n                var s = 1.70158;\n                return --k * k * ((s + 1) * k + s) + 1;\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            BackInOut: function (k) {\n                var s = 1.70158 * 1.525;\n                if ((k *= 2) < 1) {\n                    return 0.5 * (k * k * ((s + 1) * k - s));\n                }\n                return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n            },\n\n            // 创建弹跳效果\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            BounceIn: function (k) {\n                return 1 - easing.BounceOut(1 - k);\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            BounceOut: function (k) {\n                if (k < (1 / 2.75)) {\n                    return 7.5625 * k * k;\n                }\n                else if (k < (2 / 2.75)) {\n                    return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n                }\n                else if (k < (2.5 / 2.75)) {\n                    return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n                }\n                else {\n                    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n                }\n            },\n            /**\n             * @param {number} k\n             * @return {number}\n             */\n            BounceInOut: function (k) {\n                if (k < 0.5) {\n                    return easing.BounceIn(k * 2) * 0.5;\n                }\n                return easing.BounceOut(k * 2 - 1) * 0.5 + 0.5;\n            }\n        };\n\n        return easing;\n    }\n);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/animation/easing.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\r\n * echarts组件：孤岛数据\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ChartBase = require('./base');\r\n    \r\n    // 图形依赖\r\n    var CircleShape = require('zrender/shape/Circle');\r\n    \r\n    var ecConfig = require('../config');\r\n    ecConfig.island = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 5,                       // 二级层叠\r\n        r: 15,\r\n        calculateStep: 0.1  // 滚轮可计算步长 0.1 = 10%\r\n    };\r\n\r\n    var ecData = require('../util/ecData');\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrEvent = require('zrender/tool/event');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表选项\r\n     */\r\n    function Island(ecTheme, messageCenter, zr, option, myChart) {\r\n        // 图表基类\r\n        ChartBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this._nameConnector;\r\n        this._valueConnector;\r\n        this._zrHeight = this.zr.getHeight();\r\n        this._zrWidth = this.zr.getWidth();\r\n\r\n        var self = this;\r\n        /**\r\n         * 滚轮改变孤岛数据值\r\n         */\r\n        self.shapeHandler.onmousewheel = function (param) {\r\n            var shape = param.target;\r\n\r\n            var event = param.event;\r\n            var delta = zrEvent.getDelta(event);\r\n            delta = delta > 0 ? (-1) : 1;\r\n            shape.style.r -= delta;\r\n            shape.style.r = shape.style.r < 5 ? 5 : shape.style.r;\r\n\r\n            var value = ecData.get(shape, 'value');\r\n            var dvalue = value * self.option.island.calculateStep;\r\n            value = dvalue > 1\r\n                    ? (Math.round(value - dvalue * delta))\r\n                    : +(value - dvalue * delta).toFixed(2);\r\n\r\n            var name = ecData.get(shape, 'name');\r\n            shape.style.text = name + ':' + value;\r\n\r\n            ecData.set(shape, 'value', value);\r\n            ecData.set(shape, 'name', name);\r\n\r\n            self.zr.modShape(shape.id);\r\n            self.zr.refreshNextFrame();\r\n            zrEvent.stop(event);\r\n        };\r\n    }\r\n    \r\n    Island.prototype = {\r\n        type: ecConfig.CHART_TYPE_ISLAND,\r\n        /**\r\n         * 孤岛合并\r\n         *\r\n         * @param {string} tarShapeIndex 目标索引\r\n         * @param {Object} srcShape 源目标，合入目标后删除\r\n         */\r\n        _combine: function (tarShape, srcShape) {\r\n            var zrColor = require('zrender/tool/color');\r\n            var accMath = require('../util/accMath');\r\n            var value = accMath.accAdd(\r\n                            ecData.get(tarShape, 'value'),\r\n                            ecData.get(srcShape, 'value')\r\n                        );\r\n            var name = ecData.get(tarShape, 'name')\r\n                       + this._nameConnector\r\n                       + ecData.get(srcShape, 'name');\r\n\r\n            tarShape.style.text = name + this._valueConnector + value;\r\n\r\n            ecData.set(tarShape, 'value', value);\r\n            ecData.set(tarShape, 'name', name);\r\n            tarShape.style.r = this.option.island.r;\r\n            tarShape.style.color = zrColor.mix(\r\n                tarShape.style.color,\r\n                srcShape.style.color\r\n            );\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                newOption.island = this.reformOption(newOption.island);\r\n                this.option = newOption;\r\n    \r\n                this._nameConnector = this.option.nameConnector;\r\n                this._valueConnector = this.option.valueConnector;\r\n            }\r\n        },\r\n        \r\n        getOption: function () {\r\n            return this.option;\r\n        },\r\n\r\n        resize: function () {\r\n            var newWidth = this.zr.getWidth();\r\n            var newHieght = this.zr.getHeight();\r\n            var xScale = newWidth / (this._zrWidth || newWidth);\r\n            var yScale = newHieght / (this._zrHeight || newHieght);\r\n            if (xScale === 1 && yScale === 1) {\r\n                return;\r\n            }\r\n            this._zrWidth = newWidth;\r\n            this._zrHeight = newHieght;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.modShape(\r\n                    this.shapeList[i].id,\r\n                    {\r\n                        style: {\r\n                            x: Math.round(this.shapeList[i].style.x * xScale),\r\n                            y: Math.round(this.shapeList[i].style.y * yScale)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        add: function (shape) {\r\n            var name = ecData.get(shape, 'name');\r\n            var value = ecData.get(shape, 'value');\r\n            var seriesName = ecData.get(shape, 'series') != null\r\n                             ? ecData.get(shape, 'series').name\r\n                             : '';\r\n            var font = this.getFont(this.option.island.textStyle);\r\n            var islandOption = this.option.island;\r\n            var islandShape = {\r\n                zlevel: islandOption.zlevel,\r\n                z: islandOption.z,\r\n                style: {\r\n                    x: shape.style.x,\r\n                    y: shape.style.y,\r\n                    r: this.option.island.r,\r\n                    color: shape.style.color || shape.style.strokeColor,\r\n                    text: name + this._valueConnector + value,\r\n                    textFont: font\r\n                },\r\n                draggable: true,\r\n                hoverable: true,\r\n                onmousewheel: this.shapeHandler.onmousewheel,\r\n                _type: 'island'\r\n            };\r\n            if (islandShape.style.color === '#fff') {\r\n                islandShape.style.color = shape.style.strokeColor;\r\n            }\r\n            this.setCalculable(islandShape);\r\n            islandShape.dragEnableTime = 0;\r\n            ecData.pack(\r\n                islandShape,\r\n                {name:seriesName}, -1,\r\n                value, -1,\r\n                name\r\n            );\r\n            islandShape = new CircleShape(islandShape);\r\n            this.shapeList.push(islandShape);\r\n            this.zr.addShape(islandShape);\r\n        },\r\n\r\n        del: function (shape) {\r\n            this.zr.delShape(shape.id);\r\n            var newShapeList = [];\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].id != shape.id) {\r\n                    newShapeList.push(this.shapeList[i]);\r\n                }\r\n            }\r\n            this.shapeList = newShapeList;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽进来， 重载基类方法\r\n         */\r\n        ondrop: function (param, status) {\r\n            if (!this.isDrop || !param.target) {\r\n                // 没有在当前实例上发生拖拽行为则直接返回\r\n                return;\r\n            }\r\n            // 拖拽产生孤岛数据合并\r\n            var target = param.target;      // 拖拽安放目标\r\n            var dragged = param.dragged;    // 当前被拖拽的图形对象\r\n\r\n            this._combine(target, dragged);\r\n            this.zr.modShape(target.id);\r\n\r\n            status.dragIn = true;\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDrop = false;\r\n\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽出去， 重载基类方法\r\n         */\r\n        ondragend: function (param, status) {\r\n            var target = param.target;      // 拖拽安放目标\r\n            if (!this.isDragend) {\r\n                // 拖拽的不是孤岛数据，如果没有图表接受孤岛数据，需要新增孤岛数据\r\n                if (!status.dragIn) {\r\n                    target.style.x = zrEvent.getX(param.event);\r\n                    target.style.y = zrEvent.getY(param.event);\r\n                    this.add(target);\r\n                    status.needRefresh = true;\r\n                }\r\n            }\r\n            else {\r\n                // 拖拽的是孤岛数据，如果有图表接受了孤岛数据，需要删除孤岛数据\r\n                if (status.dragIn) {\r\n                    this.del(target);\r\n                    status.needRefresh = true;\r\n                }\r\n            }\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n\r\n            return;\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Island, ChartBase);\r\n    \r\n    // 图表注册\r\n    require('../chart').define('island', Island);\r\n    \r\n    return Island;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/chart/island.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * echarts图表基类\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function (require) {\n    // 图形依赖\n    var ImageShape = require('zrender/shape/Image');\n    var IconShape = require('../util/shape/Icon');\n    var MarkLineShape = require('../util/shape/MarkLine');\n    var SymbolShape = require('../util/shape/Symbol');\n    var PolylineShape = require('zrender/shape/Polyline');\n    var ShapeBundle = require('zrender/shape/ShapeBundle');\n    \n    var ecConfig = require('../config');\n    var ecData = require('../util/ecData');\n    var ecAnimation = require('../util/ecAnimation');\n    var ecEffect = require('../util/ecEffect');\n    var accMath = require('../util/accMath');\n    var ComponentBase = require('../component/base');\n    var EdgeBundling = require('../layout/EdgeBundling');\n\n    var zrUtil = require('zrender/tool/util');\n    var zrArea = require('zrender/tool/area');\n\n    // Some utility functions\n    function isCoordAvailable(coord) {\n        return coord.x != null && coord.y != null;\n    }\n    \n    function Base(ecTheme, messageCenter, zr, option, myChart) {\n\n        ComponentBase.call(this, ecTheme, messageCenter, zr, option, myChart);\n\n        var self = this;\n        this.selectedMap = {};\n        this.lastShapeList = [];\n        this.shapeHandler = {\n            onclick: function () {\n                self.isClick = true;\n            },\n            \n            ondragover: function (param) {\n                // 返回触发可计算特性的图形提示\n                var calculableShape = param.target;\n                calculableShape.highlightStyle = calculableShape.highlightStyle || {};\n                \n                // 备份特出特性\n                var highlightStyle = calculableShape.highlightStyle;\n                var brushType = highlightStyle.brushTyep;\n                var strokeColor = highlightStyle.strokeColor;\n                var lineWidth = highlightStyle.lineWidth;\n                \n                highlightStyle.brushType = 'stroke';\n                highlightStyle.strokeColor = self.ecTheme.calculableColor\n                                             || ecConfig.calculableColor;\n                highlightStyle.lineWidth = calculableShape.type === 'icon' ? 30 : 10;\n\n                self.zr.addHoverShape(calculableShape);\n                \n                setTimeout(function (){\n                    // 复位\n                    if (highlightStyle) {\n                        highlightStyle.brushType = brushType;\n                        highlightStyle.strokeColor = strokeColor;\n                        highlightStyle.lineWidth = lineWidth;\n                    }\n                },20);\n            },\n            \n            ondrop: function (param) {\n                // 排除一些非数据的拖拽进入\n                if (ecData.get(param.dragged, 'data') != null) {\n                    self.isDrop = true;\n                }\n            },\n            \n            ondragend: function () {\n                self.isDragend = true;\n            }\n        };\n    }\n    \n    /**\n     * 基类方法\n     */\n    Base.prototype = {\n        /**\n         * 图形拖拽特性 \n         */\n        setCalculable: function (shape) {\n            shape.dragEnableTime = this.ecTheme.DRAG_ENABLE_TIME || ecConfig.DRAG_ENABLE_TIME;\n            shape.ondragover = this.shapeHandler.ondragover;\n            shape.ondragend = this.shapeHandler.ondragend;\n            shape.ondrop = this.shapeHandler.ondrop;\n            return shape;\n        },\n\n        /**\n         * 数据项被拖拽进来\n         */\n        ondrop: function (param, status) {\n            if (!this.isDrop || !param.target || status.dragIn) {\n                // 没有在当前实例上发生拖拽行为或者已经被认领了则直接返回\n                return;\n            }\n            var target = param.target;      // 拖拽安放目标\n            var dragged = param.dragged;    // 当前被拖拽的图形对象\n\n            var seriesIndex = ecData.get(target, 'seriesIndex');\n            var dataIndex = ecData.get(target, 'dataIndex');\n\n            var series = this.series;\n            var data;\n            var legend = this.component.legend;\n            if (dataIndex === -1) {\n                // 落到calculableCase上，数据被拖拽进某个饼图|雷达|漏斗，增加数据\n                if (ecData.get(dragged, 'seriesIndex') == seriesIndex) {\n                    // 自己拖拽到自己\n                    status.dragOut = status.dragIn = status.needRefresh = true;\n                    this.isDrop = false;\n                    return;\n                }\n                \n                data = {\n                    value: ecData.get(dragged, 'value'),\n                    name: ecData.get(dragged, 'name')\n                };\n\n                // 修饼图数值不为负值\n                if (this.type === ecConfig.CHART_TYPE_PIE && data.value < 0) {\n                    data.value = 0;\n                }\n\n                var hasFind = false;\n                var sData = series[seriesIndex].data;\n                for (var i = 0, l = sData.length; i < l; i++) {\n                    if (sData[i].name === data.name && sData[i].value === '-') {\n                        series[seriesIndex].data[i].value = data.value;\n                        hasFind = true;\n                    }\n                }\n                !hasFind && series[seriesIndex].data.push(data);\n\n                legend && legend.add(\n                    data.name,\n                    dragged.style.color || dragged.style.strokeColor\n                );\n            }\n            else {\n                // 落到数据item上，数据被拖拽到某个数据项上，数据修改\n                data = series[seriesIndex].data[dataIndex] || '-';\n                if (data.value != null) {\n                    if (data.value != '-') {\n                        series[seriesIndex].data[dataIndex].value = \n                            accMath.accAdd(\n                                series[seriesIndex].data[dataIndex].value,\n                                ecData.get(dragged, 'value')\n                            );\n                    }\n                    else {\n                        series[seriesIndex].data[dataIndex].value =\n                            ecData.get(dragged, 'value');\n                    }\n                    \n                    if (this.type === ecConfig.CHART_TYPE_FUNNEL\n                        || this.type === ecConfig.CHART_TYPE_PIE\n                    ) {\n                        legend && legend.getRelatedAmount(data.name) === 1 \n                               && this.component.legend.del(data.name);\n                        data.name += this.option.nameConnector + ecData.get(dragged, 'name');\n                        legend && legend.add(\n                            data.name,\n                            dragged.style.color || dragged.style.strokeColor\n                        );\n                    }\n                }\n                else {\n                    if (data != '-') {\n                        series[seriesIndex].data[dataIndex] = \n                            accMath.accAdd(\n                                series[seriesIndex].data[dataIndex],\n                                ecData.get(dragged, 'value')\n                            );\n                    }\n                    else {\n                        series[seriesIndex].data[dataIndex] =\n                            ecData.get(dragged, 'value');\n                    }\n                }\n            }\n\n            // 别status = {}赋值啊！！\n            status.dragIn = status.dragIn || true;\n\n            // 处理完拖拽事件后复位\n            this.isDrop = false;\n\n            var self = this;\n            setTimeout(function(){\n                self.zr.trigger('mousemove', param.event);\n            }, 300);\n            \n            return;\n        },\n\n        /**\n         * 数据项被拖拽出去\n         */\n        ondragend: function (param, status) {\n            if (!this.isDragend || !param.target || status.dragOut) {\n                // 没有在当前实例上发生拖拽行为或者已经被认领了则直接返回\n                return;\n            }\n            var target = param.target;      // 被拖拽图形元素\n\n            var seriesIndex = ecData.get(target, 'seriesIndex');\n            var dataIndex = ecData.get(target, 'dataIndex');\n\n            var series = this.series;\n\n            // 删除被拖拽走的数据\n            if (series[seriesIndex].data[dataIndex].value != null) {\n                series[seriesIndex].data[dataIndex].value = '-';\n                // 清理可能有且唯一的legend data\n                var name = series[seriesIndex].data[dataIndex].name;\n                var legend = this.component.legend;\n                if (legend && legend.getRelatedAmount(name) === 0) {\n                    legend.del(name);\n                }\n            }\n            else {\n                series[seriesIndex].data[dataIndex] = '-';\n            }\n            \n            // 别status = {}赋值啊！！\n            status.dragOut = true;\n            status.needRefresh = true;\n\n            // 处理完拖拽事件后复位\n            this.isDragend = false;\n\n            return;\n        },\n\n        /**\n         * 图例选择\n         */\n        onlegendSelected: function (param, status) {\n            var legendSelected = param.selected;\n            for (var itemName in this.selectedMap) {\n                if (this.selectedMap[itemName] != legendSelected[itemName]) {\n                    // 有一项不一致都需要重绘\n                    status.needRefresh = true;\n                }\n                this.selectedMap[itemName] = legendSelected[itemName];\n            }\n            return;\n        },\n        \n        /**\n         * 折线图、柱形图公用方法\n         */\n        _buildPosition: function() {\n            this._symbol = this.option.symbolList;\n            this._sIndex2ShapeMap = {};  // series拐点图形类型，seriesIndex索引到shape type\n            this._sIndex2ColorMap = {};  // series默认颜色索引，seriesIndex索引到color\n\n            this.selectedMap = {};\n            this.xMarkMap = {};\n            \n            var series = this.series;\n            // 水平垂直双向series索引 ，position索引到seriesIndex\n            var _position2sIndexMap = {\n                top: [],\n                bottom: [],\n                left: [],\n                right: [],\n                other: []\n            };\n            var xAxisIndex;\n            var yAxisIndex;\n            var xAxis;\n            var yAxis;\n            for (var i = 0, l = series.length; i < l; i++) {\n                if (series[i].type === this.type) {\n                    series[i] = this.reformOption(series[i]);\n                    this.legendHoverLink = series[i].legendHoverLink || this.legendHoverLink;\n                    xAxisIndex = series[i].xAxisIndex;\n                    yAxisIndex = series[i].yAxisIndex;\n                    xAxis = this.component.xAxis.getAxis(xAxisIndex);\n                    yAxis = this.component.yAxis.getAxis(yAxisIndex);\n                    if (xAxis.type === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY) {\n                        _position2sIndexMap[xAxis.getPosition()].push(i);\n                    }\n                    else if (yAxis.type === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY) {\n                        _position2sIndexMap[yAxis.getPosition()].push(i);\n                    }\n                    else {\n                        _position2sIndexMap.other.push(i);\n                    }\n                }\n            }\n            // console.log(_position2sIndexMap);\n            for (var position in _position2sIndexMap) {\n                if (_position2sIndexMap[position].length > 0) {\n                    this._buildSinglePosition(\n                        position, _position2sIndexMap[position]\n                    );\n                }\n            }\n\n            this.addShapeList();\n        },\n        \n        /**\n         * 构建单个方向上的折线图、柱形图公用方法\n         *\n         * @param {number} seriesIndex 系列索引\n         */\n        _buildSinglePosition: function (position, seriesArray) {\n            var mapData = this._mapData(seriesArray);\n            var locationMap = mapData.locationMap;\n            var maxDataLength = mapData.maxDataLength;\n\n            if (maxDataLength === 0 || locationMap.length === 0) {\n                return;\n            }\n            switch (position) {\n                case 'bottom' :\n                case 'top' :\n                    this._buildHorizontal(seriesArray, maxDataLength, locationMap, this.xMarkMap);\n                    break;\n                case 'left' :\n                case 'right' :\n                    this._buildVertical(seriesArray, maxDataLength, locationMap, this.xMarkMap);\n                    break;\n                case 'other' :\n                    this._buildOther(seriesArray, maxDataLength, locationMap, this.xMarkMap);\n                    break;\n            }\n            \n            for (var i = 0, l = seriesArray.length; i < l; i++) {\n                this.buildMark(seriesArray[i]);\n            }\n        },\n        \n        /**\n         * 数据整形，折线图、柱形图公用方法\n         * 数组位置映射到系列索引\n         */\n        _mapData: function (seriesArray) {\n            var series = this.series;\n            var serie;                              // 临时映射变量\n            var dataIndex = 0;                      // 堆积数据所在位置映射\n            var stackMap = {};                      // 堆积数据位置映射，堆积组在二维中的第几项\n            var magicStackKey = '__kener__stack__'; // 堆积命名，非堆积数据安单一堆积处理\n            var stackKey;                           // 临时映射变量\n            var serieName;                          // 临时映射变量\n            var legend = this.component.legend;\n            var locationMap = [];                   // 需要返回的东西：数组位置映射到系列索引\n            var maxDataLength = 0;                  // 需要返回的东西：最大数据长度\n            var iconShape;\n            // 计算需要显示的个数和分配位置并记在下面这个结构里\n            for (var i = 0, l = seriesArray.length; i < l; i++) {\n                serie = series[seriesArray[i]];\n                serieName = serie.name;\n                \n                this._sIndex2ShapeMap[seriesArray[i]] = this._sIndex2ShapeMap[seriesArray[i]]\n                                                        || this.query(serie,'symbol')\n                                                        || this._symbol[i % this._symbol.length];\n                      \n                if (legend){\n                    this.selectedMap[serieName] = legend.isSelected(serieName);\n                    \n                    this._sIndex2ColorMap[seriesArray[i]] = legend.getColor(serieName);\n                        \n                    iconShape = legend.getItemShape(serieName);\n                    if (iconShape) {\n                        // 回调legend，换一个更形象的icon\n                        var style = iconShape.style;\n                        if (this.type == ecConfig.CHART_TYPE_LINE) {\n                            style.iconType = 'legendLineIcon';\n                            style.symbol =  this._sIndex2ShapeMap[seriesArray[i]];\n                        }\n                        else if (serie.itemStyle.normal.barBorderWidth > 0) {\n                            var highlightStyle = iconShape.highlightStyle;\n                            style.brushType = 'both';\n                            style.x += 1;\n                            style.y += 1;\n                            style.width -= 2;\n                            style.height -= 2;\n                            style.strokeColor \n                                = highlightStyle.strokeColor \n                                = serie.itemStyle.normal.barBorderColor;\n                            highlightStyle.lineWidth = 3;\n                        }\n                        \n                        legend.setItemShape(serieName, iconShape);\n                    }\n                }\n                else {\n                    this.selectedMap[serieName] = true;\n                    this._sIndex2ColorMap[seriesArray[i]] = this.zr.getColor(seriesArray[i]);\n                }\n\n                if (this.selectedMap[serieName]) {\n                    stackKey = serie.stack || (magicStackKey + seriesArray[i]);\n                    if (stackMap[stackKey] == null) {\n                        stackMap[stackKey] = dataIndex;\n                        locationMap[dataIndex] = [seriesArray[i]];\n                        dataIndex++;\n                    }\n                    else {\n                        // 已经分配了位置就推进去就行\n                        locationMap[stackMap[stackKey]].push(seriesArray[i]);\n                    }\n                }\n                // 兼职帮算一下最大长度\n                maxDataLength = Math.max(maxDataLength, serie.data.length);\n            }\n            /* 调试输出\n            var s = '';\n            for (var i = 0, l = maxDataLength; i < l; i++) {\n                s = '[';\n                for (var j = 0, k = locationMap.length; j < k; j++) {\n                    s +='['\n                    for (var m = 0, n = locationMap[j].length - 1; m < n; m++) {\n                        s += series[locationMap[j][m]].data[i] + ','\n                    }\n                    s += series[locationMap[j][locationMap[j].length - 1]]\n                         .data[i];\n                    s += ']'\n                }\n                s += ']';\n                console.log(s);\n            }\n            console.log(locationMap)\n            */\n\n            return {\n                locationMap: locationMap,\n                maxDataLength: maxDataLength\n            };\n        },\n        \n        _calculMarkMapXY : function(xMarkMap, locationMap, xy) {\n            var series = this.series;\n            for (var j = 0, k = locationMap.length; j < k; j++) {\n                for (var m = 0, n = locationMap[j].length; m < n; m++) {\n                    var seriesIndex = locationMap[j][m];\n                    var valueIndex = xy == 'xy' ? 0 : '';\n                    var grid = this.component.grid;\n                    var tarMark = xMarkMap[seriesIndex];\n\n                    if (xy.indexOf('x') != '-1') {\n                        if (tarMark['counter' + valueIndex] > 0) {\n                            tarMark['average' + valueIndex] =\n                                tarMark['sum' + valueIndex] / tarMark['counter' + valueIndex];\n                        }\n                        \n                        var x = this.component.xAxis.getAxis(series[seriesIndex].xAxisIndex || 0)\n                                .getCoord(tarMark['average' + valueIndex]);\n                        tarMark['averageLine' + valueIndex] = [\n                            [x, grid.getYend()],\n                            [x, grid.getY()]\n                        ];\n                        tarMark['minLine' + valueIndex] = [\n                            [tarMark['minX' + valueIndex], grid.getYend()],\n                            [tarMark['minX' + valueIndex], grid.getY()]\n                        ];\n                        tarMark['maxLine' + valueIndex] = [\n                            [tarMark['maxX' + valueIndex], grid.getYend()],\n                            [tarMark['maxX' + valueIndex], grid.getY()]\n                        ];\n                        \n                        tarMark.isHorizontal = false;\n                    }\n                    \n                    valueIndex = xy == 'xy' ? 1 : '';\n                    if (xy.indexOf('y') != '-1') {\n                        if (tarMark['counter' + valueIndex] > 0) {\n                            tarMark['average' + valueIndex] = \n                                tarMark['sum' + valueIndex] / tarMark['counter' + valueIndex];\n                        }\n                        var y = this.component.yAxis.getAxis(series[seriesIndex].yAxisIndex || 0)\n                                .getCoord(tarMark['average' + valueIndex]);\n                        tarMark['averageLine' + valueIndex] = [\n                            [grid.getX(), y],\n                            [grid.getXend(), y]\n                        ];\n                        tarMark['minLine' + valueIndex] = [\n                            [grid.getX(), tarMark['minY' + valueIndex]],\n                            [grid.getXend(), tarMark['minY' + valueIndex]]\n                        ];\n                        tarMark['maxLine' + valueIndex] = [\n                            [grid.getX(), tarMark['maxY' + valueIndex]],\n                            [grid.getXend(), tarMark['maxY' + valueIndex]]\n                        ];\n                        \n                        tarMark.isHorizontal = true;\n                    }\n                }\n            }\n        },\n        \n        /**\n         * 添加文本 \n         */\n        addLabel: function (tarShape, serie, data, name, orient) {\n            // 多级控制\n            var queryTarget = [data, serie];\n            var nLabel = this.deepMerge(queryTarget, 'itemStyle.normal.label');\n            var eLabel = this.deepMerge(queryTarget, 'itemStyle.emphasis.label');\n\n            var nTextStyle = nLabel.textStyle || {};\n            var eTextStyle = eLabel.textStyle || {};\n            \n            if (nLabel.show) {\n                var style = tarShape.style;\n                style.text = this._getLabelText(\n                    serie, data, name, 'normal'\n                );\n                style.textPosition = nLabel.position == null\n                                     ? (orient === 'horizontal' ? 'right' : 'top')\n                                     : nLabel.position;\n                style.textColor = nTextStyle.color;\n                style.textFont = this.getFont(nTextStyle);\n                style.textAlign = nTextStyle.align;\n                style.textBaseline = nTextStyle.baseline;\n            }\n            if (eLabel.show) {\n                var highlightStyle = tarShape.highlightStyle;\n                highlightStyle.text = this._getLabelText(\n                    serie, data, name, 'emphasis'\n                );\n                highlightStyle.textPosition = nLabel.show\n                                              ? tarShape.style.textPosition\n                                              : (eLabel.position == null\n                                                 ? (orient === 'horizontal' ? 'right' : 'top')\n                                                 : eLabel.position);\n                highlightStyle.textColor = eTextStyle.color;\n                highlightStyle.textFont = this.getFont(eTextStyle);\n                highlightStyle.textAlign = eTextStyle.align;\n                highlightStyle.textBaseline = eTextStyle.baseline;\n            }\n            \n            return tarShape;\n        },\n        \n        /**\n         * 根据lable.format计算label text\n         */\n        _getLabelText: function (serie, data, name, status) {\n            var formatter = this.deepQuery(\n                [data, serie],\n                'itemStyle.' + status + '.label.formatter'\n            );\n            if (!formatter && status === 'emphasis') {\n                // emphasis时需要看看normal下是否有formatter\n                formatter = this.deepQuery(\n                    [data, serie],\n                    'itemStyle.normal.label.formatter'\n                );\n            }\n            \n            var value = this.getDataFromOption(data, '-');\n            \n            if (formatter) {\n                if (typeof formatter === 'function') {\n                    return formatter.call(\n                        this.myChart,\n                        {\n                            seriesName: serie.name,\n                            series: serie,\n                            name: name,\n                            value: value,\n                            data: data,\n                            status: status\n                        }\n                    );\n                }\n                else if (typeof formatter === 'string') {\n                    formatter = formatter.replace('{a}','{a0}')\n                                         .replace('{b}','{b0}')\n                                         .replace('{c}','{c0}')\n                                         .replace('{a0}', serie.name)\n                                         .replace('{b0}', name)\n                                         .replace('{c0}', this.numAddCommas(value));\n    \n                    return formatter;\n                }\n            }\n            else {\n                if (value instanceof Array) {\n                    return value[2] != null\n                           ? this.numAddCommas(value[2])\n                           : (value[0] + ' , ' + value[1]);\n                }\n                else {\n                    return this.numAddCommas(value);\n                }\n            }\n        },\n        \n        /**\n         * 标线标注 \n         */\n        buildMark: function (seriesIndex) {\n            var serie = this.series[seriesIndex];\n            if (this.selectedMap[serie.name]) {\n                serie.markLine && this._buildMarkLine(seriesIndex);\n                serie.markPoint && this._buildMarkPoint(seriesIndex);\n            }\n        },\n        \n        /**\n         * 标注逻辑\n         */\n        _buildMarkPoint: function (seriesIndex) {\n            var attachStyle =  (this.markAttachStyle || {})[seriesIndex];\n            var serie = this.series[seriesIndex];\n            var mpData;\n            var pos;\n            var markPoint = zrUtil.clone(serie.markPoint);\n            for (var i = 0, l = markPoint.data.length; i < l; i++) {\n                mpData = markPoint.data[i];\n                pos = this.getMarkCoord(seriesIndex, mpData);\n                mpData.x = mpData.x != null ? mpData.x : pos[0];\n                mpData.y = mpData.y != null ? mpData.y : pos[1];\n                if (mpData.type\n                    && (mpData.type === 'max' || mpData.type === 'min')\n                ) {\n                    // 特殊值内置支持\n                    mpData.value = pos[3];\n                    mpData.name = mpData.name || mpData.type;\n                    mpData.symbolSize = mpData.symbolSize\n                        || (zrArea.getTextWidth(pos[3], this.getFont()) / 2 + 5);\n                }\n            }\n            \n            var shapeList = this._markPoint(seriesIndex, markPoint);\n            \n            for (var i = 0, l = shapeList.length; i < l; i++) {\n                var tarShape = shapeList[i];\n                tarShape.zlevel = serie.zlevel;\n                tarShape.z = serie.z + 1;\n                for (var key in attachStyle) {\n                    tarShape[key] = zrUtil.clone(attachStyle[key]);\n                }\n                this.shapeList.push(tarShape);\n            }\n            // 个别特殊图表需要自己addShape\n            if (this.type === ecConfig.CHART_TYPE_FORCE\n                || this.type === ecConfig.CHART_TYPE_CHORD\n            ) {\n                for (var i = 0, l = shapeList.length; i < l; i++) {\n                    this.zr.addShape(shapeList[i]);\n                }\n            }\n        },\n        \n        /**\n         * 标线逻辑\n         */\n        _buildMarkLine: function (seriesIndex) {\n            var attachStyle =  (this.markAttachStyle || {})[seriesIndex];\n            var serie = this.series[seriesIndex];\n            var pos;\n            var markLine = zrUtil.clone(serie.markLine);\n            for (var i = 0, l = markLine.data.length; i < l; i++) {\n                var mlData = markLine.data[i];\n                if (mlData.type\n                    && (mlData.type === 'max' || mlData.type === 'min' || mlData.type === 'average')\n                ) {\n                    // 特殊值内置支持\n                    pos = this.getMarkCoord(seriesIndex, mlData);\n                    markLine.data[i] = [zrUtil.clone(mlData), {}];\n                    markLine.data[i][0].name = mlData.name || mlData.type;\n                    markLine.data[i][0].value = mlData.type !== 'average'\n                                                ? pos[3]\n                                                : +pos[3].toFixed(\n                                                      markLine.precision != null \n                                                      ? markLine.precision \n                                                      : this.deepQuery(\n                                                            [this.ecTheme, ecConfig],\n                                                            'markLine.precision'\n                                                        )\n                                                  );\n                    pos = pos[2];\n                    mlData = [{},{}];\n                }\n                else {\n                    pos = [\n                        this.getMarkCoord(seriesIndex, mlData[0]),\n                        this.getMarkCoord(seriesIndex, mlData[1])\n                    ];\n                }\n                if (pos == null || pos[0] == null || pos[1] == null) {\n                    // 不在显示区域内\n                    continue;\n                }\n                markLine.data[i][0].x = mlData[0].x != null ? mlData[0].x : pos[0][0];\n                markLine.data[i][0].y = mlData[0].y != null ? mlData[0].y : pos[0][1];\n                markLine.data[i][1].x = mlData[1].x != null ? mlData[1].x : pos[1][0];\n                markLine.data[i][1].y = mlData[1].y != null ? mlData[1].y : pos[1][1];\n            }\n            \n            var shapeList = this._markLine(seriesIndex, markLine);\n\n            var isLarge = markLine.large;\n\n            if (isLarge) {\n                var shapeBundle = new ShapeBundle({\n                    style: {\n                        shapeList: shapeList\n                    }\n                });\n                var firstShape = shapeList[0];\n                if (firstShape) {\n                    zrUtil.merge(shapeBundle.style, firstShape.style);\n                    zrUtil.merge(shapeBundle.highlightStyle = {}, firstShape.highlightStyle);\n                    shapeBundle.style.brushType = 'stroke';\n                    shapeBundle.zlevel = serie.zlevel;\n                    shapeBundle.z = serie.z + 1;\n                    shapeBundle.hoverable = false;\n                    for (var key in attachStyle) {\n                        shapeBundle[key] = zrUtil.clone(attachStyle[key]);\n                    }\n                }\n                this.shapeList.push(shapeBundle);\n                this.zr.addShape(shapeBundle);\n\n                shapeBundle._mark = 'largeLine';\n                var effect = markLine.effect;\n                if (effect.show) {\n                    shapeBundle.effect = effect;\n                }\n            }\n            else {\n                for (var i = 0, l = shapeList.length; i < l; i++) {\n                    var tarShape = shapeList[i];\n                    tarShape.zlevel = serie.zlevel;\n                    tarShape.z = serie.z + 1;\n                    for (var key in attachStyle) {\n                        tarShape[key] = zrUtil.clone(attachStyle[key]);\n                    }\n                    this.shapeList.push(tarShape);\n                }\n                // 个别特殊图表需要自己addShape\n                if (this.type === ecConfig.CHART_TYPE_FORCE\n                    || this.type === ecConfig.CHART_TYPE_CHORD\n                ) {\n                    for (var i = 0, l = shapeList.length; i < l; i++) {\n                        this.zr.addShape(shapeList[i]);\n                    }\n                }\n            }\n        },\n        \n        /**\n         * 标注多级控制构造\n         */\n        _markPoint: function (seriesIndex, mpOption) {\n            var serie = this.series[seriesIndex];\n            var component = this.component;\n            zrUtil.merge(\n                zrUtil.merge(\n                    mpOption,\n                    zrUtil.clone(this.ecTheme.markPoint || {})\n                ),\n                zrUtil.clone(ecConfig.markPoint)\n            );\n\n            mpOption.name = serie.name;\n                   \n            var pList = [];\n            var data = mpOption.data;\n            var itemShape;\n            \n            var dataRange = component.dataRange;\n            var legend = component.legend;\n            var color;\n            var value;\n            var queryTarget;\n            var nColor;\n            var eColor;\n            var effect;\n            var zrWidth = this.zr.getWidth();\n            var zrHeight = this.zr.getHeight();\n\n            if (!mpOption.large) {\n                for (var i = 0, l = data.length; i < l; i++) {\n                    if (data[i].x == null || data[i].y == null) {\n                        continue;\n                    }\n                    value = data[i].value != null ? data[i].value : '';\n                    // 图例\n                    if (legend) {\n                        color = legend.getColor(serie.name);\n                    }\n                    // 值域\n                    if (dataRange) {\n                        color = isNaN(value) ? color : dataRange.getColor(value);\n                        \n                        queryTarget = [data[i], mpOption];\n                        nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\n                                 || color;\n                        eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\n                                 || nColor;\n                        // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\n                        if (nColor == null && eColor == null) {\n                            continue;\n                        }\n                    }\n                    \n                    color = color == null ? this.zr.getColor(seriesIndex) : color;\n                    \n                    // 标准化一些参数\n                    data[i].tooltip = data[i].tooltip\n                                      || mpOption.tooltip\n                                      || {trigger:'item'}; // tooltip.trigger指定为item\n                    data[i].name = data[i].name != null ? data[i].name : '';\n                    data[i].value = value;\n\n                    // 复用getSymbolShape\n                    itemShape = this.getSymbolShape(\n                        mpOption, seriesIndex,      // 系列 \n                        data[i], i, data[i].name,   // 数据\n                        this.parsePercent(data[i].x, zrWidth),   // 坐标\n                        this.parsePercent(data[i].y, zrHeight),  // 坐标\n                        'pin', color,               // 默认symbol和color\n                        'rgba(0,0,0,0)',\n                        'horizontal'                // 走向，用于默认文字定位\n                    );\n                    itemShape._mark = 'point';\n                    \n                    effect = this.deepMerge(\n                        [data[i], mpOption],\n                        'effect'\n                    );\n                    if (effect.show) {\n                        itemShape.effect = effect;\n                    }\n                    \n                    if (serie.type === ecConfig.CHART_TYPE_MAP) {\n                        itemShape._geo = this.getMarkGeo(data[i]);\n                    }\n                    \n                    // 重新pack一下数据\n                    ecData.pack(\n                        itemShape,\n                        serie, seriesIndex,\n                        data[i], i,\n                        data[i].name,\n                        value\n                    );\n                    pList.push(itemShape);\n                }\n            }\n            else {\n                // 大规模MarkPoint\n                itemShape = this.getLargeMarkPointShape(seriesIndex, mpOption);\n                itemShape._mark = 'largePoint';\n                itemShape && pList.push(itemShape);\n            }\n            return pList;\n        },\n        \n        /**\n         * 标线多级控制构造\n         */\n        _markLine: (function () {\n            function normalizeOptionValue(mlOption, key) {\n                mlOption[key] = mlOption[key] instanceof Array\n                          ? mlOption[key].length > 1 \n                            ? mlOption[key] \n                            : [mlOption[key][0], mlOption[key][0]]\n                          : [mlOption[key], mlOption[key]];\n            }\n\n            return function (seriesIndex, mlOption) {\n                var serie = this.series[seriesIndex];\n                var component = this.component;\n                var dataRange = component.dataRange;\n                var legend = component.legend;\n\n                zrUtil.merge(\n                    zrUtil.merge(\n                        mlOption,\n                        zrUtil.clone(this.ecTheme.markLine || {})\n                    ),\n                    zrUtil.clone(ecConfig.markLine)\n                );\n\n                var defaultColor = legend ? legend.getColor(serie.name)\n                    : this.zr.getColor(seriesIndex);\n\n                // 标准化一些同时支持Array和String的参数\n                normalizeOptionValue(mlOption, 'symbol');\n                normalizeOptionValue(mlOption, 'symbolSize');\n                normalizeOptionValue(mlOption, 'symbolRotate');\n\n                // Normalize and filter data\n                var data = mlOption.data;\n                var edges = [];\n                var zrWidth = this.zr.getWidth();\n                var zrHeight = this.zr.getHeight();\n                for (var i = 0; i < data.length; i++) {\n                    var mlData = data[i];\n                    if (isCoordAvailable(mlData[0])\n                        && isCoordAvailable(mlData[1])\n                    ) {\n                        // 组装一个mergeData\n                        var mergeData = this.deepMerge(mlData);\n                        var queryTarget = [mergeData, mlOption];\n                        var color = defaultColor;\n                        var value = mergeData.value != null ? mergeData.value : '';\n                        // 值域\n                        if (dataRange) {\n                            color = isNaN(value) ? color : dataRange.getColor(value);\n\n                            var nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\n                                     || color;\n                            var eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\n                                     || nColor;\n                            // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\n                            if (nColor == null && eColor == null) {\n                                continue;\n                            }\n                        }\n                        // 标准化一些参数\n                        mlData[0].tooltip = mergeData.tooltip\n                                            || mlOption.tooltip\n                                            || {trigger:'item'}; // tooltip.trigger指定为item\n                        mlData[0].name = mlData[0].name || '';\n                        mlData[1].name = mlData[1].name || '';\n                        mlData[0].value = value;\n\n                        edges.push({\n                            points: [\n                                [this.parsePercent(mlData[0].x, zrWidth),\n                                this.parsePercent(mlData[0].y, zrHeight)],\n                                [this.parsePercent(mlData[1].x, zrWidth),\n                                this.parsePercent(mlData[1].y, zrHeight)]\n                            ],\n                            rawData: mlData,\n                            color: color\n                        });\n                    }\n                }\n\n                var enableBundling = this.query(mlOption, 'bundling.enable');\n                if (enableBundling) {\n                    var edgeBundling = new EdgeBundling();\n                    edgeBundling.maxTurningAngle = this.query(\n                        mlOption, 'bundling.maxTurningAngle'\n                    ) / 180 * Math.PI;\n                    edges = edgeBundling.run(edges);\n                }\n\n                mlOption.name = serie.name;\n  \n                var shapeList = [];\n\n                for (var i = 0, l = edges.length; i < l; i++) {\n                    var edge = edges[i];\n                    var rawEdge = edge.rawEdge || edge; \n                    var mlData = rawEdge.rawData;\n                    var value = mlData.value != null ? mlData.value : '';\n\n                    var itemShape = this.getMarkLineShape(\n                        mlOption,\n                        seriesIndex,\n                        mlData,\n                        i,\n                        edge.points,\n                        enableBundling,\n                        rawEdge.color\n                    );\n                    itemShape._mark = 'line';\n                    \n                    var effect = this.deepMerge(\n                        [mlData[0], mlData[1], mlOption],\n                        'effect'\n                    );\n                    if (effect.show) {\n                        itemShape.effect = effect;\n                        itemShape.effect.large = mlOption.large;\n                    }\n                    \n                    if (serie.type === ecConfig.CHART_TYPE_MAP) {\n                        itemShape._geo = [\n                            this.getMarkGeo(mlData[0]),\n                            this.getMarkGeo(mlData[1])\n                        ];\n                    }\n                    \n                    // 重新pack一下数据\n                    ecData.pack(\n                        itemShape,\n                        serie, seriesIndex,\n                        mlData[0], i,\n                        mlData[0].name \n                            // 不要帮我代码规范\n                            + (mlData[1].name !== '' ? (' > ' + mlData[1].name) : ''),\n                        value\n                    );\n                    shapeList.push(itemShape);\n                }\n\n                return shapeList;\n            };\n        })(),\n        \n        getMarkCoord: function () {\n            // 无转换位置\n            return [0, 0];\n        },\n        \n        /**\n         * symbol构造器 \n         */\n        getSymbolShape: function (\n            serie, seriesIndex,     // 系列 \n            data, dataIndex, name,  // 数据\n            x, y,                   // 坐标\n            symbol, color,          // 默认symbol和color，来自legend或dataRange全局分配\n            emptyColor,             // 折线的emptySymbol用白色填充\n            orient                  // 走向，用于默认文字定位\n        ) {\n            var queryTarget = [data, serie];\n            var value = this.getDataFromOption(data, '-');\n            \n            symbol = this.deepQuery(queryTarget, 'symbol') || symbol;\n            var symbolSize = this.deepQuery(queryTarget, 'symbolSize');\n            symbolSize = typeof symbolSize === 'function'\n                         ? symbolSize(value)\n                         : symbolSize;\n            if (typeof symbolSize === 'number') {\n                symbolSize = [symbolSize, symbolSize];\n            }\n            var symbolRotate = this.deepQuery(queryTarget, 'symbolRotate');\n            \n            var normal = this.deepMerge(\n                queryTarget,\n                'itemStyle.normal'\n            );\n            var emphasis = this.deepMerge(\n                queryTarget,\n                'itemStyle.emphasis'\n            );\n            var nBorderWidth = normal.borderWidth != null\n                               ? normal.borderWidth\n                               : (normal.lineStyle && normal.lineStyle.width);\n            if (nBorderWidth == null) {\n                nBorderWidth = symbol.match('empty') ? 2 : 0;\n            }\n            var eBorderWidth = emphasis.borderWidth != null\n                               ? emphasis.borderWidth\n                               : (emphasis.lineStyle && emphasis.lineStyle.width);\n            if (eBorderWidth == null) {\n                eBorderWidth = nBorderWidth + 2;\n            }\n\n            var nColor = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data);\n            var eColor = this.getItemStyleColor(emphasis.color, seriesIndex, dataIndex, data);\n            \n            var width = symbolSize[0];\n            var height = symbolSize[1];\n            var itemShape = new IconShape({\n                style: {\n                    iconType: symbol.replace('empty', '').toLowerCase(),\n                    x: x - width,\n                    y: y - height,\n                    width: width * 2,\n                    height: height * 2,\n                    brushType: 'both',\n                    color: symbol.match('empty') \n                           ? emptyColor \n                           : (nColor || color),\n                    strokeColor: normal.borderColor || nColor || color,\n                    lineWidth: nBorderWidth\n                },\n                highlightStyle: {\n                    color: symbol.match('empty') \n                           ? emptyColor \n                           : (eColor || nColor || color),\n                    strokeColor: emphasis.borderColor \n                                 || normal.borderColor\n                                 || eColor\n                                 || nColor\n                                 || color,\n                    lineWidth: eBorderWidth\n                },\n                clickable: this.deepQuery(queryTarget, 'clickable')\n            });\n\n            if (symbol.match('image')) {\n                itemShape.style.image = symbol.replace(new RegExp('^image:\\\\/\\\\/'), '');\n                itemShape = new ImageShape({\n                    style: itemShape.style,\n                    highlightStyle: itemShape.highlightStyle,\n                    clickable: this.deepQuery(queryTarget, 'clickable')\n                });\n            }\n            \n            if (symbolRotate != null) {\n                itemShape.rotation = [\n                    symbolRotate * Math.PI / 180, x, y\n                ];\n            }\n            \n            if (symbol.match('star')) {\n                itemShape.style.iconType = 'star';\n                itemShape.style.n = \n                    (symbol.replace('empty', '').replace('star','') - 0) || 5;\n            }\n            \n            if (symbol === 'none') {\n                itemShape.invisible = true;\n                itemShape.hoverable = false;\n            }\n            \n            /*\n            if (this.deepQuery([data, serie, option], 'calculable')) {\n                this.setCalculable(itemShape);\n                itemShape.draggable = true;\n            }\n            */\n\n            itemShape = this.addLabel(\n                itemShape, \n                serie, data, name, \n                orient\n            );\n            \n            if (symbol.match('empty')) {\n                if (itemShape.style.textColor == null) {\n                    itemShape.style.textColor = itemShape.style.strokeColor;\n                }\n                if (itemShape.highlightStyle.textColor == null) {\n                    itemShape.highlightStyle.textColor = \n                        itemShape.highlightStyle.strokeColor;\n                }\n            }\n            \n            ecData.pack(\n                itemShape,\n                serie, seriesIndex,\n                data, dataIndex,\n                name\n            );\n\n            itemShape._x = x;\n            itemShape._y = y;\n            \n            itemShape._dataIndex = dataIndex;\n            itemShape._seriesIndex = seriesIndex;\n\n            return itemShape;\n        },\n        \n        /**\n         * 标线构造器 \n         */\n        getMarkLineShape: function (\n            mlOption,               // 系列 \n            seriesIndex,            // 系列索引\n            data,                   // 数据\n            dataIndex,              // 数据索引\n            points,                 // 坐标点\n            bundling,               // 是否边捆绑过\n            color                   // 默认color，来自legend或dataRange全局分配\n        ) {\n            var value0 = data[0].value != null ? data[0].value : '-';\n            var value1 = data[1].value != null ? data[1].value : '-';\n            var symbol = [\n                data[0].symbol || mlOption.symbol[0],\n                data[1].symbol || mlOption.symbol[1]\n            ];\n            var symbolSize = [\n                data[0].symbolSize || mlOption.symbolSize[0],\n                data[1].symbolSize || mlOption.symbolSize[1]\n            ];\n            symbolSize[0] = typeof symbolSize[0] === 'function'\n                            ? symbolSize[0](value0)\n                            : symbolSize[0];\n            symbolSize[1] = typeof symbolSize[1] === 'function'\n                            ? symbolSize[1](value1)\n                            : symbolSize[1];\n            var symbolRotate = [\n                this.query(data[0], 'symbolRotate') || mlOption.symbolRotate[0],\n                this.query(data[1], 'symbolRotate') || mlOption.symbolRotate[1]\n            ];\n            //console.log(symbol, symbolSize, symbolRotate);\n\n            var queryTarget = [data[0], data[1], mlOption];\n            var normal = this.deepMerge(\n                queryTarget,\n                'itemStyle.normal'\n            );\n            normal.color = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data);\n            var emphasis = this.deepMerge(\n                queryTarget,\n                'itemStyle.emphasis'\n            );\n            emphasis.color = this.getItemStyleColor(emphasis.color, seriesIndex, dataIndex, data);\n            \n            var nlineStyle = normal.lineStyle;\n            var elineStyle = emphasis.lineStyle;\n            \n            var nBorderWidth = nlineStyle.width;\n            if (nBorderWidth == null) {\n                nBorderWidth = normal.borderWidth;\n            }\n            var eBorderWidth = elineStyle.width;\n            if (eBorderWidth == null) {\n                eBorderWidth = emphasis.borderWidth != null \n                               ? emphasis.borderWidth\n                               : (nBorderWidth + 2);\n            }\n            var smoothness = this.deepQuery(queryTarget, 'smoothness');\n            if (! this.deepQuery(queryTarget, 'smooth')) {\n                smoothness = 0;\n            }\n\n            var ShapeCtor = bundling ? PolylineShape : MarkLineShape;\n            var itemShape = new ShapeCtor({\n                style: {\n                    symbol: symbol,\n                    symbolSize: symbolSize,\n                    symbolRotate: symbolRotate,\n                    // data: [data[0].name,data[1].name],\n                    brushType: 'both',\n                    lineType: nlineStyle.type,\n                    shadowColor: nlineStyle.shadowColor\n                                 || nlineStyle.color\n                                 || normal.borderColor\n                                 || normal.color\n                                 || color,\n                    shadowBlur: nlineStyle.shadowBlur,\n                    shadowOffsetX: nlineStyle.shadowOffsetX,\n                    shadowOffsetY: nlineStyle.shadowOffsetY,\n                    color: normal.color || color,\n                    strokeColor: nlineStyle.color\n                                 || normal.borderColor\n                                 || normal.color\n                                 || color,\n                    lineWidth: nBorderWidth,\n                    symbolBorderColor: normal.borderColor\n                                       || normal.color\n                                       || color,\n                    symbolBorder: normal.borderWidth\n                },\n                highlightStyle: {\n                    shadowColor: elineStyle.shadowColor,\n                    shadowBlur: elineStyle.shadowBlur,\n                    shadowOffsetX: elineStyle.shadowOffsetX,\n                    shadowOffsetY: elineStyle.shadowOffsetY,\n                    color: emphasis.color|| normal.color || color,\n                    strokeColor: elineStyle.color\n                                 || nlineStyle.color\n                                 || emphasis.borderColor \n                                 || normal.borderColor\n                                 || emphasis.color \n                                 || normal.color\n                                 || color,\n                    lineWidth: eBorderWidth,\n                    symbolBorderColor: emphasis.borderColor\n                                       || normal.borderColor\n                                       || emphasis.color\n                                       || normal.color\n                                       || color,\n                    symbolBorder: emphasis.borderWidth == null\n                                  ? (normal.borderWidth + 2)\n                                  : (emphasis.borderWidth)\n                },\n                clickable: this.deepQuery(queryTarget, 'clickable')\n            });\n            var shapeStyle = itemShape.style;\n            if (bundling) {\n                shapeStyle.pointList = points;\n                shapeStyle.smooth = smoothness;\n            }\n            else {\n                shapeStyle.xStart = points[0][0];\n                shapeStyle.yStart = points[0][1];\n                shapeStyle.xEnd = points[1][0];\n                shapeStyle.yEnd = points[1][1];\n                shapeStyle.curveness = smoothness;\n                itemShape.updatePoints(itemShape.style);\n            }\n            \n            itemShape = this.addLabel(\n                itemShape, \n                mlOption, \n                data[0], \n                data[0].name + ' : ' + data[1].name\n            );\n\n            return itemShape;\n        },\n        \n        /**\n         * 大规模标注构造器 \n         */\n        getLargeMarkPointShape: function(seriesIndex, mpOption) {\n            var serie = this.series[seriesIndex];\n            var component = this.component;\n            var data = mpOption.data;\n            var itemShape;\n            \n            var dataRange = component.dataRange;\n            var legend = component.legend;\n            var color;\n            var value;\n            var queryTarget = [data[0], mpOption];\n            var nColor;\n            var eColor;\n            var effect;\n            \n            // 图例\n            if (legend) {\n                color = legend.getColor(serie.name);\n            }\n            // 值域\n            if (dataRange) {\n                value = data[0].value != null ? data[0].value : '';\n                color = isNaN(value) ? color : dataRange.getColor(value);\n                \n                nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\n                         || color;\n                eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\n                         || nColor;\n                // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\n                if (nColor == null && eColor == null) {\n                    return;\n                }\n            }\n            color = this.deepMerge(queryTarget, 'itemStyle.normal').color \n                    || color;\n            \n            var symbol = this.deepQuery(queryTarget, 'symbol') || 'circle';\n            symbol = symbol.replace('empty', '').replace(/\\d/g, '');\n            \n            effect = this.deepMerge(\n                [data[0], mpOption],\n                'effect'\n            );\n            \n            var devicePixelRatio = window.devicePixelRatio || 1;\n            \n            //console.log(data)\n            itemShape = new SymbolShape({\n                style: {\n                    pointList: data,\n                    color: color,\n                    strokeColor: color,\n                    shadowColor: effect.shadowColor || color,\n                    shadowBlur: (effect.shadowBlur != null ? effect.shadowBlur : 8)\n                                 * devicePixelRatio,\n                    size: this.deepQuery(queryTarget, 'symbolSize'),\n                    iconType: symbol,\n                    brushType: 'fill',\n                    lineWidth:1\n                },\n                draggable: false,\n                hoverable: false\n            });\n            \n            if (effect.show) {\n                itemShape.effect = effect;\n            }\n            \n            return itemShape;\n        },\n        \n        backupShapeList: function () {\n            if (this.shapeList && this.shapeList.length > 0) {\n                this.lastShapeList = this.shapeList;\n                this.shapeList = [];\n            }\n            else {\n                this.lastShapeList = [];\n            }\n        },\n        \n        addShapeList: function () {\n            var maxLenth = this.option.animationThreshold / (this.canvasSupported ? 2 : 4);\n            var lastShapeList = this.lastShapeList;\n            var shapeList = this.shapeList;\n            var isUpdate = lastShapeList.length > 0;\n            var duration = isUpdate\n                           ? this.query(this.option, 'animationDurationUpdate')\n                           : this.query(this.option, 'animationDuration');\n            var easing = this.query(this.option, 'animationEasing');\n            var delay;\n            var key;\n            var oldMap = {};\n            var newMap = {};\n            if (this.option.animation \n                && !this.option.renderAsImage \n                && shapeList.length < maxLenth\n                && !this.motionlessOnce\n            ) {\n                // 通过已有的shape做动画过渡\n                for (var i = 0, l = lastShapeList.length; i < l; i++) {\n                    key = this._getAnimationKey(lastShapeList[i]);\n                    if (key.match('undefined')) {\n                        this.zr.delShape(lastShapeList[i].id);  // 非关键元素直接删除\n                    }\n                    else {\n                        key += lastShapeList[i].type;\n                        // https://github.com/ecomfe/echarts/issues/1219#issuecomment-71987602\n                        // 响应中断可能产生的重复元素\n                        if (oldMap[key]) {\n                            this.zr.delShape(lastShapeList[i].id);\n                        }\n                        else {\n                            oldMap[key] = lastShapeList[i];\n                        }\n                    }\n                }\n                for (var i = 0, l = shapeList.length; i < l; i++) {\n                    key = this._getAnimationKey(shapeList[i]);\n                    if (key.match('undefined')) {\n                        this.zr.addShape(shapeList[i]);         // 非关键元素直接添加\n                    }\n                    else {\n                        key += shapeList[i].type;\n                        newMap[key] = shapeList[i];\n                    }\n                }\n                \n                for (key in oldMap) {\n                    if (!newMap[key]) {\n                        // 新的没有 删除\n                        this.zr.delShape(oldMap[key].id);\n                    }\n                }\n                for (key in newMap) {\n                    if (oldMap[key]) {\n                        // 新旧都有 动画过渡\n                        this.zr.delShape(oldMap[key].id);\n                        this._animateMod(\n                            oldMap[key], newMap[key], duration, easing, 0, isUpdate\n                        );\n                    }\n                    else {\n                        // 新有旧没有  添加并动画过渡\n                        //this._animateAdd(newMap[key], duration, easing);\n                        delay = (this.type == ecConfig.CHART_TYPE_LINE\n                                || this.type == ecConfig.CHART_TYPE_RADAR)\n                                && key.indexOf('icon') !== 0\n                                ? duration / 2\n                                : 0;\n                        this._animateMod(\n                            false, newMap[key], duration, easing, delay, isUpdate\n                        );\n                    }\n                }\n                this.zr.refresh();\n                this.animationEffect();\n            }\n            else {\n                this.motionlessOnce = false;\n                // clear old\n                this.zr.delShape(lastShapeList);\n                // 直接添加\n                for (var i = 0, l = shapeList.length; i < l; i++) {\n                    this.zr.addShape(shapeList[i]);\n                }\n            }\n        },\n        \n        _getAnimationKey: function(shape) {\n            if (this.type != ecConfig.CHART_TYPE_MAP\n                && this.type != ecConfig.CHART_TYPE_TREEMAP\n                && this.type != ecConfig.CHART_TYPE_VENN\n                && this.type != ecConfig.CHART_TYPE_TREE\n                ) {\n                return ecData.get(shape, 'seriesIndex') + '_'\n                       + ecData.get(shape, 'dataIndex')\n                       + (shape._mark ? shape._mark : '')\n                       + (this.type === ecConfig.CHART_TYPE_RADAR \n                          ? ecData.get(shape, 'special') : '');\n            }\n            else {\n                return ecData.get(shape, 'seriesIndex') + '_'\n                       + ecData.get(shape, 'dataIndex')\n                       + (shape._mark ? shape._mark : 'undefined');\n            }\n        },\n        \n        /**\n         * 动画过渡 \n         */\n        _animateMod: function (oldShape, newShape, duration, easing, delay, isUpdate) {\n            switch (newShape.type) {\n                case 'polyline' :\n                case 'half-smooth-polygon' :\n                    ecAnimation.pointList(this.zr, oldShape, newShape, duration, easing);\n                    break;\n                case 'rectangle' :\n                    ecAnimation.rectangle(this.zr, oldShape, newShape, duration, easing);\n                    break;\n                case 'image' :\n                case 'icon' :\n                    ecAnimation.icon(this.zr, oldShape, newShape, duration, easing, delay);\n                    break;\n                case 'candle' :\n                    if (!isUpdate) {\n                        ecAnimation.candle(this.zr, oldShape, newShape, duration, easing);\n                    }\n                    else {\n                        this.zr.addShape(newShape);\n                    }\n                    break;\n                case 'ring' :\n                case 'sector' :\n                case 'circle' :\n                    if (!isUpdate) {\n                        // 进入动画，加旋转\n                        ecAnimation.ring(\n                            this.zr,\n                            oldShape,\n                            newShape, \n                            duration + ((ecData.get(newShape, 'dataIndex') || 0) % 20 * 100), \n                            easing\n                        );\n                    }\n                    else if (newShape.type === 'sector') {\n                        ecAnimation.sector(this.zr, oldShape, newShape, duration, easing);\n                    }\n                    else {\n                        this.zr.addShape(newShape);\n                    }\n                    break;\n                case 'text' :\n                    ecAnimation.text(this.zr, oldShape, newShape, duration, easing);\n                    break;\n                case 'polygon' :\n                    if (!isUpdate) {\n                        ecAnimation.polygon(this.zr, oldShape, newShape, duration, easing);\n                    }\n                    else {\n                        ecAnimation.pointList(this.zr, oldShape, newShape, duration, easing);\n                    }\n                    break;\n                case 'ribbon' :\n                    ecAnimation.ribbon(this.zr, oldShape, newShape, duration, easing);\n                    break;\n                case 'gauge-pointer' :\n                    ecAnimation.gaugePointer(this.zr, oldShape, newShape, duration, easing);\n                    break;\n                case 'mark-line' :\n                    ecAnimation.markline(this.zr, oldShape, newShape, duration, easing);\n                    break;\n                case 'bezier-curve' :\n                case 'line' :\n                    ecAnimation.line(this.zr, oldShape, newShape, duration, easing);\n                    break;\n                default :\n                    this.zr.addShape(newShape);\n                    break;\n            }\n        },\n        \n        /**\n         * 标注动画\n         * @param {number} duration 时长\n         * @param {string=} easing 缓动效果\n         * @param {Array=} shapeList 指定特效对象，不指定默认使用this.shapeList\n         */\n        animationMark: function (duration , easing, shapeList) {\n            var shapeList = shapeList || this.shapeList;\n            for (var i = 0, l = shapeList.length; i < l; i++) {\n                if (!shapeList[i]._mark) {\n                    continue;\n                }\n                this._animateMod(false, shapeList[i], duration, easing, 0, true);\n            }\n            this.animationEffect(shapeList);\n        },\n\n        /**\n         * 特效动画\n         * @param {Array=} shapeList 指定特效对象，不知道默认使用this.shapeList\n         */\n        animationEffect: function (shapeList) {\n            !shapeList && this.clearEffectShape();\n            shapeList = shapeList || this.shapeList;\n            if (shapeList == null) {\n                return;\n            }\n            var zlevel = ecConfig.EFFECT_ZLEVEL;\n            if (this.canvasSupported) {\n                this.zr.modLayer(\n                    zlevel,\n                    {\n                        motionBlur: true,\n                        lastFrameAlpha: 0.95\n                    }\n                );\n            }\n            var shape;\n            for (var i = 0, l = shapeList.length; i < l; i++) {\n                shape = shapeList[i];\n                if (!(shape._mark && shape.effect && shape.effect.show && ecEffect[shape._mark])) {\n                    continue;\n                }\n                ecEffect[shape._mark](this.zr, this.effectList, shape, zlevel);\n                this.effectList[this.effectList.length - 1]._mark = shape._mark;\n            }\n        },\n        \n        clearEffectShape: function (clearMotionBlur) {\n            var effectList = this.effectList;\n            if (this.zr && effectList && effectList.length > 0) {\n                clearMotionBlur && this.zr.modLayer(\n                    ecConfig.EFFECT_ZLEVEL, \n                    { motionBlur: false }\n                );\n                this.zr.delShape(effectList);\n\n                // 手动清除不会被 zr 自动清除的动画控制器\n                for (var i = 0; i < effectList.length; i++) {\n                    if (effectList[i].effectAnimator) {\n                        effectList[i].effectAnimator.stop();\n                    }\n                }\n            }\n            this.effectList = [];\n        },\n        \n        /**\n         * 动态标线标注添加\n         * @param {number} seriesIndex 系列索引\n         * @param {Object} markData 标线标注对象，支持多个\n         * @param {string} markType 标线标注类型\n         */\n        addMark: function (seriesIndex, markData, markType) {\n            var serie = this.series[seriesIndex];\n            if (this.selectedMap[serie.name]) {\n                var duration = this.query(this.option, 'animationDurationUpdate');\n                var easing = this.query(this.option, 'animationEasing');\n                // 备份，复用_buildMarkX\n                var oriMarkData = serie[markType].data;\n                var lastLength = this.shapeList.length;\n                \n                serie[markType].data = markData.data;\n                this['_build' + markType.replace('m', 'M')](seriesIndex);\n                if (this.option.animation && !this.option.renderAsImage) {\n                    // animationMark就会addShape\n                    this.animationMark(duration, easing, this.shapeList.slice(lastLength));\n                }\n                else {\n                    for (var i = lastLength, l = this.shapeList.length; i < l; i++) {\n                        this.zr.addShape(this.shapeList[i]);\n                    }\n                    this.zr.refreshNextFrame();\n                }\n                // 还原，复用_buildMarkX\n                serie[markType].data = oriMarkData;\n            }\n        },\n        \n        /**\n         * 动态标线标注删除\n         * @param {number} seriesIndex 系列索引\n         * @param {string} markName 标线标注名称\n         * @param {string} markType 标线标注类型\n         */\n        delMark: function (seriesIndex, markName, markType) {\n            markType = markType.replace('mark', '').replace('large', '').toLowerCase();\n            var serie = this.series[seriesIndex];\n            if (this.selectedMap[serie.name]) {\n                var needRefresh = false;\n                var shapeList = [this.shapeList, this.effectList];\n                var len = 2;\n                while(len--) {\n                    for (var i = 0, l = shapeList[len].length; i < l; i++) {\n                        if (shapeList[len][i]._mark == markType\n                            && ecData.get(shapeList[len][i], 'seriesIndex') == seriesIndex\n                            && ecData.get(shapeList[len][i], 'name') == markName\n                        ) {\n                            this.zr.delShape(shapeList[len][i].id);\n                            shapeList[len].splice(i, 1);\n                            needRefresh = true;\n                            break;\n                        }\n                    }\n                }\n                \n                needRefresh && this.zr.refreshNextFrame();\n            }\n        }\n    };\n\n    zrUtil.inherits(Base, ComponentBase);\n\n    return Base;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/chart/base.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * echarts扩展zrender shape\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * shape类：icon\n * 可配图形属性：\n   {\n       // 基础属性\n       shape  : 'icon',       // 必须，shape类标识，需要显式指定\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\n       invisible : {boolean},   // 默认为false，是否可见\n\n       // 样式属性，默认状态样式样式属性\n       style  : {\n           x             : {number},  // 必须，左上角横坐标\n           y             : {number},  // 必须，左上角纵坐标\n           width         : {number},  // 必须，宽度\n           height        : {number},  // 必须，高度\n           iconType      : {string},  // 必须，icon类型\n       },\n\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\n       highlightStyle : {\n           // 同style\n       }\n\n       // 交互属性，详见shape.Base\n\n       // 事件属性，详见shape.Base\n   }\n */\ndefine(function (require) {\n    var zrUtil = require('zrender/tool/util');\n    \n    function _iconMark(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n        ctx.moveTo(x,                 y + style.height);\n        ctx.lineTo(x + 5 * dx,        y + 14 * dy);\n        ctx.lineTo(x + style.width,   y + 3 * dy);\n        ctx.lineTo(x + 13 * dx,       y);\n        ctx.lineTo(x + 2 * dx,        y + 11 * dy);\n        ctx.lineTo(x,                 y + style.height);\n\n        ctx.moveTo(x + 6 * dx,        y + 10 * dy);\n        ctx.lineTo(x + 14 * dx,       y + 2 * dy);\n\n        ctx.moveTo(x + 10 * dx,       y + 13 * dy);\n        ctx.lineTo(x + style.width,   y + 13 * dy);\n\n        ctx.moveTo(x + 13 * dx,       y + 10 * dy);\n        ctx.lineTo(x + 13 * dx,       y + style.height);\n    }\n\n    function _iconMarkUndo(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n        ctx.moveTo(x,                 y + style.height);\n        ctx.lineTo(x + 5 * dx,        y + 14 * dy);\n        ctx.lineTo(x + style.width,   y + 3 * dy);\n        ctx.lineTo(x + 13 * dx,       y);\n        ctx.lineTo(x + 2 * dx,        y + 11 * dy);\n        ctx.lineTo(x,                 y + style.height);\n\n        ctx.moveTo(x + 6 * dx,        y + 10 * dy);\n        ctx.lineTo(x + 14 * dx,       y + 2 * dy);\n\n        ctx.moveTo(x + 10 * dx,       y + 13 * dy);\n        ctx.lineTo(x + style.width,   y + 13 * dy);\n    }\n\n    function _iconMarkClear(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n\n        ctx.moveTo(x + 4 * dx,        y + 15 * dy);\n        ctx.lineTo(x + 9 * dx,        y + 13 * dy);\n        ctx.lineTo(x + 14 * dx,       y + 8 * dy);\n        ctx.lineTo(x + 11 * dx,       y + 5 * dy);\n        ctx.lineTo(x + 6 * dx,        y + 10 * dy);\n        ctx.lineTo(x + 4 * dx,        y + 15 * dy);\n\n        ctx.moveTo(x + 5 * dx,        y);\n        ctx.lineTo(x + 11 * dx,       y);\n        ctx.moveTo(x + 5 * dx,        y + dy);\n        ctx.lineTo(x + 11 * dx,       y + dy);\n        ctx.moveTo(x,                 y + 2 * dy);\n        ctx.lineTo(x + style.width,   y + 2 * dy);\n\n        ctx.moveTo(x,                 y + 5 * dy);\n        ctx.lineTo(x + 3 * dx,        y + style.height);\n        ctx.lineTo(x + 13 * dx,       y + style.height);\n        ctx.lineTo(x + style.width,   y + 5 * dy);\n    }\n\n    function _iconDataZoom(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n\n        ctx.moveTo(x,               y + 3 * dy);\n        ctx.lineTo(x + 6 * dx,      y + 3 * dy);\n        \n        ctx.moveTo(x + 3 * dx,      y);\n        ctx.lineTo(x + 3 * dx,      y + 6 * dy);\n\n        ctx.moveTo(x + 3 * dx,      y + 8 * dy);\n        ctx.lineTo(x + 3 * dx,      y + style.height);\n        ctx.lineTo(x + style.width, y + style.height);\n        ctx.lineTo(x + style.width, y + 3 * dy);\n        ctx.lineTo(x + 8 * dx,      y + 3 * dy);\n    }\n    \n    function _iconDataZoomReset(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n\n        ctx.moveTo(x + 6 * dx,      y);\n        ctx.lineTo(x + 2 * dx,      y + 3 * dy);\n        ctx.lineTo(x + 6 * dx,      y + 6 * dy);\n        \n        ctx.moveTo(x + 2 * dx,      y + 3 * dy);\n        ctx.lineTo(x + 14 * dx,     y + 3 * dy);\n        ctx.lineTo(x + 14 * dx,     y + 11 * dy);\n        \n        ctx.moveTo(x + 2 * dx,      y + 5 * dy);\n        ctx.lineTo(x + 2 * dx,      y + 13 * dy);\n        ctx.lineTo(x + 14 * dx,     y + 13 * dy);\n        \n        ctx.moveTo(x + 10 * dx,     y + 10 * dy);\n        ctx.lineTo(x + 14 * dx,     y + 13 * dy);\n        ctx.lineTo(x + 10 * dx,     y + style.height);\n    }\n    \n    function _iconRestore(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n        var r = style.width / 2;\n        \n        ctx.lineWidth = 1.5;\n\n        ctx.arc(x + r, y + r, r - dx, 0, Math.PI * 2 / 3);\n        ctx.moveTo(x + 3 * dx,        y + style.height);\n        ctx.lineTo(x + 0 * dx,        y + 12 * dy);\n        ctx.lineTo(x + 5 * dx,        y + 11 * dy);\n\n        ctx.moveTo(x, y + 8 * dy);\n        ctx.arc(x + r, y + r, r - dx, Math.PI, Math.PI * 5 / 3);\n        ctx.moveTo(x + 13 * dx,       y);\n        ctx.lineTo(x + style.width,   y + 4 * dy);\n        ctx.lineTo(x + 11 * dx,       y + 5 * dy);\n    }\n\n    function _iconLineChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n\n        ctx.moveTo(x, y);\n        ctx.lineTo(x, y + style.height);\n        ctx.lineTo(x + style.width, y + style.height);\n\n        ctx.moveTo(x + 2 * dx,    y + 14 * dy);\n        ctx.lineTo(x + 7 * dx,    y + 6 * dy);\n        ctx.lineTo(x + 11 * dx,   y + 11 * dy);\n        ctx.lineTo(x + 15 * dx,   y + 2 * dy);\n    }\n\n    function _iconBarChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n\n        ctx.moveTo(x, y);\n        ctx.lineTo(x, y + style.height);\n        ctx.lineTo(x + style.width, y + style.height);\n\n        ctx.moveTo(x + 3 * dx,        y + 14 * dy);\n        ctx.lineTo(x + 3 * dx,        y + 6 * dy);\n        ctx.lineTo(x + 4 * dx,        y + 6 * dy);\n        ctx.lineTo(x + 4 * dx,        y + 14 * dy);\n        ctx.moveTo(x + 7 * dx,        y + 14 * dy);\n        ctx.lineTo(x + 7 * dx,        y + 2 * dy);\n        ctx.lineTo(x + 8 * dx,        y + 2 * dy);\n        ctx.lineTo(x + 8 * dx,        y + 14 * dy);\n        ctx.moveTo(x + 11 * dx,       y + 14 * dy);\n        ctx.lineTo(x + 11 * dx,       y + 9 * dy);\n        ctx.lineTo(x + 12 * dx,       y + 9 * dy);\n        ctx.lineTo(x + 12 * dx,       y + 14 * dy);\n    }\n    \n    function _iconPieChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var width = style.width - 2;\n        var height = style.height - 2;\n        var r = Math.min(width, height) / 2;\n        y += 2;\n        ctx.moveTo(x + r + 3, y + r - 3);\n        ctx.arc(x + r + 3, y + r - 3, r - 1, 0, -Math.PI / 2, true);\n        ctx.lineTo(x + r + 3, y + r - 3);\n      \n        ctx.moveTo(x + r, y);\n        ctx.lineTo(x + r, y + r);\n        ctx.arc(x + r, y + r, r, -Math.PI / 2, Math.PI * 2, true);\n        ctx.lineTo(x + r, y + r);\n        ctx.lineWidth = 1.5;\n    }\n    \n    function _iconFunnelChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n        y -= dy;\n        ctx.moveTo(x + 1 * dx,      y + 2 * dy);\n        ctx.lineTo(x + 15 * dx,     y + 2 * dy);\n        ctx.lineTo(x + 14 * dx,     y + 3 * dy);\n        ctx.lineTo(x + 2 * dx,      y + 3 * dy);\n        \n        ctx.moveTo(x + 3 * dx,      y + 6 * dy);\n        ctx.lineTo(x + 13 * dx,     y + 6 * dy);\n        ctx.lineTo(x + 12 * dx,     y + 7 * dy);\n        ctx.lineTo(x + 4 * dx,      y + 7 * dy);\n        \n        ctx.moveTo(x + 5 * dx,      y + 10 * dy);\n        ctx.lineTo(x + 11 * dx,      y + 10 * dy);\n        ctx.lineTo(x + 10 * dx,      y + 11 * dy);\n        ctx.lineTo(x + 6 * dx,      y + 11 * dy);\n        \n        ctx.moveTo(x + 7 * dx,      y + 14 * dy);\n        ctx.lineTo(x + 9 * dx,      y + 14 * dy);\n        ctx.lineTo(x + 8 * dx,      y + 15 * dy);\n        ctx.lineTo(x + 7 * dx,      y + 15 * dy);\n    }\n    \n    function _iconForceChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var width = style.width;\n        var height = style.height;\n        var dx = width / 16;\n        var dy = height / 16;\n        var r = Math.min(dx, dy) * 2;\n\n        ctx.moveTo(x + dx + r, y + dy + r);\n        ctx.arc(x + dx, y + dy, r, Math.PI / 4, Math.PI * 3);\n        \n        ctx.lineTo(x + 7 * dx - r, y + 6 * dy - r);\n        ctx.arc(x + 7 * dx, y + 6 * dy, r, Math.PI / 4 * 5, Math.PI * 4);\n        ctx.arc(x + 7 * dx, y + 6 * dy, r / 2, Math.PI / 4 * 5, Math.PI * 4);\n        \n        ctx.moveTo(x + 7 * dx - r / 2, y + 6 * dy + r);\n        ctx.lineTo(x + dx + r, y + 14 * dy - r);\n        ctx.arc(x + dx, y + 14 * dy, r, -Math.PI / 4, Math.PI * 2);\n        \n        ctx.moveTo(x + 7 * dx + r / 2, y + 6 * dy);\n        ctx.lineTo(x + 14 * dx - r, y + 10 * dy - r / 2);\n        ctx.moveTo(x + 16 * dx, y + 10 * dy);\n        ctx.arc(x + 14 * dx, y + 10 * dy, r, 0, Math.PI * 3);\n        ctx.lineWidth = 1.5;\n    }\n    \n    function _iconChordChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var width = style.width;\n        var height = style.height;\n        var r = Math.min(width, height) / 2;\n\n        ctx.moveTo(x + width, y + height / 2);\n        ctx.arc(x + r, y + r, r, 0, Math.PI * 2);\n        \n        ctx.arc(x + r, y, r, Math.PI / 4, Math.PI / 5 * 4);\n        ctx.arc(x, y + r, r, -Math.PI / 3, Math.PI / 3);\n        ctx.arc(x + width, y + height, r, Math.PI, Math.PI / 2 * 3);\n        ctx.lineWidth = 1.5;\n    }\n\n    function _iconStackChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var width = style.width;\n        var height = style.height;\n        var dy = Math.round(height / 3);\n        var delta = Math.round((dy - 2) / 2);\n        var len = 3;\n        while (len--) {\n            ctx.rect(x, y + dy * len + delta, width, 2);\n        }\n    }\n    \n    function _iconTiledChart(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var width = style.width;\n        var height = style.height;\n        var dx = Math.round(width / 3);\n        var delta = Math.round((dx - 2) / 2);\n        var len = 3;\n        while (len--) {\n            ctx.rect(x + dx * len + delta, y, 2, height);\n        }\n    }\n    \n    function _iconDataView(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n\n        ctx.moveTo(x + dx, y);\n        ctx.lineTo(x + dx, y + style.height);\n        ctx.lineTo(x + 15 * dx, y + style.height);\n        ctx.lineTo(x + 15 * dx, y);\n        ctx.lineTo(x + dx, y);\n\n        ctx.moveTo(x + 3 * dx, y + 3 * dx);\n        ctx.lineTo(x + 13 * dx, y + 3 * dx);\n\n        ctx.moveTo(x + 3 * dx, y + 6 * dx);\n        ctx.lineTo(x + 13 * dx, y + 6 * dx);\n\n        ctx.moveTo(x + 3 * dx, y + 9 * dx);\n        ctx.lineTo(x + 13 * dx, y + 9 * dx);\n\n        ctx.moveTo(x + 3 * dx, y + 12 * dx);\n        ctx.lineTo(x + 9 * dx, y + 12 * dx);\n    }\n    \n    function _iconSave(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        var dy = style.height / 16;\n\n        ctx.moveTo(x, y);\n        ctx.lineTo(x, y + style.height);\n        ctx.lineTo(x + style.width, y + style.height);\n        ctx.lineTo(x + style.width, y);\n        ctx.lineTo(x, y);\n\n        ctx.moveTo(x + 4 * dx,    y);\n        ctx.lineTo(x + 4 * dx,    y + 8 * dy);\n        ctx.lineTo(x + 12 * dx,   y + 8 * dy);\n        ctx.lineTo(x + 12 * dx,   y);\n        \n        ctx.moveTo(x + 6 * dx,    y + 11 * dy);\n        ctx.lineTo(x + 6 * dx,    y + 13 * dy);\n        ctx.lineTo(x + 10 * dx,   y + 13 * dy);\n        ctx.lineTo(x + 10 * dx,   y + 11 * dy);\n        ctx.lineTo(x + 6 * dx,    y + 11 * dy);\n    }\n    \n    function _iconCross(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var width = style.width;\n        var height = style.height;\n        ctx.moveTo(x, y + height / 2);\n        ctx.lineTo(x + width, y + height / 2);\n        \n        ctx.moveTo(x + width / 2, y);\n        ctx.lineTo(x + width / 2, y + height);\n    }\n    \n    function _iconCircle(ctx, style) {\n        var width = style.width / 2;\n        var height = style.height / 2;\n        var r = Math.min(width, height);\n        ctx.moveTo(\n            style.x + width + r, \n            style.y + height\n        );\n        ctx.arc(\n            style.x + width, \n            style.y + height, \n            r,\n            0, \n            Math.PI * 2\n        );\n        ctx.closePath();\n    }\n    \n    function _iconRectangle(ctx, style) {\n        ctx.rect(style.x, style.y, style.width, style.height);\n        ctx.closePath();\n    }\n    \n    function _iconTriangle(ctx, style) {\n        var width = style.width / 2;\n        var height = style.height / 2;\n        var x = style.x + width;\n        var y = style.y + height;\n        var symbolSize = Math.min(width, height);\n        ctx.moveTo(x, y - symbolSize);\n        ctx.lineTo(x + symbolSize, y + symbolSize);\n        ctx.lineTo(x - symbolSize, y + symbolSize);\n        ctx.lineTo(x, y - symbolSize);\n        ctx.closePath();\n    }\n    \n    function _iconDiamond(ctx, style) {\n        var width = style.width / 2;\n        var height = style.height / 2;\n        var x = style.x + width;\n        var y = style.y + height;\n        var symbolSize = Math.min(width, height);\n        ctx.moveTo(x, y - symbolSize);\n        ctx.lineTo(x + symbolSize, y);\n        ctx.lineTo(x, y + symbolSize);\n        ctx.lineTo(x - symbolSize, y);\n        ctx.lineTo(x, y - symbolSize);\n        ctx.closePath();\n    }\n    \n    function _iconArrow(ctx, style) {\n        var x = style.x;\n        var y = style.y;\n        var dx = style.width / 16;\n        ctx.moveTo(x + 8 * dx,  y);\n        ctx.lineTo(x + dx,      y + style.height);\n        ctx.lineTo(x + 8 * dx,  y + style.height / 4 * 3);\n        ctx.lineTo(x + 15 * dx, y + style.height);\n        ctx.lineTo(x + 8 * dx,  y);\n        ctx.closePath();\n    }\n    \n    function _iconStar(ctx, style) {\n        var StarShape = require('zrender/shape/Star');\n        var width = style.width / 2;\n        var height = style.height / 2;\n        StarShape.prototype.buildPath(ctx, {\n            x : style.x + width,\n            y : style.y + height,\n            r : Math.min(width, height),\n            n : style.n || 5\n        });\n    }\n    \n    function _iconHeart(ctx, style) {\n        var HeartShape = require('zrender/shape/Heart');\n        HeartShape.prototype.buildPath(ctx, {\n            x : style.x + style.width / 2,\n            y : style.y + style.height * 0.2,\n            a : style.width / 2,\n            b : style.height * 0.8\n        });\n    }\n    \n    function _iconDroplet(ctx, style) {\n        var DropletShape = require('zrender/shape/Droplet');\n        DropletShape.prototype.buildPath(ctx, {\n            x : style.x + style.width * 0.5,\n            y : style.y + style.height * 0.5,\n            a : style.width * 0.5,\n            b : style.height * 0.8\n        });\n    }\n    \n    function _iconPin(ctx, style) {\n        var x = style.x;\n        var y = style.y - style.height / 2 * 1.5;\n        var width = style.width / 2;\n        var height = style.height / 2;\n        var r = Math.min(width, height);\n        ctx.arc(\n            x + width, \n            y + height, \n            r,\n            Math.PI / 5 * 4, \n            Math.PI / 5\n        );\n        ctx.lineTo(x + width, y + height + r * 1.5);\n        ctx.closePath();\n    }\n    \n    function _iconImage(ctx, style, refreshNextFrame) {\n        var ImageShape = require('zrender/shape/Image');\n        this._imageShape = this._imageShape || new ImageShape({\n            style: {}\n        });\n        for (var name in style) {\n            this._imageShape.style[name] = style[name];\n        }\n        this._imageShape.brush(ctx, false, refreshNextFrame);\n    }\n    \n    var Base = require('zrender/shape/Base');\n    \n    function Icon(options) {\n        Base.call(this, options);\n    }\n\n    Icon.prototype =  {\n        type : 'icon',\n        iconLibrary : {\n            mark : _iconMark,\n            markUndo : _iconMarkUndo,\n            markClear : _iconMarkClear,\n            dataZoom : _iconDataZoom,\n            dataZoomReset : _iconDataZoomReset,\n            restore : _iconRestore,\n            lineChart : _iconLineChart,\n            barChart : _iconBarChart,\n            pieChart : _iconPieChart,\n            funnelChart : _iconFunnelChart,\n            forceChart : _iconForceChart,\n            chordChart : _iconChordChart,\n            stackChart : _iconStackChart,\n            tiledChart : _iconTiledChart,\n            dataView : _iconDataView,\n            saveAsImage : _iconSave,\n            \n            cross : _iconCross,\n            circle : _iconCircle,\n            rectangle : _iconRectangle,\n            triangle : _iconTriangle,\n            diamond : _iconDiamond,\n            arrow : _iconArrow,\n            star : _iconStar,\n            heart : _iconHeart,\n            droplet : _iconDroplet,\n            pin : _iconPin,\n            image : _iconImage\n        },\n        brush: function (ctx, isHighlight, refreshNextFrame) {\n            var style = isHighlight ? this.highlightStyle : this.style;\n            style = style || {};\n            var iconType = style.iconType || this.style.iconType;\n            if (iconType === 'image') {\n                var ImageShape = require('zrender/shape/Image');\n                ImageShape.prototype.brush.call(this, ctx, isHighlight, refreshNextFrame);\n\n            } else {\n\n                var style = this.beforeBrush(ctx, isHighlight);\n\n                ctx.beginPath();\n                this.buildPath(ctx, style, refreshNextFrame);\n\n                switch (style.brushType) {\n                    /* jshint ignore:start */\n                    case 'both':\n                        ctx.fill();\n                    case 'stroke':\n                        style.lineWidth > 0 && ctx.stroke();\n                        break;\n                    /* jshint ignore:end */\n                    default:\n                        ctx.fill();\n                }\n                \n                this.drawText(ctx, style, this.style);\n\n                this.afterBrush(ctx);\n            }\n        },\n        /**\n         * 创建矩形路径\n         * @param {Context2D} ctx Canvas 2D上下文\n         * @param {Object} style 样式\n         */\n        buildPath : function (ctx, style, refreshNextFrame) {\n            if (this.iconLibrary[style.iconType]) {\n                this.iconLibrary[style.iconType].call(this, ctx, style, refreshNextFrame);\n            }\n            else {\n                ctx.moveTo(style.x, style.y);\n                ctx.lineTo(style.x + style.width, style.y);\n                ctx.lineTo(style.x + style.width, style.y + style.height);\n                ctx.lineTo(style.x, style.y + style.height);\n                ctx.lineTo(style.x, style.y);\n                ctx.closePath();\n            }\n\n            return;\n        },\n\n        /**\n         * 返回矩形区域，用于局部刷新和文字定位\n         * @param {Object} style\n         */\n        getRect : function (style) {\n            if (style.__rect) {\n                return style.__rect;\n            }\n            \n            // pin比较特殊，让尖端在目标x,y上\n            style.__rect = {\n                x : Math.round(style.x),\n                y : Math.round(style.y - (style.iconType == 'pin' \n                                         ? (style.height / 2 * 1.5) : 0)\n                               ),\n                width : style.width,\n                height : style.height * (\n                    style.iconType === 'pin' ? 1.25 : 1\n                )\n            };\n            \n            return style.__rect;\n        },\n\n        isCover : function (x, y) {\n            var originPos = this.transformCoordToLocal(x, y);\n            x = originPos[0];\n            y = originPos[1];\n\n            // 快速预判并保留判断矩形\n            var rect = this.style.__rect;\n            if (!rect) {\n                rect = this.style.__rect = this.getRect(this.style);\n            }\n            // 提高交互体验，太小的图形包围盒四向扩大4px\n            var delta = (rect.height < 8 || rect.width < 8 ) ? 4 : 0;\n            return x >= rect.x - delta\n                && x <= (rect.x + rect.width + delta)\n                && y >= rect.y - delta\n                && y <= (rect.y + rect.height + delta);\n        }\n    };\n\n    zrUtil.inherits(Icon, Base);\n    \n    return Icon;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/Icon.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\n * n角星（n>3）\n * @module zrender/shape/Star\n * @author sushuang (宿爽, sushuang0322@gmail.com)\n * @example\n *     var Star = require('zrender/shape/Star');\n *     var shape = new Star({\n *         style: {\n *             x: 200,\n *             y: 100,\n *             r: 150,\n *             n: 5,\n *             text: '五角星'\n *         }\n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IStarStyle\n * @property {number} x n角星外接圆心x坐标\n * @property {number} y n角星外接圆心y坐标\n * @property {number} r n角星外接圆半径\n * @property {number} [r0] n角星内部顶点（凹点）的外接圆半径。\n *                         如果不指定此参数，则自动计算：取相隔外部顶点连线的交点作内部顶点。\n * @property {number} n 指明几角星\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\n\ndefine(\n    function (require) {\n\n        var math = require('../tool/math');\n        var sin = math.sin;\n        var cos = math.cos;\n        var PI = Math.PI;\n\n        var Base = require('./Base');\n\n        /**\n         * @alias module:zrender/shape/Star\n         * @param {Object} options\n         * @constructor\n         * @extends module:zrender/shape/Base\n         */\n        var Star = function(options) {\n            Base.call(this, options);\n            /**\n             * n角星绘制样式\n             * @name module:zrender/shape/Star#style\n             * @type {module:zrender/shape/Star~IStarStyle}\n             */\n            /**\n             * n角星高亮绘制样式\n             * @name module:zrender/shape/Star#highlightStyle\n             * @type {module:zrender/shape/Star~IStarStyle}\n             */\n        };\n\n        Star.prototype = {\n            type: 'star',\n\n            /**\n             * 创建n角星（n>3）路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Star~IStarStyle} style\n             */\n            buildPath : function(ctx, style) {\n                var n = style.n;\n                if (!n || n < 2) {\n                    return;\n                }\n\n                var x = style.x;\n                var y = style.y;\n                var r = style.r;\n                var r0 = style.r0;\n\n                // 如果未指定内部顶点外接圆半径，则自动计算\n                if (r0 == null) {\n                    r0 = n > 4\n                        // 相隔的外部顶点的连线的交点，\n                        // 被取为内部交点，以此计算r0\n                        ? r * cos(2 * PI / n) / cos(PI / n)\n                        // 二三四角星的特殊处理\n                        : r / 3;\n                }\n\n                var dStep = PI / n;\n                var deg = -PI / 2;\n                var xStart = x + r * cos(deg);\n                var yStart = y + r * sin(deg);\n                deg += dStep;\n\n                // 记录边界点，用于判断inside\n                var pointList = style.pointList = [];\n                pointList.push([ xStart, yStart ]);\n                for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\n                    ri = i % 2 === 0 ? r0 : r;\n                    pointList.push([ x + ri * cos(deg), y + ri * sin(deg) ]);\n                    deg += dStep;\n                }\n                pointList.push([ xStart, yStart ]);\n\n                // 绘制\n                ctx.moveTo(pointList[0][0], pointList[0][1]);\n                for (var i = 0; i < pointList.length; i++) {\n                    ctx.lineTo(pointList[i][0], pointList[i][1]);\n                }\n                \n                ctx.closePath();\n\n                return;\n            },\n\n            /**\n             * 返回n角星包围盒矩形\n             * @param {module:zrender/shape/Star~IStarStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function(style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var lineWidth;\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\n                    lineWidth = style.lineWidth || 1;\n                }\n                else {\n                    lineWidth = 0;\n                }\n                style.__rect = {\n                    x : Math.round(style.x - style.r - lineWidth / 2),\n                    y : Math.round(style.y - style.r - lineWidth / 2),\n                    width : style.r * 2 + lineWidth,\n                    height : style.r * 2 + lineWidth\n                };\n                \n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(Star, Base);\n        return Star;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Star.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * zrender: 数学辅助类\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * sin：正弦函数\n * cos：余弦函数\n * degreeToRadian：角度转弧度\n * radianToDegree：弧度转角度\n */\ndefine(\n    function () {\n\n        var _radians = Math.PI / 180;\n\n        /**\n         * @param {number} angle 弧度（角度）参数\n         * @param {boolean} isDegrees angle参数是否为角度计算，默认为false，angle为以弧度计量的角度\n         */\n        function sin(angle, isDegrees) {\n            return Math.sin(isDegrees ? angle * _radians : angle);\n        }\n\n        /**\n         * @param {number} angle 弧度（角度）参数\n         * @param {boolean} isDegrees angle参数是否为角度计算，默认为false，angle为以弧度计量的角度\n         */\n        function cos(angle, isDegrees) {\n            return Math.cos(isDegrees ? angle * _radians : angle);\n        }\n\n        /**\n         * 角度转弧度\n         * @param {Object} angle\n         */\n        function degreeToRadian(angle) {\n            return angle * _radians;\n        }\n\n        /**\n         * 弧度转角度\n         * @param {Object} angle\n         */\n        function radianToDegree(angle) {\n            return angle / _radians;\n        }\n\n        return {\n            sin : sin,\n            cos : cos,\n            degreeToRadian : degreeToRadian,\n            radianToDegree : radianToDegree\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/math.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * @module zrender/shape/Heart\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @example\n *   var Heart = require('zrender/shape/Heart');\n *   var shape = new Heart({\n *       style: {\n *           x: 100,\n *           y: 100,\n *           a: 40,\n *           b: 40,\n *           brushType: 'both',\n *           color: 'blue',\n *           strokeColor: 'red',\n *           lineWidth: 3,\n *           text: 'Heart'\n *       }    \n *   });\n *   zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IHeartStyle\n * @property {number} x 心形内部尖端横坐标\n * @property {number} y 心形内部尖端纵坐标\n * @property {number} a 心形横宽（中轴线到水平边缘最宽处距离）\n * @property {number} b 心形纵高（内尖到外尖距离）\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        'use strict';\n        \n        var Base = require('./Base');\n        var PathProxy = require('./util/PathProxy');\n        var area = require('../tool/area');\n        \n        /**\n         * @alias module:zrender/shape/Heart\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Heart = function (options) {\n            Base.call(this, options);\n\n            this._pathProxy = new PathProxy();\n            /**\n             * 心形绘制样式\n             * @name module:zrender/shape/Heart#style\n             * @type {module:zrender/shape/Heart~IHeartStyle}\n             */\n            /**\n             * 心形高亮绘制样式\n             * @name module:zrender/shape/Heart#highlightStyle\n             * @type {module:zrender/shape/Heart~IHeartStyle}\n             */\n        };\n\n        Heart.prototype = {\n            type: 'heart',\n\n            /**\n             * 创建扇形路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Heart~IHeartStyle} style\n             */\n            buildPath : function (ctx, style) {\n                var path = this._pathProxy || new PathProxy();\n                path.begin(ctx);\n\n                path.moveTo(style.x, style.y);\n                path.bezierCurveTo(\n                    style.x + style.a / 2,\n                    style.y - style.b * 2 / 3,\n                    style.x + style.a * 2,\n                    style.y + style.b / 3,\n                    style.x,\n                    style.y + style.b\n                );\n                path.bezierCurveTo(\n                    style.x - style.a *  2,\n                    style.y + style.b / 3,\n                    style.x - style.a / 2,\n                    style.y - style.b * 2 / 3,\n                    style.x,\n                    style.y\n                );\n                path.closePath();\n                return;\n            },\n\n            /**\n             * 计算返回心形的包围盒矩形\n             * @param {module:zrender/shape/Heart~IHeartStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                if (!this._pathProxy.isEmpty()) {\n                    this.buildPath(null, style);\n                }\n                return this._pathProxy.fastBoundingRect();\n            },\n\n            isCover: function (x, y) {\n                var originPos = this.transformCoordToLocal(x, y);\n                x = originPos[0];\n                y = originPos[1];\n                \n                if (this.isCoverRect(x, y)) {\n                    return area.isInsidePath(\n                        this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, x, y\n                    );\n                }\n            }\n        };\n\n        require('../tool/util').inherits(Heart, Base);\n        return Heart;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Heart.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n * \n * @module zrender/shape/tool/PathProxy\n * @author pissang (http://www.github.com/pissang)\n * \n * @example\n *     var SomeShape = function() {\n *         this._pathProxy = new PathProxy();\n *         ...\n *     }\n *     SomeShape.prototype.buildPath = function(ctx, style) {\n *         this._pathProxy.begin(ctx);\n *             .moveTo(style.x, style.y);\n *             .lineTo(style.x1, style.y1);\n *         ...\n *             .closePath();\n *     },\n *     SomeShape.prototype.getRect = function(style) {\n *         if (!style._rect) {\n *             // 这里必须要在 buildPath 之后才能调用\n *             style._rect = this._pathProxy.fastBoundingRect();\n *         }\n *         return this.style._rect;\n *     },\n *     SomeShape.prototype.isCover = function(x, y) {\n *         var rect = this.getRect(this.style);\n *         if (x >= rect.x\n *             && x <= (rect.x + rect.width)\n *             && y >= rect.y\n *             && y <= (rect.y + rect.height)\n *         ) {\n *             return area.isInsidePath(\n *                 this._pathProxy.pathCommands, 0, 'fill', x, y\n *             );\n *         }\n *     }\n */\ndefine(function (require) {\n    \n    var vector = require('../../tool/vector');\n    // var computeBoundingBox = require('../../tool/computeBoundingBox');\n\n    var PathSegment = function(command, points) {\n        this.command = command;\n        this.points = points || null;\n    };\n\n    /**\n     * @alias module:zrender/shape/tool/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path描述的数组，用于`isInsidePath`的判断\n         * @type {Array.<Object>}\n         */\n        this.pathCommands = [];\n\n        this._ctx = null;\n\n        this._min = [];\n        this._max = [];\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype.fastBoundingRect = function () {\n        var min = this._min;\n        var max = this._max;\n        min[0] = min[1] = Infinity;\n        max[0] = max[1] = -Infinity;\n        for (var i = 0; i < this.pathCommands.length; i++) {\n            var seg = this.pathCommands[i];\n            var p = seg.points;\n            switch (seg.command) {\n                case 'M':\n                    vector.min(min, min, p);\n                    vector.max(max, max, p);\n                    break;\n                case 'L':\n                    vector.min(min, min, p);\n                    vector.max(max, max, p);\n                    break;\n                case 'C':\n                    for (var j = 0; j < 6; j += 2) {\n                        min[0] = Math.min(min[0], min[0], p[j]);\n                        min[1] = Math.min(min[1], min[1], p[j + 1]);\n                        max[0] = Math.max(max[0], max[0], p[j]);\n                        max[1] = Math.max(max[1], max[1], p[j + 1]);\n                    }\n                    break;\n                case 'Q':\n                    for (var j = 0; j < 4; j += 2) {\n                        min[0] = Math.min(min[0], min[0], p[j]);\n                        min[1] = Math.min(min[1], min[1], p[j + 1]);\n                        max[0] = Math.max(max[0], max[0], p[j]);\n                        max[1] = Math.max(max[1], max[1], p[j + 1]);\n                    }\n                    break;\n                case 'A':\n                    var cx = p[0];\n                    var cy = p[1];\n                    var rx = p[2];\n                    var ry = p[3];\n                    min[0] = Math.min(min[0], min[0], cx - rx);\n                    min[1] = Math.min(min[1], min[1], cy - ry);\n                    max[0] = Math.max(max[0], max[0], cx + rx);\n                    max[1] = Math.max(max[1], max[1], cy + ry);\n                    break;\n            }\n        }\n\n        return {\n            x: min[0],\n            y: min[1],\n            width: max[0] - min[0],\n            height: max[1] - min[1]\n        };\n    };\n\n    /**\n     * @param  {CanvasRenderingContext2D} ctx\n     * @return {module:zrender/shape/util/PathProxy}\n     */\n    PathProxy.prototype.begin = function (ctx) {\n        this._ctx = ctx || null;\n        // 清空pathCommands\n        this.pathCommands.length = 0;\n\n        return this;\n    };\n\n    /**\n     * @param  {number} x\n     * @param  {number} y\n     * @return {module:zrender/shape/util/PathProxy}\n     */\n    PathProxy.prototype.moveTo = function (x, y) {\n        this.pathCommands.push(new PathSegment('M', [x, y]));\n        if (this._ctx) {\n            this._ctx.moveTo(x, y);\n        }\n        return this;\n    };\n\n    /**\n     * @param  {number} x\n     * @param  {number} y\n     * @return {module:zrender/shape/util/PathProxy}\n     */\n    PathProxy.prototype.lineTo = function (x, y) {\n        this.pathCommands.push(new PathSegment('L', [x, y]));\n        if (this._ctx) {\n            this._ctx.lineTo(x, y);\n        }\n        return this;\n    };\n\n    /**\n     * @param  {number} x1\n     * @param  {number} y1\n     * @param  {number} x2\n     * @param  {number} y2\n     * @param  {number} x3\n     * @param  {number} y3\n     * @return {module:zrender/shape/util/PathProxy}\n     */\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n        this.pathCommands.push(new PathSegment('C', [x1, y1, x2, y2, x3, y3]));\n        if (this._ctx) {\n            this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n        }\n        return this;\n    };\n\n    /**\n     * @param  {number} x1\n     * @param  {number} y1\n     * @param  {number} x2\n     * @param  {number} y2\n     * @return {module:zrender/shape/util/PathProxy}\n     */\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n        this.pathCommands.push(new PathSegment('Q', [x1, y1, x2, y2]));\n        if (this._ctx) {\n            this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n        }\n        return this;\n    };\n\n    /**\n     * @param  {number} cx\n     * @param  {number} cy\n     * @param  {number} r\n     * @param  {number} startAngle\n     * @param  {number} endAngle\n     * @param  {boolean} anticlockwise\n     * @return {module:zrender/shape/util/PathProxy}\n     */\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        this.pathCommands.push(new PathSegment(\n            'A', [cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1]\n        ));\n        if (this._ctx) {\n            this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n        }\n        return this;\n    };\n\n    // TODO\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n        if (this._ctx) {\n            this._ctx.arcTo(x1, y1, x2, y2, radius);\n        }\n        return this;\n    };\n\n    // TODO\n    PathProxy.prototype.rect = function (x, y, w, h) {\n        if (this._ctx) {\n            this._ctx.rect(x, y, w, h);\n        }\n        return this;\n    };\n\n    /**\n     * @return {module:zrender/shape/util/PathProxy}\n     */\n    PathProxy.prototype.closePath = function () {\n        this.pathCommands.push(new PathSegment('z'));\n        if (this._ctx) {\n            this._ctx.closePath();\n        }\n        return this;\n    };\n\n    /**\n     * 是否没有Path命令\n     * @return {boolean}\n     */\n    PathProxy.prototype.isEmpty = function() {\n        return this.pathCommands.length === 0;\n    };\n\n    PathProxy.PathSegment = PathSegment;\n\n    return PathProxy;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/util/PathProxy.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * 水滴形状\n * @module zrender/shape/Droplet\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @example\n *   var Droplet = require('zrender/shape/Droplet');\n *   var shape = new Droplet({\n *       style: {\n *           x: 100,\n *           y: 100,\n *           a: 40,\n *           b: 40,\n *           brushType: 'both',\n *           color: 'blue',\n *           strokeColor: 'red',\n *           lineWidth: 3,\n *           text: 'Droplet'\n *       }    \n *   });\n *   zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IDropletStyle\n * @property {number} x 水滴中心x坐标\n * @property {number} y 水滴中心y坐标\n * @property {number} a 水滴横宽（中心到水平边缘最宽处距离）\n * @property {number} b 水滴纵高（中心到尖端距离）\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        'use strict';\n\n        var Base = require('./Base');\n        var PathProxy = require('./util/PathProxy');\n        var area = require('../tool/area');\n\n        /**\n         * @alias module:zrender/shape/Droplet\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Droplet = function(options) {\n            Base.call(this, options);\n            this._pathProxy = new PathProxy();\n            /**\n             * 水滴绘制样式\n             * @name module:zrender/shape/Droplet#style\n             * @type {module:zrender/shape/Droplet~IDropletStyle}\n             */\n            /**\n             * 水滴高亮绘制样式\n             * @name module:zrender/shape/Droplet#highlightStyle\n             * @type {module:zrender/shape/Droplet~IDropletStyle}\n             */\n        };\n\n        Droplet.prototype = {\n            type: 'droplet',\n\n            /**\n             * 创建水滴路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Droplet~IDropletStyle} style\n             */\n            buildPath : function(ctx, style) {\n                var path = this._pathProxy || new PathProxy();\n                path.begin(ctx);\n\n                path.moveTo(style.x, style.y + style.a);\n                path.bezierCurveTo(\n                    style.x + style.a,\n                    style.y + style.a,\n                    style.x + style.a * 3 / 2,\n                    style.y - style.a / 3,\n                    style.x,\n                    style.y - style.b\n                );\n                path.bezierCurveTo(\n                    style.x - style.a * 3 / 2,\n                    style.y - style.a / 3,\n                    style.x - style.a,\n                    style.y + style.a,\n                    style.x,\n                    style.y + style.a\n                );\n                path.closePath();\n            },\n\n            /**\n             * 计算返回水滴的包围盒矩形\n             * @param {module:zrender/shape/Droplet~IDropletStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                if (!this._pathProxy.isEmpty()) {\n                    this.buildPath(null, style);\n                }\n                return this._pathProxy.fastBoundingRect();\n            },\n\n            isCover: function (x, y) {\n                var originPos = this.transformCoordToLocal(x, y);\n                x = originPos[0];\n                y = originPos[1];\n                \n                if (this.isCoverRect(x, y)) {\n                    return area.isInsidePath(\n                        this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, x, y\n                    );\n                }\n            }\n        };\n\n        require('../tool/util').inherits(Droplet, Base);\n        return Droplet;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Droplet.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * zrender\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         Yi Shen(https://github.com/pissang)\n *\n * shape类：标线\n */\n\n/**\n * @typedef {Object} IMarkLineStyle\n * @property {number} xStart 起点x坐标\n * @property {number} yStart 起点y坐标\n * @property {number} xEnd 终止点x坐标\n * @property {number} yEnd 终止点y坐标\n * @property {number} cpX1 控制点x坐标，可以使用updatePoints自动根据curveness计算\n * @property {number} cpY1 控制点y坐标，可以使用updatePoints自动根据curveness计算\n * @property {number} curveness 曲度\n * @property {Array.<string>} symbol\n * @property {Array.<number>} symbolRotate\n */\ndefine(function (require) {\n    var Base = require('zrender/shape/Base');\n    var IconShape = require('./Icon');\n    var LineShape = require('zrender/shape/Line');\n    var lineInstance = new LineShape({});\n    var CurveShape = require('zrender/shape/BezierCurve');\n    var curveInstance = new CurveShape({});\n\n    var area = require('zrender/tool/area');\n    var dashedLineTo = require('zrender/shape/util/dashedLineTo');\n    var zrUtil = require('zrender/tool/util');\n    var curveTool = require('zrender/tool/curve');\n\n    function MarkLine(options) {\n        Base.call(this, options);\n\n        if (this.style.curveness > 0) {\n            this.updatePoints(this.style);\n        }\n        if (this.highlightStyle.curveness > 0) {\n            this.updatePoints(this.highlightStyle);\n        }\n    }\n\n    MarkLine.prototype =  {\n        type : 'mark-line',\n        /**\n         * 画刷\n         * @param ctx 画布句柄\n         * @param isHighlight   是否为高亮状态\n         * @param updateCallback 让painter更新视图，base.brush没用，需要的话重载brush\n         */\n        brush : function (ctx, isHighlight) {\n            var style = this.style;\n\n            if (isHighlight) {\n                // 根据style扩展默认高亮样式\n                style = this.getHighlightStyle(\n                    style,\n                    this.highlightStyle || {}\n                );\n            }\n\n            ctx.save();\n            this.setContext(ctx, style);\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            ctx.save();\n            ctx.beginPath();\n            this.buildPath(ctx, style);\n            ctx.stroke();\n            ctx.restore();\n\n            this.brushSymbol(ctx, style, 0);\n            this.brushSymbol(ctx, style, 1);\n\n            this.drawText(ctx, style, this.style);\n\n            ctx.restore();\n        },\n\n        /**\n         * 创建线条路径\n         * @param {Context2D} ctx Canvas 2D上下文\n         * @param {Object} style 样式\n         */\n        buildPath : function (ctx, style) {\n            var lineType = style.lineType || 'solid';\n\n            ctx.moveTo(style.xStart, style.yStart);\n            if (style.curveness > 0) {\n                // FIXME Bezier 在少部分浏览器上暂时不支持虚线\n                var lineDash = null;\n                switch (lineType) {\n                    case 'dashed':\n                        lineDash = [5, 5];\n                        break;\n                    case'dotted':\n                        lineDash = [1, 1];\n                        break;\n                }\n                if (lineDash && ctx.setLineDash) {\n                    ctx.setLineDash(lineDash);\n                }\n                \n                ctx.quadraticCurveTo(\n                    style.cpX1, style.cpY1, style.xEnd, style.yEnd\n                );\n            }\n            else {\n                if (lineType == 'solid') {\n                    ctx.lineTo(style.xEnd, style.yEnd);\n                }\n                else {\n                    var dashLength = (style.lineWidth || 1) \n                        * (style.lineType == 'dashed' ? 5 : 1);\n                    dashedLineTo(\n                        ctx, style.xStart, style.yStart,\n                        style.xEnd, style.yEnd, dashLength\n                    );\n                }\n            }\n        },\n\n        /**\n         * Update cpX1 and cpY1 according to curveniss\n         * @param  {Object} style\n         */\n        updatePoints: function (style) {\n            var curveness = style.curveness || 0;\n            var inv = 1;\n\n            var x0 = style.xStart;\n            var y0 = style.yStart;\n            var x2 = style.xEnd;\n            var y2 = style.yEnd;\n            var x1 = (x0 + x2) / 2 - inv * (y0 - y2) * curveness;\n            var y1 =(y0 + y2) / 2 - inv * (x2 - x0) * curveness;\n\n            style.cpX1 = x1;\n            style.cpY1 = y1;\n        },\n\n        /**\n         * 标线始末标注\n         */\n        brushSymbol : function (ctx, style, idx) {\n            if (style.symbol[idx] == 'none') {\n                return;\n            }\n            ctx.save();\n            ctx.beginPath();\n\n            ctx.lineWidth = style.symbolBorder;\n            ctx.strokeStyle = style.symbolBorderColor;\n            // symbol\n            var symbol = style.symbol[idx].replace('empty', '')\n                                              .toLowerCase();\n            if (style.symbol[idx].match('empty')) {\n                ctx.fillStyle = '#fff'; //'rgba(0, 0, 0, 0)';\n            }\n\n            // symbolRotate\n            var x0 = style.xStart;\n            var y0 = style.yStart;\n            var x2 = style.xEnd;\n            var y2 = style.yEnd;\n            var x = idx === 0 ? x0 : x2;\n            var y = idx === 0 ? y0 : y2;\n            var curveness = style.curveness || 0;\n            var rotate = style.symbolRotate[idx] != null ? (style.symbolRotate[idx] - 0) : 0;\n            rotate = rotate / 180 * Math.PI;\n\n            if (symbol == 'arrow' && rotate === 0) {\n                if (curveness === 0) {\n                    var sign = idx === 0 ? -1 : 1; \n                    rotate = Math.PI / 2 + Math.atan2(\n                        sign * (y2 - y0), sign * (x2 - x0)\n                    );\n                }\n                else {\n                    var x1 = style.cpX1;\n                    var y1 = style.cpY1;\n\n                    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n                    var dx = quadraticDerivativeAt(x0, x1, x2, idx);\n                    var dy = quadraticDerivativeAt(y0, y1, y2, idx);\n\n                    rotate = Math.PI / 2 + Math.atan2(dy, dx);\n                }\n            }\n            \n            ctx.translate(x, y);\n\n            if (rotate !== 0) {\n                ctx.rotate(rotate);\n            }\n\n            // symbolSize\n            var symbolSize = style.symbolSize[idx];\n            IconShape.prototype.buildPath(ctx, {\n                x: -symbolSize,\n                y: -symbolSize,\n                width: symbolSize * 2,\n                height: symbolSize * 2,\n                iconType: symbol\n            });\n\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n            ctx.restore();\n        },\n\n        /**\n         * 返回矩形区域，用于局部刷新和文字定位\n         * @param {Object} style\n         */\n        getRect : function (style) {\n            style.curveness > 0 ? curveInstance.getRect(style)\n                : lineInstance.getRect(style);\n            return style.__rect;\n        },\n\n        isCover : function (x, y) {\n            var originPos = this.transformCoordToLocal(x, y);\n            x = originPos[0];\n            y = originPos[1];\n\n            // 快速预判并保留判断矩形\n            if (this.isCoverRect(x, y)) {\n                // 矩形内\n                return this.style.curveness > 0\n                       ? area.isInside(curveInstance, this.style, x, y)\n                       : area.isInside(lineInstance, this.style, x, y);\n            }\n\n            return false;\n        }\n    };\n\n    zrUtil.inherits(MarkLine, Base);\n\n    return MarkLine;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/MarkLine.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * 直线\n * @module zrender/shape/Line\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @example\n *   var Line = require('zrender/shape/Line');\n *   var shape = new Line({\n *       style: {\n *           xStart: 0,\n *           yStart: 0,\n *           xEnd: 100,\n *           yEnd: 100,\n *           strokeColor: '#000',\n *           lineWidth: 10\n *       }\n *   });\n *   zr.addShape(line);\n */\n/**\n * @typedef {Object} ILineStyle\n * @property {number} xStart 起点x坐标\n * @property {number} yStart 起点y坐标\n * @property {number} xEnd 终止点x坐标\n * @property {number} yEnd 终止点y坐标\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var dashedLineTo = require('./util/dashedLineTo');\n        \n        /**\n         * @alias module:zrender/shape/Line\n         * @param {Object} options\n         * @constructor\n         * @extends module:zrender/shape/Base\n         */\n        var Line = function (options) {\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\n            this.textPosition = 'end';\n            Base.call(this, options);\n\n            /**\n             * 直线绘制样式\n             * @name module:zrender/shape/Line#style\n             * @type {module:zrender/shape/Line~ILineStyle}\n             */\n            /**\n             * 直线高亮绘制样式\n             * @name module:zrender/shape/Line#highlightStyle\n             * @type {module:zrender/shape/Line~ILineStyle}\n             */\n        };\n\n        Line.prototype =  {\n            type: 'line',\n\n            /**\n             * 创建线条路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Line~ILineStyle} style\n             */\n            buildPath : function (ctx, style) {\n                if (!style.lineType || style.lineType == 'solid') {\n                    // 默认为实线\n                    ctx.moveTo(style.xStart, style.yStart);\n                    ctx.lineTo(style.xEnd, style.yEnd);\n                }\n                else if (style.lineType == 'dashed'\n                        || style.lineType == 'dotted'\n                ) {\n                    var dashLength = (style.lineWidth || 1)  \n                                     * (style.lineType == 'dashed' ? 5 : 1);\n                    dashedLineTo(\n                        ctx,\n                        style.xStart, style.yStart,\n                        style.xEnd, style.yEnd,\n                        dashLength\n                    );\n                }\n            },\n\n            /**\n             * 计算返回线条的包围盒矩形\n             * @param {module:zrender/shape/Line~ILineStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var lineWidth = style.lineWidth || 1;\n                style.__rect = {\n                    x : Math.min(style.xStart, style.xEnd) - lineWidth,\n                    y : Math.min(style.yStart, style.yEnd) - lineWidth,\n                    width : Math.abs(style.xStart - style.xEnd)\n                            + lineWidth,\n                    height : Math.abs(style.yStart - style.yEnd)\n                             + lineWidth\n                };\n                \n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(Line, Base);\n        return Line;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Line.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * 虚线lineTo \n *\n * author:  Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *          errorrik (errorrik@gmail.com)\n */\ndefine(\n    function (/* require */) {\n\n        var dashPattern = [ 5, 5 ];\n        /**\n         * 虚线lineTo \n         */\n        return function (ctx, x1, y1, x2, y2, dashLength) {\n            // http://msdn.microsoft.com/en-us/library/ie/dn265063(v=vs.85).aspx\n            if (ctx.setLineDash) {\n                dashPattern[0] = dashPattern[1] = dashLength;\n                ctx.setLineDash(dashPattern);\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                return;\n            }\n\n            dashLength = typeof dashLength != 'number'\n                            ? 5 \n                            : dashLength;\n\n            var dx = x2 - x1;\n            var dy = y2 - y1;\n            var numDashes = Math.floor(\n                Math.sqrt(dx * dx + dy * dy) / dashLength\n            );\n            dx = dx / numDashes;\n            dy = dy / numDashes;\n            var flag = true;\n            for (var i = 0; i < numDashes; ++i) {\n                if (flag) {\n                    ctx.moveTo(x1, y1);\n                }\n                else {\n                    ctx.lineTo(x1, y1);\n                }\n                flag = !flag;\n                x1 += dx;\n                y1 += dy;\n            }\n            ctx.lineTo(x2, y2);\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/util/dashedLineTo.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n * @author Neil (杨骥, 511415343@qq.com)\n * @example\n *     var BezierCurve = require('zrender/shape/BezierCurve');\n *     var shape = new BezierCurve({\n *         style: {\n *             xStart: 0,\n *             yStart: 0,\n *             cpX1: 100,\n *             cpY1: 0,\n *             cpX2: 0,\n *             cpY2: 100,\n *             xEnd: 100,\n *             yEnd: 100,\n *             strokeColor: 'red'\n *         }\n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IBezierCurveStyle\n * @property {number} xStart 起点x坐标\n * @property {number} yStart 起点y坐标\n * @property {number} cpX1 第一个控制点x坐标\n * @property {number} cpY1 第一个控制点y坐标\n * @property {number} [cpX2] 第二个控制点x坐标，如果不给则为二次贝塞尔曲线\n * @property {number} [cpY2] 第二个控制点y坐标，如果不给则为二次贝塞尔曲线\n * @property {number} xEnd 终止点x坐标\n * @property {number} yEnd 终止点y坐标\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\n\ndefine(\n    function (require) {\n        'use strict';\n\n        var Base = require('./Base');\n        \n        /**\n         * @alias module:zrender/shape/BezierCurve\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var BezierCurve = function(options) {\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\n            this.textPosition = 'end';\n            Base.call(this, options);\n            /**\n             * 贝赛尔曲线绘制样式\n             * @name module:zrender/shape/BezierCurve#style\n             * @type {module:zrender/shape/BezierCurve~IBezierCurveStyle}\n             */\n            /**\n             * 贝赛尔曲线高亮绘制样式\n             * @name module:zrender/shape/BezierCurve#highlightStyle\n             * @type {module:zrender/shape/BezierCurve~IBezierCurveStyle}\n             */\n        };\n\n        BezierCurve.prototype = {\n            type: 'bezier-curve',\n\n            /**\n             * 创建贝塞尔曲线路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/BezierCurve~IBezierCurveStyle} style\n             */\n            buildPath : function(ctx, style) {\n                ctx.moveTo(style.xStart, style.yStart);\n                if (typeof style.cpX2 != 'undefined'\n                    && typeof style.cpY2 != 'undefined'\n                ) {\n                    ctx.bezierCurveTo(\n                        style.cpX1, style.cpY1,\n                        style.cpX2, style.cpY2,\n                        style.xEnd, style.yEnd\n                    );\n                }\n                else {\n                    ctx.quadraticCurveTo(\n                        style.cpX1, style.cpY1,\n                        style.xEnd, style.yEnd\n                    );\n                }\n            },\n\n            /**\n             * 计算返回贝赛尔曲线包围盒矩形。\n             * 该包围盒是直接从四个控制点计算，并非最小包围盒。\n             * @param {module:zrender/shape/BezierCurve~IBezierCurveStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function(style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var _minX = Math.min(style.xStart, style.xEnd, style.cpX1);\n                var _minY = Math.min(style.yStart, style.yEnd, style.cpY1);\n                var _maxX = Math.max(style.xStart, style.xEnd, style.cpX1);\n                var _maxY = Math.max(style.yStart, style.yEnd, style.cpY1);\n                var _x2 = style.cpX2;\n                var _y2 = style.cpY2;\n\n                if (typeof _x2 != 'undefined'\n                    && typeof _y2 != 'undefined'\n                ) {\n                    _minX = Math.min(_minX, _x2);\n                    _minY = Math.min(_minY, _y2);\n                    _maxX = Math.max(_maxX, _x2);\n                    _maxY = Math.max(_maxY, _y2);\n                }\n\n                var lineWidth = style.lineWidth || 1;\n                style.__rect = {\n                    x : _minX - lineWidth,\n                    y : _minY - lineWidth,\n                    width : _maxX - _minX + lineWidth,\n                    height : _maxY - _minY + lineWidth\n                };\n                \n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(BezierCurve, Base);\n        return BezierCurve;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/BezierCurve.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * zrender\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * shape类：大规模散点图图形\n * 可配图形属性：\n   {\n       // 基础属性\n       shape  : 'symbol',       // 必须，shape类标识，需要显式指定\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\n       invisible : {boolean},   // 默认为false，是否可见\n\n       // 样式属性，默认状态样式样式属性\n       style  : {\n           pointList     : {Array},   // 必须，二维数组，二维内容如下\n               x         : {number},  // 必须，横坐标\n               y         : {number},  // 必须，纵坐标数组\n               size      : {number},  // 必须，半宽\n               type      : {string=}, // 默认为'circle',图形类型\n       },\n\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\n       highlightStyle : {\n           // 同style\n       }\n\n       // 交互属性，详见shape.Base\n\n       // 事件属性，详见shape.Base\n   }\n */\ndefine(function (require) {\n    var Base = require('zrender/shape/Base');\n    var PolygonShape = require('zrender/shape/Polygon');\n    var polygonInstance = new PolygonShape({});\n    var zrUtil = require('zrender/tool/util');\n\n    function Symbol(options) {\n        Base.call(this, options);\n    }\n\n    Symbol.prototype =  {\n        type : 'symbol',\n        /**\n         * 创建矩形路径\n         * @param {Context2D} ctx Canvas 2D上下文\n         * @param {Object} style 样式\n         */\n        buildPath : function (ctx, style) {\n            var pointList = style.pointList;\n            var len = pointList.length;\n            if (len === 0) {\n                return;\n            }\n\n            var subSize = 10000;\n            var subSetLength = Math.ceil(len / subSize);\n            var sub;\n            var subLen;\n            var isArray = pointList[0] instanceof Array;\n            var size = style.size ? style.size : 2;\n            var curSize = size;\n            var halfSize = size / 2;\n            var PI2 = Math.PI * 2;\n            var percent;\n            var x;\n            var y;\n            for (var j = 0; j < subSetLength; j++) {\n                ctx.beginPath();\n                sub = j * subSize;\n                subLen = sub + subSize;\n                subLen = subLen > len ? len : subLen;\n                for (var i = sub; i < subLen; i++) {\n                    if (style.random) {\n                        percent = style['randomMap' + (i % 20)] / 100;\n                        curSize = size * percent * percent;\n                        halfSize = curSize / 2;\n                    }\n                    if (isArray) {\n                        x = pointList[i][0];\n                        y = pointList[i][1];\n                    }\n                    else {\n                        x = pointList[i].x;\n                        y = pointList[i].y;\n                    }\n                    if (curSize < 3) {\n                        // 小于3像素视觉误差\n                        ctx.rect(x - halfSize, y - halfSize, curSize, curSize);\n                    }\n                    else {\n                        // 大于3像素才考虑图形\n                        switch (style.iconType) {\n                            case 'circle' :\n                                ctx.moveTo(x, y);\n                                ctx.arc(x, y, halfSize, 0, PI2, true);\n                                break;\n                            case 'diamond' :\n                                ctx.moveTo(x, y - halfSize);\n                                ctx.lineTo(x + halfSize / 3, y - halfSize / 3);\n                                ctx.lineTo(x + halfSize, y);\n                                ctx.lineTo(x + halfSize / 3, y + halfSize / 3);\n                                ctx.lineTo(x, y + halfSize);\n                                ctx.lineTo(x - halfSize / 3, y + halfSize / 3);\n                                ctx.lineTo(x - halfSize, y);\n                                ctx.lineTo(x - halfSize / 3, y - halfSize / 3);\n                                ctx.lineTo(x, y - halfSize);\n                                break;\n                            default :\n                                ctx.rect(x - halfSize, y - halfSize, curSize, curSize);\n                        }\n                    }\n                }\n                ctx.closePath();\n                if (j < (subSetLength - 1)) {\n                    switch (style.brushType) {\n                        case 'both':\n                            ctx.fill();\n                            style.lineWidth > 0 && ctx.stroke();  // js hint -_-\"\n                            break;\n                        case 'stroke':\n                            style.lineWidth > 0 && ctx.stroke();\n                            break;\n                        default:\n                            ctx.fill();\n                    }\n                }\n            }\n        },\n\n        /* 像素模式\n        buildPath : function (ctx, style) {\n            var pointList = style.pointList;\n            var rect = this.getRect(style);\n            var ratio = window.devicePixelRatio || 1;\n            // console.log(rect)\n            // var ti = new Date();\n            // bbox取整\n            rect = {\n                x : Math.floor(rect.x),\n                y : Math.floor(rect.y),\n                width : Math.floor(rect.width),\n                height : Math.floor(rect.height)\n            };\n            var pixels = ctx.getImageData(\n                rect.x * ratio, rect.y * ratio,\n                rect.width * ratio, rect.height * ratio\n            );\n            var data = pixels.data;\n            var idx;\n            var zrColor = require('zrender/tool/color');\n            var color = zrColor.toArray(style.color);\n            var r = color[0];\n            var g = color[1];\n            var b = color[2];\n            var width = rect.width;\n\n            for (var i = 1, l = pointList.length; i < l; i++) {\n                idx = ((Math.floor(pointList[i][0]) - rect.x) * ratio\n                       + (Math.floor(pointList[i][1])- rect.y) * width * ratio * ratio\n                      ) * 4;\n                data[idx] = r;\n                data[idx + 1] = g;\n                data[idx + 2] = b;\n                data[idx + 3] = 255;\n            }\n            ctx.putImageData(pixels, rect.x * ratio, rect.y * ratio);\n            // console.log(new Date() - ti);\n            return;\n        },\n        */\n\n        /**\n         * 返回矩形区域，用于局部刷新和文字定位\n         * @param {Object} style\n         */\n        getRect : function (style) {\n            return style.__rect || polygonInstance.getRect(style);\n        },\n\n        isCover : require('./normalIsCover')\n    };\n\n    zrUtil.inherits(Symbol, Base);\n\n    return Symbol;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/Symbol.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * 多边形\n * @module zrender/shape/Polygon\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @example\n *     var Polygon = require('zrender/shape/Polygon');\n *     var shape = new Polygon({\n *         style: {\n *             // 100x100的正方形\n *             pointList: [[0, 0], [100, 0], [100, 100], [0, 100]],\n *             color: 'blue'\n *         }\n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IPolygonStyle\n * @property {string} pointList 多边形顶点数组\n * @property {string} [smooth=''] 是否做平滑插值, 平滑算法可以选择 bezier, spline\n * @property {number} [smoothConstraint] 平滑约束\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var smoothSpline = require('./util/smoothSpline');\n        var smoothBezier = require('./util/smoothBezier');\n        var dashedLineTo = require('./util/dashedLineTo');\n\n        /**\n         * @alias module:zrender/shape/Polygon\n         * @param {Object} options\n         * @constructor\n         * @extends module:zrender/shape/Base\n         */\n        var Polygon = function (options) {\n            Base.call(this, options);\n            /**\n             * 多边形绘制样式\n             * @name module:zrender/shape/Polygon#style\n             * @type {module:zrender/shape/Polygon~IPolygonStyle}\n             */\n            /**\n             * 多边形高亮绘制样式\n             * @name module:zrender/shape/Polygon#highlightStyle\n             * @type {module:zrender/shape/Polygon~IPolygonStyle}\n             */\n        };\n\n        Polygon.prototype = {\n            type: 'polygon',\n\n            /**\n             * 创建多边形路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Polygon~IPolygonStyle} style\n             */\n            buildPath : function (ctx, style) {\n                // 虽然能重用brokenLine，但底层图形基于性能考虑，重复代码减少调用吧\n                var pointList = style.pointList;\n                // 开始点和结束点重复\n                /*\n                var start = pointList[0];\n                var end = pointList[pointList.length-1];\n\n                if (start && end) {\n                    if (start[0] == end[0] &&\n                        start[1] == end[1]) {\n                        // 移除最后一个点\n                        pointList.pop();\n                    }\n                }\n                */\n\n                if (pointList.length < 2) {\n                    // 少于2个点就不画了~\n                    return;\n                }\n\n                if (style.smooth && style.smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        pointList, style.smooth, true, style.smoothConstraint\n                    );\n\n                    ctx.moveTo(pointList[0][0], pointList[0][1]);\n                    var cp1;\n                    var cp2;\n                    var p;\n                    var len = pointList.length;\n                    for (var i = 0; i < len; i++) {\n                        cp1 = controlPoints[i * 2];\n                        cp2 = controlPoints[i * 2 + 1];\n                        p = pointList[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                } \n                else {\n                    if (style.smooth === 'spline') {\n                        pointList = smoothSpline(pointList, true);\n                    }\n\n                    if (!style.lineType || style.lineType == 'solid') {\n                        // 默认为实线\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\n                        for (var i = 1, l = pointList.length; i < l; i++) {\n                            ctx.lineTo(pointList[i][0], pointList[i][1]);\n                        }\n                        ctx.lineTo(pointList[0][0], pointList[0][1]);\n                    }\n                    else if (style.lineType == 'dashed'\n                            || style.lineType == 'dotted'\n                    ) {\n                        var dashLength = \n                            style._dashLength\n                            || (style.lineWidth || 1) \n                               * (style.lineType == 'dashed' ? 5 : 1);\n                        style._dashLength = dashLength;\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\n                        for (var i = 1, l = pointList.length; i < l; i++) {\n                            dashedLineTo(\n                                ctx,\n                                pointList[i - 1][0], pointList[i - 1][1],\n                                pointList[i][0], pointList[i][1],\n                                dashLength\n                            );\n                        }\n                        dashedLineTo(\n                            ctx,\n                            pointList[pointList.length - 1][0], \n                            pointList[pointList.length - 1][1],\n                            pointList[0][0],\n                            pointList[0][1],\n                            dashLength\n                        );\n                    }\n                }\n\n                ctx.closePath();\n                return;\n            },\n\n            /**\n             * 计算返回多边形包围盒矩阵\n             * @param {module:zrender/shape/Polygon~IPolygonStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var minX =  Number.MAX_VALUE;\n                var maxX =  Number.MIN_VALUE;\n                var minY = Number.MAX_VALUE;\n                var maxY = Number.MIN_VALUE;\n\n                var pointList = style.pointList;\n                for (var i = 0, l = pointList.length; i < l; i++) {\n                    if (pointList[i][0] < minX) {\n                        minX = pointList[i][0];\n                    }\n                    if (pointList[i][0] > maxX) {\n                        maxX = pointList[i][0];\n                    }\n                    if (pointList[i][1] < minY) {\n                        minY = pointList[i][1];\n                    }\n                    if (pointList[i][1] > maxY) {\n                        maxY = pointList[i][1];\n                    }\n                }\n\n                var lineWidth;\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\n                    lineWidth = style.lineWidth || 1;\n                }\n                else {\n                    lineWidth = 0;\n                }\n                \n                style.__rect = {\n                    x : Math.round(minX - lineWidth / 2),\n                    y : Math.round(minY - lineWidth / 2),\n                    width : maxX - minX + lineWidth,\n                    height : maxY - minY + lineWidth\n                };\n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(Polygon, Base);\n        return Polygon;\n    }\n);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Polygon.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang) \n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\ndefine(\n    function (require) {\n        var vector = require('../../tool/vector');\n\n        /**\n         * @inner\n         */\n        function interpolate(p0, p1, p2, p3, t, t2, t3) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            return (2 * (p1 - p2) + v0 + v1) * t3 \n                    + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                    + v0 * t + p1;\n        }\n\n        /**\n         * @alias module:zrender/shape/util/smoothSpline\n         * @param {Array} points 线段顶点数组\n         * @param {boolean} isLoop\n         * @param {Array} constraint \n         * @return {Array}\n         */\n        return function (points, isLoop, constraint) {\n            var len = points.length;\n            var ret = [];\n\n            var distance = 0;\n            for (var i = 1; i < len; i++) {\n                distance += vector.distance(points[i - 1], points[i]);\n            }\n            \n            var segs = distance / 5;\n            segs = segs < len ? len : segs;\n            for (var i = 0; i < segs; i++) {\n                var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n                var idx = Math.floor(pos);\n\n                var w = pos - idx;\n\n                var p0;\n                var p1 = points[idx % len];\n                var p2;\n                var p3;\n                if (!isLoop) {\n                    p0 = points[idx === 0 ? idx : idx - 1];\n                    p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                    p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n                }\n                else {\n                    p0 = points[(idx - 1 + len) % len];\n                    p2 = points[(idx + 1) % len];\n                    p3 = points[(idx + 2) % len];\n                }\n\n                var w2 = w * w;\n                var w3 = w * w2;\n\n                ret.push([\n                    interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                    interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n                ]);\n            }\n            return ret;\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/util/smoothSpline.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * 贝塞尔平滑曲线 \n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang) \n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\ndefine(\n    function (require) {\n        var vector = require('../../tool/vector');\n\n        /**\n         * 贝塞尔平滑曲线\n         * @alias module:zrender/shape/util/smoothBezier\n         * @param {Array} points 线段顶点数组\n         * @param {number} smooth 平滑等级, 0-1\n         * @param {boolean} isLoop\n         * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n         *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n         *                           整个折线的包围盒做一个并集用来约束控制点。\n         * @param {Array} 计算出来的控制点数组\n         */\n        return function (points, smooth, isLoop, constraint) {\n            var cps = [];\n\n            var v = [];\n            var v1 = [];\n            var v2 = [];\n            var prevPoint;\n            var nextPoint;\n\n            var hasConstraint = !!constraint;\n            var min, max;\n            if (hasConstraint) {\n                min = [Infinity, Infinity];\n                max = [-Infinity, -Infinity];\n                for (var i = 0, len = points.length; i < len; i++) {\n                    vector.min(min, min, points[i]);\n                    vector.max(max, max, points[i]);\n                }\n                // 与指定的包围盒做并集\n                vector.min(min, min, constraint[0]);\n                vector.max(max, max, constraint[1]);\n            }\n\n            for (var i = 0, len = points.length; i < len; i++) {\n                var point = points[i];\n                var prevPoint;\n                var nextPoint;\n\n                if (isLoop) {\n                    prevPoint = points[i ? i - 1 : len - 1];\n                    nextPoint = points[(i + 1) % len];\n                } \n                else {\n                    if (i === 0 || i === len - 1) {\n                        cps.push(vector.clone(points[i]));\n                        continue;\n                    } \n                    else {\n                        prevPoint = points[i - 1];\n                        nextPoint = points[i + 1];\n                    }\n                }\n\n                vector.sub(v, nextPoint, prevPoint);\n\n                // use degree to scale the handle length\n                vector.scale(v, v, smooth);\n\n                var d0 = vector.distance(point, prevPoint);\n                var d1 = vector.distance(point, nextPoint);\n                var sum = d0 + d1;\n                if (sum !== 0) {\n                    d0 /= sum;\n                    d1 /= sum;\n                }\n\n                vector.scale(v1, v, -d0);\n                vector.scale(v2, v, d1);\n                var cp0 = vector.add([], point, v1);\n                var cp1 = vector.add([], point, v2);\n                if (hasConstraint) {\n                    vector.max(cp0, cp0, min);\n                    vector.min(cp0, cp0, max);\n                    vector.max(cp1, cp1, min);\n                    vector.min(cp1, cp1, max);\n                }\n                cps.push(cp0);\n                cps.push(cp1);\n            }\n            \n            if (isLoop) {\n                cps.push(vector.clone(cps.shift()));\n            }\n\n            return cps;\n        };\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/util/smoothBezier.js\n ** module id = 47\n ** module chunks = 0\n **/","// 由于大多数shape默认的isCover都是相同的逻辑\n// 所以在echarts里临时抽象一个module，用于isCover method\n// TODO: 对zrender的isCover和getRect方法进行抽象，重新整理该逻辑\n\ndefine(function () {\n    return function (x, y) {\n        var originPos = this.transformCoordToLocal(x, y);\n        x = originPos[0];\n        y = originPos[1];\n\n        return this.isCoverRect(x, y);\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/normalIsCover.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * 折线\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @module zrender/shape/Polyline\n * @example\n *     var Polyline = require('zrender/shape/Polyline');\n *     var shape = new Polyline({\n *         style: {\n *             pointList: [[0, 0], [100, 100], [100, 0]],\n *             smooth: 'bezier',\n *             strokeColor: 'purple'\n *         }\n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IPolylineStyle\n * @property {Array.<number>} pointList 顶点坐标数组\n * @property {string|number} [smooth=''] 是否做平滑插值, 平滑算法可以选择 bezier, spline\n * @property {number} [smoothConstraint] 平滑约束\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {string} [lineJoin='miter'] 线段连接样式，可以是 miter, round, bevel\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var smoothSpline = require('./util/smoothSpline');\n        var smoothBezier = require('./util/smoothBezier');\n        var dashedLineTo = require('./util/dashedLineTo');\n\n        /**\n         * @alias module:zrender/shape/Polyline\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Polyline = function(options) {\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\n            this.textPosition = 'end';\n            Base.call(this, options);\n            /**\n             * 贝赛尔曲线绘制样式\n             * @name module:zrender/shape/Polyline#style\n             * @type {module:zrender/shape/Polyline~IPolylineStyle}\n             */\n            /**\n             * 贝赛尔曲线高亮绘制样式\n             * @name module:zrender/shape/Polyline#highlightStyle\n             * @type {module:zrender/shape/Polyline~IPolylineStyle}\n             */\n        };\n\n        Polyline.prototype =  {\n            type: 'polyline',\n\n            /**\n             * 创建多边形路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Polyline~IPolylineStyle} style\n             */\n            buildPath : function(ctx, style) {\n                var pointList = style.pointList;\n                if (pointList.length < 2) {\n                    // 少于2个点就不画了~\n                    return;\n                }\n                \n                var len = Math.min(\n                    style.pointList.length, \n                    Math.round(style.pointListLength || style.pointList.length)\n                );\n                \n                if (style.smooth && style.smooth !== 'spline') {\n                    if (! style.controlPointList) {\n                        this.updateControlPoints(style);\n                    }\n                    var controlPointList = style.controlPointList;\n\n                    ctx.moveTo(pointList[0][0], pointList[0][1]);\n                    var cp1;\n                    var cp2;\n                    var p;\n                    for (var i = 0; i < len - 1; i++) {\n                        cp1 = controlPointList[i * 2];\n                        cp2 = controlPointList[i * 2 + 1];\n                        p = pointList[i + 1];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (style.smooth === 'spline') {\n                        pointList = smoothSpline(pointList);\n                        len = pointList.length;\n                    }\n                    if (!style.lineType || style.lineType == 'solid') {\n                        // 默认为实线\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\n                        for (var i = 1; i < len; i++) {\n                            ctx.lineTo(pointList[i][0], pointList[i][1]);\n                        }\n                    }\n                    else if (style.lineType == 'dashed'\n                            || style.lineType == 'dotted'\n                    ) {\n                        var dashLength = (style.lineWidth || 1) \n                                         * (style.lineType == 'dashed' ? 5 : 1);\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\n                        for (var i = 1; i < len; i++) {\n                            dashedLineTo(\n                                ctx,\n                                pointList[i - 1][0], pointList[i - 1][1],\n                                pointList[i][0], pointList[i][1],\n                                dashLength\n                            );\n                        }\n                    }\n                }\n                return;\n            },\n\n            updateControlPoints: function (style) {\n                style.controlPointList = smoothBezier(\n                    style.pointList, style.smooth, false, style.smoothConstraint\n                );\n            },\n\n            /**\n             * 计算返回折线包围盒矩形。\n             * @param {IZRenderBezierCurveStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function(style) {\n                return require('./Polygon').prototype.getRect(style);\n            }\n        };\n\n        require('../tool/util').inherits(Polyline, Base);\n        return Polyline;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Polyline.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * ShapeBundle 捆绑多个 shape 的 buildPath 方法，但是共用同一个样式\n * @author pissang (https://github.com/pissang)\n * @module zrender/shape/ShapeBundle\n * @example\n *     var poly1 = new PolygonShape();\n *     var poly2 = new PolygonShape();\n *     var poly3 = new PolygonShape();\n *     var shapeBundle = new ShapeBundle({\n *         style: {\n *             shapeList: [poly1, poly2, poly3],\n *             color: 'red'\n *         }\n *     });\n *     zr.addShape(shapeBundle);\n */\n\n/**\n * @typedef {Object} IShapeBundleStyle\n * @property {string} shapeList shape列表\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(function (require) {\n\n    var Base = require('./Base');\n\n    var ShapeBundle = function (options) {\n        Base.call(this, options);\n        /**\n         * ShapeBundle绘制样式\n         * @name module:zrender/shape/ShapeBundle#style\n         * @type {module:zrender/shape/ShapeBundle~IShapeBundleStyle}\n         */\n        /**\n         * ShapeBundle高亮绘制样式\n         * @name module:zrender/shape/ShapeBundle#highlightStyle\n         * @type {module:zrender/shape/ShapeBundle~IShapeBundleStyle}\n         */\n    };\n\n    ShapeBundle.prototype = {\n\n        constructor: ShapeBundle,\n\n        type: 'shape-bundle',\n\n        brush: function (ctx, isHighlight) {\n            var style = this.beforeBrush(ctx, isHighlight);\n\n            ctx.beginPath();\n            for (var i = 0; i < style.shapeList.length; i++) {\n                var subShape = style.shapeList[i];\n                var subShapeStyle = subShape.style;\n                if (isHighlight) {\n                    subShapeStyle = subShape.getHighlightStyle(\n                        subShapeStyle,\n                        subShape.highlightStyle || {},\n                        subShape.brushTypeOnly\n                    );\n                }\n                subShape.buildPath(ctx, subShapeStyle);\n            }\n            switch (style.brushType) {\n                /* jshint ignore:start */\n                case 'both':\n                    ctx.fill();\n                case 'stroke':\n                    style.lineWidth > 0 && ctx.stroke();\n                    break;\n                /* jshint ignore:end */\n                default:\n                    ctx.fill();\n            }\n\n            this.drawText(ctx, style, this.style);\n\n            this.afterBrush(ctx);\n        },\n\n        /**\n         * 计算返回多边形包围盒矩阵\n         * @param {module:zrender/shape/Polygon~IShapeBundleStyle} style\n         * @return {module:zrender/shape/Base~IBoundingRect}\n         */\n        getRect: function (style) {\n            if (style.__rect) {\n                return style.__rect;\n            }\n            var minX = Infinity;\n            var maxX = -Infinity;\n            var minY = Infinity;\n            var maxY = -Infinity;\n            for (var i = 0; i < style.shapeList.length; i++) {\n                var subShape = style.shapeList[i];\n                // TODO Highlight style ?\n                var subRect = subShape.getRect(subShape.style);\n\n                var minX = Math.min(subRect.x, minX);\n                var minY = Math.min(subRect.y, minY);\n                var maxX = Math.max(subRect.x + subRect.width, maxX);\n                var maxY = Math.max(subRect.y + subRect.height, maxY);\n            }\n\n            style.__rect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY\n            };\n\n            return style.__rect;\n        },\n\n        isCover: function (x, y) {\n            var originPos = this.transformCoordToLocal(x, y);\n            x = originPos[0];\n            y = originPos[1];\n            \n            if (this.isCoverRect(x, y)) {\n                for (var i = 0; i < this.style.shapeList.length; i++) {\n                    var subShape = this.style.shapeList[i];\n                    if (subShape.isCover(x, y)) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n    };\n\n    require('../tool/util').inherits(ShapeBundle, Base);\n    return ShapeBundle;\n}); \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/ShapeBundle.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\r\n * echarts通用私有数据服务\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function() {\r\n    /**\r\n     * 打包私有数据\r\n     *\r\n     * @param {shape} shape 修改目标\r\n     * @param {Object} series\r\n     * @param {number} seriesIndex\r\n     * @param {number | Object} data\r\n     * @param {number} dataIndex\r\n     * @param {*=} special\r\n     * @param {*=} special2\r\n     */\r\n    function pack(\r\n        shape, series, seriesIndex, data, dataIndex, name, special, special2\r\n    ) {\r\n        var value;\r\n        if (typeof data != 'undefined') {\r\n            value = data.value == null\r\n                ? data\r\n                : data.value;\r\n        }\r\n\r\n        shape._echartsData = {\r\n            '_series' : series,\r\n            '_seriesIndex' : seriesIndex,\r\n            '_data' : data,\r\n            '_dataIndex' : dataIndex,\r\n            '_name' : name,\r\n            '_value' : value,\r\n            '_special' : special,\r\n            '_special2' : special2\r\n        };\r\n        return shape._echartsData;\r\n    }\r\n\r\n    /**\r\n     * 从私有数据中获取特定项\r\n     * @param {shape} shape\r\n     * @param {string} key\r\n     */\r\n    function get(shape, key) {\r\n        var data = shape._echartsData;\r\n        if (!key) {\r\n            return data;\r\n        }\r\n\r\n        switch (key) {\r\n            case 'series' :\r\n            case 'seriesIndex' :\r\n            case 'data' :\r\n            case 'dataIndex' :\r\n            case 'name' :\r\n            case 'value' :\r\n            case 'special' :\r\n            case 'special2' :\r\n                return data && data['_' + key];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 修改私有数据中获取特定项\r\n     * @param {shape} shape\r\n     * @param {string} key\r\n     * @param {*} value\r\n     */\r\n    function set(shape, key, value) {\r\n        shape._echartsData = shape._echartsData || {};\r\n        switch (key) {\r\n            case 'series' :             // 当前系列值\r\n            case 'seriesIndex' :        // 系列数组位置索引\r\n            case 'data' :               // 当前数据值\r\n            case 'dataIndex' :          // 数据数组位置索引\r\n            case 'name' :\r\n            case 'value' :\r\n            case 'special' :\r\n            case 'special2' :\r\n                shape._echartsData['_' + key] = value;\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 私有数据克隆，把source拷贝到target上\r\n     * @param {shape} source 源\r\n     * @param {shape} target 目标\r\n     */\r\n    function clone(source, target) {\r\n        target._echartsData =  {\r\n            '_series' : source._echartsData._series,\r\n            '_seriesIndex' : source._echartsData._seriesIndex,\r\n            '_data' : source._echartsData._data,\r\n            '_dataIndex' : source._echartsData._dataIndex,\r\n            '_name' : source._echartsData._name,\r\n            '_value' : source._echartsData._value,\r\n            '_special' : source._echartsData._special,\r\n            '_special2' : source._echartsData._special2\r\n        };\r\n    }\r\n\r\n    return {\r\n        pack : pack,\r\n        set : set,\r\n        get : get,\r\n        clone : clone\r\n    };\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/ecData.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * echarts图表动画基类\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function (require) {\n    var zrUtil = require('zrender/tool/util');\n    var curveTool = require('zrender/tool/curve');\n    \n    /**\n     * 折线型动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function pointList(zr, oldShape, newShape, duration, easing) {\n        var newPointList = newShape.style.pointList;\n        var newPointListLen = newPointList.length;\n        var oldPointList;\n\n        if (!oldShape) {        // add\n            oldPointList = [];\n            if (newShape._orient != 'vertical') {\n                var y = newPointList[0][1];\n                for (var i = 0; i < newPointListLen; i++) {\n                    oldPointList[i] = [newPointList[i][0], y];\n                }\n            }\n            else {\n                var x = newPointList[0][0];\n                for (var i = 0; i < newPointListLen; i++) {\n                    oldPointList[i] = [x, newPointList[i][1]];\n                }\n            }\n\n            if (newShape.type == 'half-smooth-polygon') {\n                oldPointList[newPointListLen - 1] = zrUtil.clone(newPointList[newPointListLen - 1]);\n                oldPointList[newPointListLen - 2] = zrUtil.clone(newPointList[newPointListLen - 2]);\n            }\n            oldShape = {style : {pointList : oldPointList}};\n        }\n        \n        oldPointList = oldShape.style.pointList;\n        var oldPointListLen = oldPointList.length;\n        if (oldPointListLen == newPointListLen) {\n            newShape.style.pointList = oldPointList;\n        }\n        else if (oldPointListLen < newPointListLen) {\n            // 原来短，新的长，补全\n            newShape.style.pointList = oldPointList.concat(newPointList.slice(oldPointListLen));\n        }\n        else {\n            // 原来长，新的短，截断\n            newShape.style.pointList = oldPointList.slice(0, newPointListLen);\n        }\n\n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                { pointList: newPointList }\n            )\n            .during(function () {\n                // Updating bezier points\n                if (newShape.updateControlPoints) {\n                    newShape.updateControlPoints(newShape.style);\n                }\n            })\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * 复制样式\n     * \n     * @inner\n     * @param {Object} target 目标对象\n     * @param {Object} source 源对象\n     * @param {...string} props 复制的属性列表\n     */\n    function cloneStyle(target, source) {\n        var len = arguments.length;\n        for (var i = 2; i < len; i++) {\n            var prop = arguments[i];\n            target.style[prop] = source.style[prop];\n        }\n    }\n\n    /**\n     * 方型动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function rectangle(zr, oldShape, newShape, duration, easing) {\n        var newShapeStyle = newShape.style;\n        if (!oldShape) {        // add\n            oldShape = {\n                position : newShape.position,\n                style : {\n                    x : newShapeStyle.x,\n                    y : newShape._orient == 'vertical'\n                        ? newShapeStyle.y + newShapeStyle.height\n                        : newShapeStyle.y,\n                    width: newShape._orient == 'vertical' \n                           ? newShapeStyle.width : 0,\n                    height: newShape._orient != 'vertical' \n                           ? newShapeStyle.height : 0\n                }\n            };\n        }\n        \n        var newX = newShapeStyle.x;\n        var newY = newShapeStyle.y;\n        var newWidth = newShapeStyle.width;\n        var newHeight = newShapeStyle.height;\n        var newPosition = [newShape.position[0], newShape.position[1]];\n        cloneStyle(\n            newShape, oldShape,\n            'x', 'y', 'width', 'height'\n        );\n        newShape.position = oldShape.position;\n\n        zr.addShape(newShape);\n        if (newPosition[0] != oldShape.position[0] || newPosition[1] != oldShape.position[1]) {\n            zr.animate(newShape.id, '')\n                .when(\n                    duration,\n                    {\n                        position: newPosition\n                    }\n                )\n                .start(easing);\n        }\n        \n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                {\n                    x: newX,\n                    y: newY,\n                    width: newWidth,\n                    height: newHeight\n                }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * 蜡烛动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function candle(zr, oldShape, newShape, duration, easing) {\n        if (!oldShape) {        // add\n            var y = newShape.style.y;\n            oldShape = {style : {y : [y[0], y[0], y[0], y[0]]}};\n        }\n        \n        var newY = newShape.style.y;\n        newShape.style.y = oldShape.style.y;\n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                { y: newY }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n\n    /**\n     * 环型动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function ring(zr, oldShape, newShape, duration, easing) {\n        var x = newShape.style.x;\n        var y = newShape.style.y;\n        var r0 = newShape.style.r0;\n        var r = newShape.style.r;\n        \n        newShape.__animating = true;\n\n        if (newShape._animationAdd != 'r') {\n            newShape.style.r0 = 0;\n            newShape.style.r = 0;\n            newShape.rotation = [Math.PI*2, x, y];\n            \n            zr.addShape(newShape);\n            zr.animate(newShape.id, 'style')\n                .when(\n                    duration,\n                    {\n                        r0 : r0,\n                        r : r\n                    }\n                )\n                .done(function() {\n                    newShape.__animating = false;\n                })\n                .start(easing);\n            zr.animate(newShape.id, '')\n                .when(\n                    duration,\n                    { rotation : [0, x, y] }\n                )\n                .start(easing);\n        }\n        else {\n            newShape.style.r0 = newShape.style.r;\n            \n            zr.addShape(newShape);\n            zr.animate(newShape.id, 'style')\n                .when(\n                    duration,\n                    {\n                        r0 : r0\n                    }\n                )\n                .done(function() {\n                    newShape.__animating = false;\n                })\n                .start(easing);\n        }\n    }\n    \n    /**\n     * 扇形动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function sector(zr, oldShape, newShape, duration, easing) {\n        if (!oldShape) {        // add\n            if (newShape._animationAdd != 'r') {\n                oldShape = {\n                    style : {\n                        startAngle : newShape.style.startAngle,\n                        endAngle : newShape.style.startAngle\n                    }\n                };\n            }\n            else {\n                oldShape = {style : {r0 : newShape.style.r}};\n            }\n        }\n        \n        var startAngle = newShape.style.startAngle;\n        var endAngle = newShape.style.endAngle;\n        \n        cloneStyle(\n            newShape, oldShape,\n            'startAngle', 'endAngle'\n        );\n        \n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                {\n                    startAngle : startAngle,\n                    endAngle : endAngle\n                }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * 文本动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function text(zr, oldShape, newShape, duration, easing) {\n        if (!oldShape) {        // add\n            oldShape = {\n                style : {\n                    x : newShape.style.textAlign == 'left' \n                        ? newShape.style.x + 100\n                        : newShape.style.x - 100,\n                    y : newShape.style.y\n                }\n            };\n        }\n        \n        var x = newShape.style.x;\n        var y = newShape.style.y;\n        \n        cloneStyle(\n            newShape, oldShape,\n            'x', 'y'\n        );\n        \n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                {\n                    x : x,\n                    y : y\n                }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * 多边形动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function polygon(zr, oldShape, newShape, duration, easing) {\n        var rect = require('zrender/shape/Polygon').prototype.getRect(newShape.style);\n        var x = rect.x + rect.width / 2;\n        var y = rect.y + rect.height / 2;\n        \n        newShape.scale = [0.1, 0.1, x, y];\n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, '')\n            .when(\n                duration,\n                {\n                    scale : [1, 1, x, y]\n                }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * 和弦动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function ribbon(zr, oldShape, newShape, duration, easing) {\n        if (!oldShape) {        // add\n            oldShape = {\n                style : {\n                    source0 : 0,\n                    source1 : newShape.style.source1 > 0 ? 360 : -360,\n                    target0 : 0,\n                    target1 : newShape.style.target1 > 0 ? 360 : -360\n                }\n            };\n        }\n        \n        var source0 = newShape.style.source0;\n        var source1 = newShape.style.source1;\n        var target0 = newShape.style.target0;\n        var target1 = newShape.style.target1;\n        \n        if (oldShape.style) {\n            cloneStyle(\n                newShape, oldShape,\n                'source0', 'source1', 'target0', 'target1'\n            );\n        }\n        \n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                {\n                    source0 : source0,\n                    source1 : source1,\n                    target0 : target0,\n                    target1 : target1\n                }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * gaugePointer动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function gaugePointer(zr, oldShape, newShape, duration, easing) {\n        if (!oldShape) {        // add\n            oldShape = {\n                style : {\n                    angle : newShape.style.startAngle\n                }\n            };\n        }\n        \n        var angle = newShape.style.angle;\n        newShape.style.angle = oldShape.style.angle;\n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                {\n                    angle : angle\n                }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * icon动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function icon(zr, oldShape, newShape, duration, easing, delay) {\n        // 避免markPoint特效取值在动画帧上\n        newShape.style._x = newShape.style.x;\n        newShape.style._y = newShape.style.y;\n        newShape.style._width = newShape.style.width;\n        newShape.style._height = newShape.style.height;\n\n        if (!oldShape) {    // add\n            var x = newShape._x || 0;\n            var y = newShape._y || 0;\n            newShape.scale = [0.01, 0.01, x, y];\n            zr.addShape(newShape);\n            newShape.__animating = true;\n            zr.animate(newShape.id, '')\n                .delay(delay)\n                .when(\n                    duration,\n                    {scale : [1, 1, x, y]}\n                )\n                .done(function() {\n                    newShape.__animating = false;\n                })\n                .start(easing || 'QuinticOut');\n        }\n        else {              // mod\n            rectangle(zr, oldShape, newShape, duration, easing);\n        }\n    }\n    \n    /**\n     * line动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function line(zr, oldShape, newShape, duration, easing) {\n        if (!oldShape) {\n            oldShape = {\n                style : {\n                    xStart : newShape.style.xStart,\n                    yStart : newShape.style.yStart,\n                    xEnd : newShape.style.xStart,\n                    yEnd : newShape.style.yStart\n                }\n            };\n        }\n        \n        var xStart = newShape.style.xStart;\n        var xEnd = newShape.style.xEnd;\n        var yStart = newShape.style.yStart;\n        var yEnd = newShape.style.yEnd;\n\n        cloneStyle(\n            newShape, oldShape,\n            'xStart', 'xEnd', 'yStart', 'yEnd'\n        );\n\n        zr.addShape(newShape);\n        newShape.__animating = true;\n        zr.animate(newShape.id, 'style')\n            .when(\n                duration,\n                {\n                    xStart: xStart,\n                    xEnd: xEnd,\n                    yStart: yStart,\n                    yEnd: yEnd\n                }\n            )\n            .done(function() {\n                newShape.__animating = false;\n            })\n            .start(easing);\n    }\n    \n    /**\n     * markline动画\n     * \n     * @param {ZRender} zr\n     * @param {shape} oldShape\n     * @param {shape} newShape\n     * @param {number} duration\n     * @param {tring} easing\n     */\n    function markline(zr, oldShape, newShape, duration, easing) {\n        easing = easing || 'QuinticOut';\n        newShape.__animating = true;\n        zr.addShape(newShape);\n        var newShapeStyle = newShape.style;\n\n        var animationDone = function () {\n            newShape.__animating = false;\n        };\n        var x0 = newShapeStyle.xStart;\n        var y0 = newShapeStyle.yStart;\n        var x2 = newShapeStyle.xEnd;\n        var y2 = newShapeStyle.yEnd;\n        if (newShapeStyle.curveness > 0) {\n            newShape.updatePoints(newShapeStyle);\n            var obj = { p: 0 };\n            var x1 = newShapeStyle.cpX1;\n            var y1 = newShapeStyle.cpY1;\n            var newXArr = [];\n            var newYArr = [];\n            var subdivide = curveTool.quadraticSubdivide;\n            zr.animation.animate(obj)\n                .when(duration, { p: 1 })\n                .during(function () {\n                    // Calculate subdivided curve\n                    subdivide(x0, x1, x2, obj.p, newXArr);\n                    subdivide(y0, y1, y2, obj.p, newYArr);\n                    newShapeStyle.cpX1 = newXArr[1];\n                    newShapeStyle.cpY1 = newYArr[1];\n                    newShapeStyle.xEnd = newXArr[2];\n                    newShapeStyle.yEnd = newYArr[2];\n                    zr.modShape(newShape);\n                })\n                .done(animationDone)\n                .start(easing);\n        }\n        else {\n            zr.animate(newShape.id, 'style')\n                .when(0, {\n                    xEnd: x0,\n                    yEnd: y0\n                })\n                .when(duration, {\n                    xEnd: x2,\n                    yEnd: y2\n                })\n                .done(animationDone)\n                .start(easing);\n        }\n    }\n\n    return {\n        pointList : pointList,\n        rectangle : rectangle,\n        candle : candle,\n        ring : ring,\n        sector : sector,\n        text : text,\n        polygon : polygon,\n        ribbon : ribbon,\n        gaugePointer : gaugePointer,\n        icon : icon,\n        line : line,\n        markline : markline\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/ecAnimation.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * echarts图表特效基类\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function (require) {\n    var ecData = require('../util/ecData');\n    \n    var CircleShape = require('zrender/shape/Circle');\n    var ImageShape = require('zrender/shape/Image');\n    var curveTool = require('zrender/tool/curve');\n    var IconShape = require('../util/shape/Icon');\n    var SymbolShape = require('../util/shape/Symbol');\n    var ShapeBundle = require('zrender/shape/ShapeBundle');\n    var Polyline = require('zrender/shape/Polyline');\n    var vec2 = require('zrender/tool/vector');\n\n    var canvasSupported = require('zrender/tool/env').canvasSupported;\n    \n    function point(zr, effectList, shape, zlevel) {\n        var effect = shape.effect;\n        var color = effect.color || shape.style.strokeColor || shape.style.color;\n        var shadowColor = effect.shadowColor || color;\n        var size = effect.scaleSize;\n        var distance = effect.bounceDistance;\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\n                         ? effect.shadowBlur : size;\n\n        var effectShape;\n        if (shape.type !== 'image') {\n            effectShape = new IconShape({\n                zlevel : zlevel,\n                style : {\n                    brushType : 'stroke',\n                    iconType : shape.style.iconType != 'droplet'\n                               ? shape.style.iconType\n                               : 'circle',\n                    x : shadowBlur + 1, // 线宽\n                    y : shadowBlur + 1,\n                    n : shape.style.n,\n                    width : shape.style._width * size,\n                    height : shape.style._height * size,\n                    lineWidth : 1,\n                    strokeColor : color,\n                    shadowColor : shadowColor,\n                    shadowBlur : shadowBlur\n                },\n                draggable : false,\n                hoverable : false\n            });\n            if (shape.style.iconType == 'pin') {\n                effectShape.style.y += effectShape.style.height / 2 * 1.5;\n            }\n\n            if (canvasSupported) {  // 提高性能，换成image\n                effectShape.style.image = zr.shapeToImage(\n                    effectShape, \n                    effectShape.style.width + shadowBlur * 2 + 2, \n                    effectShape.style.height + shadowBlur * 2 + 2\n                ).style.image;\n                \n                effectShape = new ImageShape({\n                    zlevel : effectShape.zlevel,\n                    style : effectShape.style,\n                    draggable : false,\n                    hoverable : false\n                });\n            }\n        }\n        else {\n            effectShape = new ImageShape({\n                zlevel : zlevel,\n                style : shape.style,\n                draggable : false,\n                hoverable : false\n            });\n        }\n        \n        ecData.clone(shape, effectShape);\n        \n        // 改变坐标，不能移到前面\n        effectShape.position = shape.position;\n        effectList.push(effectShape);\n        zr.addShape(effectShape);\n        \n        var devicePixelRatio = shape.type !== 'image' ? (window.devicePixelRatio || 1) : 1;\n        var offset = (effectShape.style.width / devicePixelRatio - shape.style._width) / 2;\n        effectShape.style.x = shape.style._x - offset;\n        effectShape.style.y = shape.style._y - offset;\n\n        if (shape.style.iconType == 'pin') {\n            effectShape.style.y -= shape.style.height / 2 * 1.5;\n        }\n\n        var duration = (effect.period + Math.random() * 10) * 100;\n        \n        zr.modShape(\n            shape.id, \n            { invisible : true}\n        );\n        \n        var centerX = effectShape.style.x + (effectShape.style.width) / 2 / devicePixelRatio;\n        var centerY = effectShape.style.y + (effectShape.style.height) / 2 / devicePixelRatio;\n\n        if (effect.type === 'scale') {\n            // 放大效果\n            zr.modShape(\n                effectShape.id, \n                {\n                    scale : [0.1, 0.1, centerX, centerY]\n                }\n            );\n            \n            zr.animate(effectShape.id, '', effect.loop)\n                .when(\n                    duration,\n                    {\n                        scale : [1, 1, centerX, centerY]\n                    }\n                )\n                .done(function() {\n                    shape.effect.show = false;\n                    zr.delShape(effectShape.id);\n                })\n                .start();\n        }\n        else {\n            zr.animate(effectShape.id, 'style', effect.loop)\n                .when(\n                    duration,\n                    {\n                        y : effectShape.style.y - distance\n                    }\n                )\n                .when(\n                    duration * 2,\n                    {\n                        y : effectShape.style.y\n                    }\n                )\n                .done(function() {\n                    shape.effect.show = false;\n                    zr.delShape(effectShape.id);\n                })\n                .start();\n        }\n        \n    }\n    \n    function largePoint(zr, effectList, shape, zlevel) {\n        var effect = shape.effect;\n        var color = effect.color || shape.style.strokeColor || shape.style.color;\n        var size = effect.scaleSize;\n        var shadowColor = effect.shadowColor || color;\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\n                         ? effect.shadowBlur : (size * 2);\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        var effectShape = new SymbolShape({\n            zlevel : zlevel,\n            position : shape.position,\n            scale : shape.scale,\n            style : {\n                pointList : shape.style.pointList,\n                iconType : shape.style.iconType,\n                color : color,\n                strokeColor : color,\n                shadowColor : shadowColor,\n                shadowBlur : shadowBlur * devicePixelRatio,\n                random : true,\n                brushType: 'fill',\n                lineWidth:1,\n                size : shape.style.size\n            },\n            draggable : false,\n            hoverable : false\n        });\n        \n        effectList.push(effectShape);\n        zr.addShape(effectShape);\n        zr.modShape(\n            shape.id, \n            { invisible : true}\n        );\n        \n        var duration = Math.round(effect.period * 100);\n        var clip1 = {};\n        var clip2 = {};\n        for (var i = 0; i < 20; i++) {\n            effectShape.style['randomMap' + i] = 0;\n            clip1 = {};\n            clip1['randomMap' + i] = 100;\n            clip2 = {};\n            clip2['randomMap' + i] = 0;\n            effectShape.style['randomMap' + i] = Math.random() * 100;\n            zr.animate(effectShape.id, 'style', true)\n                .when(duration, clip1)\n                .when(duration * 2, clip2)\n                .when(duration * 3, clip1)\n                .when(duration * 4, clip1)\n                .delay(Math.random() * duration * i)\n                //.delay(duration / 15 * (15 - i + 1))\n                .start();\n            \n        }\n    }\n    \n    function line(zr, effectList, shape, zlevel, isLarge) {\n        var effect = shape.effect;\n        var shapeStyle = shape.style;\n        var color = effect.color || shapeStyle.strokeColor || shapeStyle.color;\n        var shadowColor = effect.shadowColor || shapeStyle.strokeColor || color;\n        var size = shapeStyle.lineWidth * effect.scaleSize;\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\n                         ? effect.shadowBlur : size;\n\n        var effectShape = new CircleShape({\n            zlevel : zlevel,\n            style : {\n                x : shadowBlur,\n                y : shadowBlur,\n                r : size,\n                color : color,\n                shadowColor : shadowColor,\n                shadowBlur : shadowBlur\n            },\n            hoverable : false\n        });\n\n        var offset = 0;\n        if (canvasSupported && ! isLarge) {  // 提高性能，换成image\n            var zlevel = effectShape.zlevel;\n            effectShape = zr.shapeToImage(\n                effectShape,\n                (size + shadowBlur) * 2,\n                (size + shadowBlur) * 2\n            );\n            effectShape.zlevel = zlevel;\n            effectShape.hoverable = false;\n\n            offset = shadowBlur;\n        }\n\n        if (! isLarge) {\n            ecData.clone(shape, effectShape);\n            // 改变坐标， 不能移到前面\n            effectShape.position = shape.position;\n            effectList.push(effectShape);\n            zr.addShape(effectShape);\n        }\n\n        var effectDone = function () {\n            if (! isLarge) {\n                shape.effect.show = false;\n                zr.delShape(effectShape.id);   \n            }\n            effectShape.effectAnimator = null;\n        };\n\n        if (shape instanceof Polyline) {\n            var distanceList = [0];\n            var totalDist = 0;\n            var pointList = shapeStyle.pointList;\n            var controlPointList = shapeStyle.controlPointList;\n            for (var i = 1; i < pointList.length; i++) {\n                if (controlPointList) {\n                    var cp1 = controlPointList[(i - 1) * 2];\n                    var cp2 = controlPointList[(i - 1) * 2 + 1];\n                    totalDist += vec2.dist(pointList[i - 1], cp1)\n                         + vec2.dist(cp1, cp2)\n                         + vec2.dist(cp2, pointList[i]);\n                }\n                else {\n                    totalDist += vec2.dist(pointList[i - 1], pointList[i]);\n                }\n                distanceList.push(totalDist);\n            }\n            var obj = { p: 0 };\n            var animator = zr.animation.animate(obj, { loop: effect.loop });\n\n            for (var i = 0; i < distanceList.length; i++) {\n                animator.when(distanceList[i] * effect.period, { p: i });\n            }\n            animator.during(function () {\n                var i = Math.floor(obj.p);\n                var x, y;\n                if (i == pointList.length - 1) {\n                    x = pointList[i][0];\n                    y = pointList[i][1];\n                }\n                else {\n                    var t = obj.p - i;\n                    var p0 = pointList[i];\n                    var p1 = pointList[i + 1];\n                    if (controlPointList) {\n                        var cp1 = controlPointList[i * 2];\n                        var cp2 = controlPointList[i * 2 + 1];\n                        x = curveTool.cubicAt(\n                            p0[0], cp1[0], cp2[0], p1[0], t\n                        );\n                        y = curveTool.cubicAt(\n                            p0[1], cp1[1], cp2[1], p1[1], t\n                        );\n                    }\n                    else {\n                        x = (p1[0] - p0[0]) * t + p0[0];\n                        y = (p1[1] - p0[1]) * t + p0[1];   \n                    }\n                }\n                effectShape.style.x = x;\n                effectShape.style.y = y;\n                if (! isLarge) {\n                    zr.modShape(effectShape);\n                }\n            })\n            .done(effectDone)\n            .start();\n\n            animator.duration = totalDist * effect.period;\n\n            effectShape.effectAnimator = animator;\n        }\n        else {\n            var x0 = shapeStyle.xStart - offset;\n            var y0 = shapeStyle.yStart - offset;\n            var x2 = shapeStyle.xEnd - offset;\n            var y2 = shapeStyle.yEnd - offset;\n            effectShape.style.x = x0;\n            effectShape.style.y = y0;\n\n            var distance = (x2 - x0) * (x2 - x0) + (y2 - y0) * (y2 - y0);\n            var duration = Math.round(Math.sqrt(Math.round(\n                distance * effect.period * effect.period\n            )));\n\n            if (shape.style.curveness > 0) {\n                var x1 = shapeStyle.cpX1 - offset;\n                var y1 = shapeStyle.cpY1 - offset;\n                effectShape.effectAnimator = zr.animation.animate(effectShape, { loop: effect.loop })\n                    .when(duration, { p: 1 })\n                    .during(function (target, t) {\n                        effectShape.style.x = curveTool.quadraticAt(\n                            x0, x1, x2, t\n                        );\n                        effectShape.style.y = curveTool.quadraticAt(\n                            y0, y1, y2, t\n                        );\n                        if (! isLarge) {\n                            zr.modShape(effectShape);\n                        }\n                    })\n                    .done(effectDone)\n                    .start();\n            }\n            else {\n                // 不用 zr.animate，因为在用 ShapeBundle 的时候单个 effectShape 不会\n                // 被加到 zrender 中\n                effectShape.effectAnimator = zr.animation.animate(effectShape.style, { loop: effect.loop })\n                    .when(duration, {\n                        x: x2,\n                        y: y2\n                    })\n                    .during(function () {\n                        if (! isLarge) {\n                            zr.modShape(effectShape);\n                        }\n                    })\n                    .done(effectDone)\n                    .start();\n            }\n            effectShape.effectAnimator.duration = duration;\n        }\n        return effectShape;\n    }\n\n    function largeLine(zr, effectList, shape, zlevel) {\n        var effectShape = new ShapeBundle({\n            style: {\n                shapeList: []\n            },\n            zlevel: zlevel,\n            hoverable: false\n        });\n        var shapeList = shape.style.shapeList;\n        var effect = shape.effect;\n        effectShape.position = shape.position;\n\n        var maxDuration = 0;\n        var subEffectAnimators = [];\n        for (var i = 0; i < shapeList.length; i++) {\n            shapeList[i].effect = effect;\n            var subEffectShape = line(zr, null, shapeList[i], zlevel, true);\n            var subEffectAnimator = subEffectShape.effectAnimator;\n            effectShape.style.shapeList.push(subEffectShape);\n            if (subEffectAnimator.duration > maxDuration) {\n                maxDuration = subEffectAnimator.duration;\n            }\n            if (i === 0) {\n                effectShape.style.color = subEffectShape.style.color;\n                effectShape.style.shadowBlur = subEffectShape.style.shadowBlur;\n                effectShape.style.shadowColor = subEffectShape.style.shadowColor;\n            }\n            subEffectAnimators.push(subEffectAnimator);\n        }\n        effectList.push(effectShape);\n        zr.addShape(effectShape);\n\n        var clearAllAnimators = function () {\n            for (var i = 0; i < subEffectAnimators.length; i++) {\n                subEffectAnimators[i].stop();\n            }\n        };\n        if (maxDuration) {\n            effectShape.__dummy = 0;\n            // Proxy animator\n            var animator = zr.animate(effectShape.id, '', effect.loop)\n                .when(maxDuration, {\n                    __dummy: 1\n                })\n                .during(function () {\n                    zr.modShape(effectShape);\n                })\n                .done(function () {\n                    shape.effect.show = false;\n                    zr.delShape(effectShape.id);\n                })\n                .start();\n            var oldStop = animator.stop;\n\n            animator.stop = function () {\n                clearAllAnimators();\n                oldStop.call(this);\n            };\n        }\n    }\n\n    return {\n        point : point,\n        largePoint : largePoint,\n        line : line,\n        largeLine: largeLine\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/ecEffect.js\n ** module id = 53\n ** module chunks = 0\n **/","/**\n * 圆形\n * @module zrender/shape/Circle\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @example\n *   var Circle = require('zrender/shape/Circle');\n *   var shape = new Circle({\n *       style: {\n *           x: 100,\n *           y: 100,\n *           r: 40,\n *           brushType: 'both',\n *           color: 'blue',\n *           strokeColor: 'red',\n *           lineWidth: 3,\n *           text: 'Circle'\n *       }    \n *   });\n *   zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} ICircleStyle\n * @property {number} x 圆心x坐标\n * @property {number} y 圆心y坐标\n * @property {number} r 半径\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        'use strict';\n\n        var Base = require('./Base');\n\n        /**\n         * @alias module:zrender/shape/Circle\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Circle = function(options) {\n            Base.call(this, options);\n            /**\n             * 圆形绘制样式\n             * @name module:zrender/shape/Circle#style\n             * @type {module:zrender/shape/Circle~ICircleStyle}\n             */\n            /**\n             * 圆形高亮绘制样式\n             * @name module:zrender/shape/Circle#highlightStyle\n             * @type {module:zrender/shape/Circle~ICircleStyle}\n             */\n        };\n\n        Circle.prototype = {\n            type: 'circle',\n            /**\n             * 创建圆形路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Circle~ICircleStyle} style\n             */\n            buildPath : function (ctx, style) {\n                // Better stroking in ShapeBundle\n                ctx.moveTo(style.x + style.r, style.y);\n                ctx.arc(style.x, style.y, style.r, 0, Math.PI * 2, true);\n                return;\n            },\n\n            /**\n             * 计算返回圆形的包围盒矩形\n             * @param {module:zrender/shape/Circle~ICircleStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var lineWidth;\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\n                    lineWidth = style.lineWidth || 1;\n                }\n                else {\n                    lineWidth = 0;\n                }\n                style.__rect = {\n                    x : Math.round(style.x - style.r - lineWidth / 2),\n                    y : Math.round(style.y - style.r - lineWidth / 2),\n                    width : style.r * 2 + lineWidth,\n                    height : style.r * 2 + lineWidth\n                };\n                \n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(Circle, Base);\n        return Circle;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Circle.js\n ** module id = 54\n ** module chunks = 0\n **/","/**\n * 高精度数学运算\n */\ndefine(function() {\n    // 除法函数，用来得到精确的除法结果 \n    // 说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。 \n    // 调用：accDiv(arg1,arg2) \n    // 返回值：arg1除以arg2的精确结果\n    function accDiv(arg1,arg2){\n        var s1 = arg1.toString();\n        var s2 = arg2.toString(); \n        var m = 0;\n        try {\n            m = s2.split('.')[1].length;\n        }\n        catch(e) {}\n        try {\n            m -= s1.split('.')[1].length;\n        }\n        catch(e) {}\n        \n        return (s1.replace('.', '') - 0) / (s2.replace('.', '') - 0) * Math.pow(10, m);\n    }\n\n    // 乘法函数，用来得到精确的乘法结果\n    // 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。 \n    // 调用：accMul(arg1,arg2) \n    // 返回值：arg1乘以arg2的精确结果\n    function accMul(arg1, arg2) {\n        var s1 = arg1.toString();\n        var s2 = arg2.toString();\n        var m = 0;\n        try {\n            m += s1.split('.')[1].length;\n        }\n        catch(e) {}\n        try {\n            m += s2.split('.')[1].length;\n        }\n        catch(e) {}\n        \n        return (s1.replace('.', '') - 0) * (s2.replace('.', '') - 0) / Math.pow(10, m);\n    }\n\n    // 加法函数，用来得到精确的加法结果 \n    // 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。 \n    // 调用：accAdd(arg1,arg2) \n    // 返回值：arg1加上arg2的精确结果 \n    function accAdd(arg1, arg2) {\n        var r1 = 0;\n        var r2 = 0;\n        try {\n            r1 = arg1.toString().split('.')[1].length;\n        }\n        catch(e) {}\n        try {\n            r2 = arg2.toString().split('.')[1].length;\n        }\n        catch(e) {}\n        \n        var m = Math.pow(10, Math.max(r1, r2));\n        return (Math.round(arg1 * m) + Math.round(arg2 * m)) / m; \n    }\n\n    //减法函数，用来得到精确的减法结果 \n    //说明：javascript的减法结果会有误差，在两个浮点数减法的时候会比较明显。这个函数返回较为精确的减法结果。 \n    //调用：accSub(arg1,arg2) \n    //返回值：arg1减法arg2的精确结果 \n    function accSub(arg1,arg2) {\n        return accAdd(arg1, -arg2);\n    }\n\n    return {\n        accDiv : accDiv,\n        accMul : accMul,\n        accAdd : accAdd,\n        accSub : accSub\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/accMath.js\n ** module id = 55\n ** module chunks = 0\n **/","/**\r\n * echarts组件基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ecConfig = require('../config');\r\n    var ecData = require('../util/ecData');\r\n    var ecQuery = require('../util/ecQuery');\r\n    var number = require('../util/number');\r\n    var zrUtil = require('zrender/tool/util');\r\n    \r\n    function Base(ecTheme, messageCenter, zr, option, myChart){\r\n        this.ecTheme = ecTheme;\r\n        this.messageCenter = messageCenter;\r\n        this.zr =zr;\r\n        this.option = option;\r\n        this.series = option.series;\r\n        this.myChart = myChart;\r\n        this.component = myChart.component;\r\n\r\n        this.shapeList = [];\r\n        this.effectList = [];\r\n        \r\n        var self = this;\r\n        \r\n        self._onlegendhoverlink = function(param) {\r\n            if (self.legendHoverLink) {\r\n                var targetName = param.target;\r\n                var name;\r\n                for (var i = self.shapeList.length - 1; i >= 0; i--) {\r\n                    name = self.type == ecConfig.CHART_TYPE_PIE\r\n                           || self.type == ecConfig.CHART_TYPE_FUNNEL\r\n                           ? ecData.get(self.shapeList[i], 'name')\r\n                           : (ecData.get(self.shapeList[i], 'series') || {}).name;\r\n                    if (name == targetName \r\n                        && !self.shapeList[i].invisible \r\n                        && !self.shapeList[i].__animating\r\n                    ) {\r\n                        self.zr.addHoverShape(self.shapeList[i]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        messageCenter && messageCenter.bind(\r\n            ecConfig.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 基类方法\r\n     */\r\n    Base.prototype = {\r\n        canvasSupported: require('zrender/tool/env').canvasSupported,\r\n        _getZ : function(zWhat) {\r\n            if (this[zWhat] != null) {\r\n                return this[zWhat];\r\n            }\r\n            var opt = this.ecTheme[this.type];\r\n            if (opt && opt[zWhat] != null) {\r\n                return opt[zWhat];\r\n            }\r\n            opt = ecConfig[this.type];\r\n            if (opt && opt[zWhat] != null) {\r\n                return opt[zWhat];\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * 获取zlevel基数配置\r\n         */\r\n        getZlevelBase: function () {\r\n            return this._getZ('zlevel');\r\n        },\r\n        \r\n        /**\r\n         * 获取z基数配置\r\n         */\r\n        getZBase: function() {\r\n            return this._getZ('z');\r\n        },\r\n\r\n        /**\r\n         * 参数修正&默认值赋值\r\n         * @param {Object} opt 参数\r\n         *\r\n         * @return {Object} 修正后的参数\r\n         */\r\n        reformOption: function (opt) {\r\n            // 默认配置项动态多级合并，依赖加载的组件选项未被merge到ecTheme里，需要从config里取\r\n            opt = zrUtil.merge(\r\n                       zrUtil.merge(\r\n                           opt || {},\r\n                           zrUtil.clone(this.ecTheme[this.type] || {})\r\n                       ),\r\n                       zrUtil.clone(ecConfig[this.type] || {})\r\n                   );\r\n            this.z = opt.z;\r\n            this.zlevel = opt.zlevel;\r\n            return opt;\r\n        },\r\n        \r\n        /**\r\n         * css类属性数组补全，如padding，margin等~\r\n         */\r\n        reformCssArray: function (p) {\r\n            if (p instanceof Array) {\r\n                switch (p.length + '') {\r\n                    case '4':\r\n                        return p;\r\n                    case '3':\r\n                        return [p[0], p[1], p[2], p[1]];\r\n                    case '2':\r\n                        return [p[0], p[1], p[0], p[1]];\r\n                    case '1':\r\n                        return [p[0], p[0], p[0], p[0]];\r\n                    case '0':\r\n                        return [0, 0, 0, 0];\r\n                }\r\n            }\r\n            else {\r\n                return [p, p, p, p];\r\n            }\r\n        },\r\n        \r\n        getShapeById: function(id) {\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].id === id) {\r\n                    return this.shapeList[i];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        \r\n        /**\r\n         * 获取自定义和默认配置合并后的字体设置\r\n         */\r\n        getFont: function (textStyle) {\r\n            var finalTextStyle = this.getTextStyle(\r\n                zrUtil.clone(textStyle)\r\n            );\r\n            return finalTextStyle.fontStyle + ' '\r\n                   + finalTextStyle.fontWeight + ' '\r\n                   + finalTextStyle.fontSize + 'px '\r\n                   + finalTextStyle.fontFamily;\r\n        },\r\n\r\n        /**\r\n         * 获取统一主题字体样式\r\n         */\r\n        getTextStyle: function(targetStyle) {\r\n            return zrUtil.merge(\r\n                       zrUtil.merge(\r\n                           targetStyle || {},\r\n                           this.ecTheme.textStyle\r\n                       ),\r\n                       ecConfig.textStyle\r\n                   );\r\n        },\r\n        \r\n        getItemStyleColor: function (itemColor, seriesIndex, dataIndex, data) {\r\n            return typeof itemColor === 'function'\r\n                   ? itemColor.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesIndex: seriesIndex,\r\n                            series: this.series[seriesIndex],\r\n                            dataIndex: dataIndex,\r\n                            data: data\r\n                        }\r\n                   )\r\n                   : itemColor;\r\n            \r\n        }, \r\n\r\n        /**\r\n         * @parmas {object | number} data 目标data\r\n         * @params {string= | number=} defaultData 无数据时默认返回\r\n         */\r\n        getDataFromOption: function (data, defaultData) {\r\n            return data != null ? (data.value != null ? data.value : data) : defaultData;\r\n        },\r\n        \r\n        // 亚像素优化\r\n        subPixelOptimize: function (position, lineWidth) {\r\n            if (lineWidth % 2 === 1) {\r\n                //position += position === Math.ceil(position) ? 0.5 : 0;\r\n                position = Math.floor(position) + 0.5;\r\n            }\r\n            else {\r\n                position = Math.round(position);\r\n            }\r\n            return position;\r\n        },\r\n        \r\n        // 默认resize\r\n        resize: function () {\r\n            this.refresh && this.refresh();\r\n            this.clearEffectShape && this.clearEffectShape(true);\r\n            var self = this;\r\n            setTimeout(function(){\r\n                self.animationEffect && self.animationEffect();\r\n            },200);\r\n        },\r\n\r\n        /**\r\n         * 清除图形数据，实例仍可用\r\n         */\r\n        clear :function () {\r\n            this.clearEffectShape && this.clearEffectShape();\r\n            this.zr && this.zr.delShape(this.shapeList);\r\n            this.shapeList = [];\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        dispose: function () {\r\n            this.onbeforDispose && this.onbeforDispose();\r\n            this.clear();\r\n            this.shapeList = null;\r\n            this.effectList = null;\r\n            this.messageCenter && this.messageCenter.unbind(\r\n                ecConfig.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink\r\n            );\r\n            this.onafterDispose && this.onafterDispose();\r\n        },\r\n        \r\n        query: ecQuery.query,\r\n        deepQuery: ecQuery.deepQuery,\r\n        deepMerge: ecQuery.deepMerge,\r\n        \r\n        parsePercent: number.parsePercent,\r\n        parseCenter: number.parseCenter,\r\n        parseRadius: number.parseRadius,\r\n        numAddCommas: number.addCommas,\r\n\r\n        getPrecision: number.getPrecision\r\n    };\r\n    \r\n    return Base;\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/base.js\n ** module id = 56\n ** module chunks = 0\n **/","/**\n * echarts数字运算相关\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function() {\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n    \n    /**\n     * 百分比计算\n     */\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (_trim(value).match(/%$/)) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n\n            return parseFloat(value);\n        }\n\n        return value;\n    }\n    \n    /**\n     * 获取中心坐标\n     */ \n    function parseCenter(zr, center) {\n        return [\n            parsePercent(center[0], zr.getWidth()),\n            parsePercent(center[1], zr.getHeight())\n        ];\n    }\n\n    /**\n     * 获取自适应半径\n     */ \n    function parseRadius(zr, radius) {\n        // 传数组实现环形图，[内半径，外半径]，传单个则默认为外半径为\n        if (!(radius instanceof Array)) {\n            radius = [0, radius];\n        }\n        var zrSize = Math.min(zr.getWidth(), zr.getHeight()) / 2;\n        return [\n            parsePercent(radius[0], zrSize),\n            parsePercent(radius[1], zrSize)\n        ];\n    }\n    \n    /**\n     * 每三位默认加,格式化\n     */\n    function addCommas(x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,') \n               + (x.length > 1 ? ('.' + x[1]) : '');\n    }\n\n    /**\n     * 获取数字的小数位数\n     * @param {number} val\n     */\n    \n    // It is much faster than methods converting number to string as follows \n    //      var tmp = val.toString();\n    //      return tmp.length - 1 - tmp.indexOf('.');\n    // especially when precision is low\n    function getPrecision(val) {\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    }\n    \n    return {\n        parsePercent: parsePercent,\n        parseCenter: parseCenter,\n        parseRadius: parseRadius,\n        addCommas: addCommas,\n        getPrecision: getPrecision\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/number.js\n ** module id = 57\n ** module chunks = 0\n **/","/**\n * echarts层级查找方法\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function(require) {\n    var zrUtil = require('zrender/tool/util');\n    \n    /**\n     * 获取嵌套选项的基础方法\n     * 返回optionTarget中位于optionLocation上的值，如果没有定义，则返回undefined\n     */\n    function query(optionTarget, optionLocation) {\n        if (typeof optionTarget == 'undefined') {\n            return;\n        }\n\n        if (!optionLocation) {\n            return optionTarget;\n        }\n\n        optionLocation = optionLocation.split('.');\n        var length = optionLocation.length;\n        var curIdx = 0;\n        while (curIdx < length) {\n            optionTarget = optionTarget[optionLocation[curIdx]];\n            if (typeof optionTarget == 'undefined') {\n                return;\n            }\n            curIdx++;\n        }\n\n        return optionTarget;\n    }\n        \n    /**\n     * 获取多级控制嵌套属性的基础方法\n     * 返回ctrList中优先级最高（最靠前）的非undefined属性，ctrList中均无定义则返回undefined\n     */\n    function deepQuery(ctrList, optionLocation) {\n        var finalOption;\n        for (var i = 0, l = ctrList.length; i < l; i++) {\n            finalOption = query(ctrList[i], optionLocation);\n            if (typeof finalOption != 'undefined') {\n                return finalOption;\n            }\n        }\n    }\n    \n    /**\n     * 获取多级控制嵌套属性的基础方法\n     * 根据ctrList中优先级合并产出目标属性\n     */\n    function deepMerge(ctrList, optionLocation) {\n        var finalOption;\n        var len = ctrList.length;\n        while (len--) {\n            var tempOption = query(ctrList[len], optionLocation);\n            if (typeof tempOption != 'undefined') {\n                if (typeof finalOption == 'undefined') {\n                    finalOption = zrUtil.clone(tempOption);\n                }\n                else {\n                    zrUtil.merge(\n                        finalOption, tempOption, true\n                    );\n                }\n            }\n        }\n        \n        return finalOption;\n    }\n    \n    return {\n        query : query,\n        deepQuery : deepQuery,\n        deepMerge : deepMerge\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/ecQuery.js\n ** module id = 58\n ** module chunks = 0\n **/","/**\n * Edge bundling laytout\n *\n * Use MINGLE algorithm\n * Multilevel agglomerative edge bundling for visualizing large graphs\n *\n * @module echarts/layout/EdgeBundling\n */\ndefine(function (require) {\n\n    var KDTree = require('../data/KDTree');\n    var vec2 = require('zrender/tool/vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var v2Dist = vec2.dist;\n    var v2Copy = vec2.copy;\n    var v2Clone = vec2.clone;\n\n    function squaredDistance(a, b) {\n        a = a.array;\n        b = b.array;\n\n        var x = b[0] - a[0];\n        var y = b[1] - a[1];\n        var z = b[2] - a[2];\n        var w = b[3] - a[3];\n\n        return x * x + y * y + z * z + w * w;\n    }\n\n    function CoarsenedEdge(group) {\n        this.points = [\n            group.mp0, group.mp1\n        ];\n\n        this.group = group;\n    }\n\n    function Edge(edge) {\n        var points = edge.points;\n        // Sort on y\n        if (\n            points[0][1] < points[1][1]\n            // If coarsened edge is flipped, the final composition of meet point\n            // will be unordered\n            || edge instanceof CoarsenedEdge\n        ) {\n            this.array = [points[0][0], points[0][1], points[1][0], points[1][1]];\n            this._startPoint = points[0];\n            this._endPoint = points[1];\n        }\n        else {\n            this.array = [points[1][0], points[1][1], points[0][0], points[0][1]];\n            this._startPoint = points[1];\n            this._endPoint = points[0];\n        }\n\n        this.ink = v2Dist(points[0], points[1]);\n\n        this.edge = edge;\n\n        this.group = null;\n    }\n\n    Edge.prototype.getStartPoint = function () {\n        return this._startPoint;\n    };\n\n    Edge.prototype.getEndPoint = function () {\n        return this._endPoint;\n    };\n\n    function BundledEdgeGroup() {\n\n        this.edgeList = [];\n\n        this.mp0 = v2Create();\n        this.mp1 = v2Create();\n\n        this.ink = 0;\n    }\n\n    BundledEdgeGroup.prototype.addEdge = function (edge) {\n        edge.group = this;\n        this.edgeList.push(edge);\n    };\n\n    BundledEdgeGroup.prototype.removeEdge = function (edge) {\n        edge.group = null;\n        this.edgeList.splice(this.edgeList.indexOf(edge), 1);\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/layout/EdgeBundling\n     */\n    function EdgeBundling() {\n        this.maxNearestEdge = 6;\n        this.maxTurningAngle = Math.PI / 4;\n        this.maxIteration = 20;\n    }\n\n    EdgeBundling.prototype = {\n        \n        constructor: EdgeBundling,\n\n        run: function (rawEdges) {\n            var res = this._iterate(rawEdges);\n            var nIterate = 0;\n            while (nIterate++ < this.maxIteration) {\n                var coarsenedEdges = [];\n                for (var i = 0; i < res.groups.length; i++) {\n                    coarsenedEdges.push(new CoarsenedEdge(res.groups[i]));\n                }\n                var newRes = this._iterate(coarsenedEdges);\n                if (newRes.savedInk <= 0) {\n                    break;\n                } else {\n                    res = newRes;\n                }\n            }\n\n            // Get new edges\n            var newEdges = [];\n\n            function pointApproxEqual(p0, p1) {\n                // Use Float32Array may affect the precision\n                return v2DistSquare(p0, p1) < 1e-10;\n            }\n            // Clone all points to make sure all points in edge will not reference to the same array\n            // And clean the duplicate points\n            function cleanEdgePoints(edgePoints, rawEdgePoints) {\n                var res = [];\n                var off = 0;\n                for (var i = 0; i < edgePoints.length; i++) {\n                    if (! (off > 0 && pointApproxEqual(edgePoints[i], res[off - 1]))) {\n                        res[off++] = v2Clone(edgePoints[i]);\n                    }\n                }\n                // Edge has been reversed\n                if (rawEdgePoints[0] && !pointApproxEqual(res[0], rawEdgePoints[0])) {\n                    res = res.reverse();\n                }\n                return res;\n            }\n\n            var buildNewEdges = function (groups, fromEdgePoints) {\n                var newEdgePoints;\n                for (var i = 0; i < groups.length; i++) {\n                    var group = groups[i];\n                    if (\n                        group.edgeList[0]\n                        && (group.edgeList[0].edge instanceof CoarsenedEdge)\n                    ) {\n                        var newGroups = [];\n                        for (var j = 0; j < group.edgeList.length; j++) {\n                            newGroups.push(group.edgeList[j].edge.group);\n                        }\n                        if (! fromEdgePoints) {\n                            newEdgePoints = [];\n                        } else {\n                            newEdgePoints = fromEdgePoints.slice();\n                        }\n                        newEdgePoints.unshift(group.mp0);\n                        newEdgePoints.push(group.mp1);\n                        buildNewEdges(newGroups, newEdgePoints);\n                    } else {\n                        // console.log(group.edgeList.length);\n                        for (var j = 0; j < group.edgeList.length; j++) {\n                            var edge = group.edgeList[j];\n                            if (! fromEdgePoints) {\n                                newEdgePoints = [];\n                            } else {\n                                newEdgePoints = fromEdgePoints.slice();\n                            }\n                            newEdgePoints.unshift(group.mp0);\n                            newEdgePoints.push(group.mp1);\n                            newEdgePoints.unshift(edge.getStartPoint());\n                            newEdgePoints.push(edge.getEndPoint());\n                            newEdges.push({\n                                points: cleanEdgePoints(newEdgePoints, edge.edge.points),\n                                rawEdge: edge.edge\n                            });\n                        }\n                    }\n                }\n            };\n\n            buildNewEdges(res.groups);\n\n            return newEdges;\n        },\n\n        _iterate: function (rawEdges) {\n            var edges = [];\n            var groups = [];\n            var totalSavedInk = 0;\n            for (var i = 0; i < rawEdges.length; i++) {\n                var edge = new Edge(rawEdges[i]);\n                edges.push(edge);\n            }\n\n            var tree = new KDTree(edges, 4);\n\n            var nearests = [];\n\n            var _mp0 = v2Create();\n            var _mp1 = v2Create();\n            var _newGroupInk = 0;\n            var mp0 = v2Create();\n            var mp1 = v2Create();\n            var newGroupInk = 0;\n            for (var i = 0; i < edges.length; i++) {\n                var edge = edges[i];\n                if (edge.group) {\n                    // Edge have been groupped\n                    continue;\n                }\n                tree.nearestN(\n                    edge, this.maxNearestEdge,\n                    squaredDistance, nearests\n                );\n                var maxSavedInk = 0;\n                var mostSavingInkEdge = null;\n                var lastCheckedGroup = null;\n                for (var j = 0; j < nearests.length; j++) {\n                    var nearest = nearests[j];\n                    var savedInk = 0;\n                    if (nearest.group) {\n                        if (nearest.group !== lastCheckedGroup) {\n                            lastCheckedGroup = nearest.group;\n                            _newGroupInk = this._calculateGroupEdgeInk(\n                                nearest.group, edge, _mp0, _mp1\n                            );\n                            savedInk = nearest.group.ink + edge.ink - _newGroupInk;\n                        }\n                    }\n                    else {\n                        _newGroupInk = this._calculateEdgeEdgeInk(\n                            edge, nearest, _mp0, _mp1\n                        );\n                        savedInk = nearest.ink + edge.ink - _newGroupInk;\n                    }\n                    if (savedInk > maxSavedInk) {\n                        maxSavedInk = savedInk;\n                        mostSavingInkEdge = nearest;\n                        v2Copy(mp1, _mp1);\n                        v2Copy(mp0, _mp0);\n                        newGroupInk = _newGroupInk;\n                    }\n                }\n                if (mostSavingInkEdge) {\n                    totalSavedInk += maxSavedInk;\n                    var group;\n                    if (! mostSavingInkEdge.group) {\n                        group = new BundledEdgeGroup();\n                        groups.push(group);\n                        group.addEdge(mostSavingInkEdge);\n                    }\n                    group = mostSavingInkEdge.group;\n                    // Use the meet point and group ink calculated before\n                    v2Copy(group.mp0, mp0);\n                    v2Copy(group.mp1, mp1);\n                    group.ink = newGroupInk;\n                    mostSavingInkEdge.group.addEdge(edge);\n                }\n                else {\n                    var group = new BundledEdgeGroup();\n                    groups.push(group);\n                    v2Copy(group.mp0, edge.getStartPoint());\n                    v2Copy(group.mp1, edge.getEndPoint());\n                    group.ink = edge.ink;\n                    group.addEdge(edge);\n                }\n            }\n\n            return {\n                groups: groups,\n                edges: edges,\n                savedInk: totalSavedInk\n            };\n        },\n\n        _calculateEdgeEdgeInk: (function () {\n            var startPointSet = [];\n            var endPointSet = [];\n            return function (e0, e1, mp0, mp1) {\n                startPointSet[0] = e0.getStartPoint();\n                startPointSet[1] = e1.getStartPoint();\n                endPointSet[0] = e0.getEndPoint();\n                endPointSet[1] = e1.getEndPoint();\n\n                this._calculateMeetPoints(\n                    startPointSet, endPointSet, mp0, mp1\n                );\n                var ink = v2Dist(startPointSet[0], mp0)\n                    + v2Dist(mp0, mp1)\n                    + v2Dist(mp1, endPointSet[0])\n                    + v2Dist(startPointSet[1], mp0)\n                    + v2Dist(mp1, endPointSet[1]);\n\n                return ink;\n            };\n        })(),\n\n        _calculateGroupEdgeInk: function (group, edgeTryAdd, mp0, mp1) {\n            var startPointSet = [];\n            var endPointSet = [];\n            for (var i = 0; i < group.edgeList.length; i++) {\n                var edge = group.edgeList[i];\n                startPointSet.push(edge.getStartPoint());\n                endPointSet.push(edge.getEndPoint());\n            }\n            startPointSet.push(edgeTryAdd.getStartPoint());\n            endPointSet.push(edgeTryAdd.getEndPoint());\n\n            this._calculateMeetPoints(\n                startPointSet, endPointSet, mp0, mp1\n            );\n\n            var ink = v2Dist(mp0, mp1);\n            for (var i = 0; i < startPointSet.length; i++) {\n                ink += v2Dist(startPointSet[i], mp0)\n                    + v2Dist(endPointSet[i], mp1);\n            }\n\n            return ink;\n        },\n\n        /**\n         * Calculating the meet points\n         * @method\n         * @param {Array} startPointSet Start points set of bundled edges\n         * @param {Array} endPointSet End points set of bundled edges\n         * @param {Array.<number>} mp0 Output meet point 0\n         * @param {Array.<number>} mp1 Output meet point 1\n         */\n        _calculateMeetPoints: (function () {\n            var cp0 = v2Create();\n            var cp1 = v2Create();\n            return function (startPointSet, endPointSet, mp0, mp1) {\n                vec2.set(cp0, 0, 0);\n                vec2.set(cp1, 0, 0);\n                var len = startPointSet.length;\n                // Calculate the centroid of start points set\n                for (var i = 0; i < len; i++) {\n                    vec2.add(cp0, cp0, startPointSet[i]);\n                }\n                vec2.scale(cp0, cp0, 1 / len);\n\n                // Calculate the centroid of end points set\n                len = endPointSet.length;\n                for (var i = 0; i < len; i++) {\n                    vec2.add(cp1, cp1, endPointSet[i]);\n                }\n                vec2.scale(cp1, cp1, 1 / len);\n\n                this._limitTurningAngle(\n                    startPointSet, cp0, cp1, mp0\n                );\n                this._limitTurningAngle(\n                    endPointSet, cp1, cp0, mp1\n                );\n            };\n        })(),\n\n        _limitTurningAngle: (function () {\n            var v10 = v2Create();\n            var vTmp = v2Create();\n            var project = v2Create();\n            var tmpOut = v2Create();\n            return function (pointSet, p0, p1, out) {\n                // Limit the max turning angle\n                var maxTurningAngleCos = Math.cos(this.maxTurningAngle);\n                var maxTurningAngleTan = Math.tan(this.maxTurningAngle);\n\n                vec2.sub(v10, p0, p1);\n                vec2.normalize(v10, v10);\n\n                // Simply copy the centroid point if no need to turn the angle\n                vec2.copy(out, p0);\n\n                var maxMovement = 0;\n                for (var i = 0; i < pointSet.length; i++) {\n                    var p = pointSet[i];\n                    vec2.sub(vTmp, p, p0);\n                    var len = vec2.len(vTmp);\n                    vec2.scale(vTmp, vTmp, 1 / len);\n                    var turningAngleCos = vec2.dot(vTmp, v10);\n                    // Turning angle is to large\n                    if (turningAngleCos < maxTurningAngleCos) {\n                        // Calculat p's project point on vector p1-p0 \n                        // and distance to the vector\n                        vec2.scaleAndAdd(\n                            project, p0, v10, len * turningAngleCos\n                        );\n                        var distance = v2Dist(project, p);\n\n                        // Use the max turning angle to calculate the new meet point\n                        var d = distance / maxTurningAngleTan;\n                        vec2.scaleAndAdd(tmpOut, project, v10, -d);\n\n                        var movement = v2DistSquare(tmpOut, p0);\n                        if (movement > maxMovement) {\n                            maxMovement = movement;\n                            vec2.copy(out, tmpOut);\n                        }\n                    }\n                }\n            };\n        })()\n    };\n\n    return EdgeBundling;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/layout/EdgeBundling.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\n * K-Dimension Tree\n *\n * @module echarts/data/KDTree\n * @author Yi Shen(https://github.com/pissang)\n */\ndefine(function (require) {\n\n    var quickSelect = require('./quickSelect');\n\n    function Node(axis, data) {\n        this.left = null;\n        this.right = null;\n        this.axis = axis;\n\n        this.data = data;\n    }\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/KDTree\n     * @param {Array} points List of points.\n     * each point needs an array property to repesent the actual data\n     * @param {Number} [dimension]\n     *        Point dimension.\n     *        Default will use the first point's length as dimensiont\n     */\n    var KDTree = function (points, dimension) {\n        if (!points.length) {\n            return;\n        }\n\n        if (!dimension) {\n            dimension = points[0].array.length;\n        }\n        this.dimension = dimension;\n        this.root = this._buildTree(points, 0, points.length - 1, 0);\n\n        // Use one stack to avoid allocation \n        // each time searching the nearest point\n        this._stack = [];\n        // Again avoid allocating a new array\n        // each time searching nearest N points\n        this._nearstNList = [];\n    };\n\n    /**\n     * Resursively build the tree\n     */\n    KDTree.prototype._buildTree = function (points, left, right, axis) {\n        if (right < left) {\n            return null;\n        }\n\n        var medianIndex = Math.floor((left + right) / 2);\n        medianIndex = quickSelect(\n            points, left, right, medianIndex,\n            function (a, b) {\n                return a.array[axis] - b.array[axis];\n            }\n        );\n        var median = points[medianIndex];\n\n        var node = new Node(axis, median);\n\n        axis = (axis + 1) % this.dimension;\n        if (right > left) {\n            node.left = this._buildTree(points, left, medianIndex - 1, axis);\n            node.right = this._buildTree(points, medianIndex + 1, right, axis);   \n        }\n\n        return node;\n    };\n\n    /**\n     * Find nearest point\n     * @param  {Array} target Target point\n     * @param  {Function} squaredDistance Squared distance function\n     * @return {Array} Nearest point\n     */\n    KDTree.prototype.nearest = function (target, squaredDistance) {\n        var curr = this.root;\n        var stack = this._stack;\n        var idx = 0;\n        var minDist = Infinity;\n        var nearestNode = null;\n        if (curr.data !== target) {\n            minDist = squaredDistance(curr.data, target);\n            nearestNode = curr;\n        }\n\n        if (target.array[curr.axis] < curr.data.array[curr.axis]) {\n            // Left first\n            curr.right && (stack[idx++] = curr.right);\n            curr.left && (stack[idx++] = curr.left);\n        }\n        else {\n            // Right first\n            curr.left && (stack[idx++] = curr.left);\n            curr.right && (stack[idx++] = curr.right);\n        }\n\n        while (idx--) {\n            curr = stack[idx];\n            var currDist = target.array[curr.axis] - curr.data.array[curr.axis];\n            var isLeft = currDist < 0;\n            var needsCheckOtherSide = false;\n            currDist = currDist * currDist;\n            // Intersecting right hyperplane with minDist hypersphere\n            if (currDist < minDist) {\n                currDist = squaredDistance(curr.data, target);\n                if (currDist < minDist && curr.data !== target) {\n                    minDist = currDist;\n                    nearestNode = curr;\n                }\n                needsCheckOtherSide = true;\n            }\n            if (isLeft) {\n                if (needsCheckOtherSide) {\n                    curr.right && (stack[idx++] = curr.right);\n                }\n                // Search in the left area\n                curr.left && (stack[idx++] = curr.left);\n            }\n            else {\n                if (needsCheckOtherSide) {\n                    curr.left && (stack[idx++] = curr.left);\n                }\n                // Search the right area\n                curr.right && (stack[idx++] = curr.right);\n            }\n        }\n\n        return nearestNode.data;\n    };\n\n    KDTree.prototype._addNearest = function (found, dist, node) {\n        var nearestNList = this._nearstNList;\n\n        // Insert to the right position\n        // Sort from small to large\n        for (var i = found - 1; i > 0; i--) {\n            if (dist >= nearestNList[i - 1].dist) {                \n                break;\n            }\n            else {\n                nearestNList[i].dist = nearestNList[i - 1].dist;\n                nearestNList[i].node = nearestNList[i - 1].node;\n            }\n        }\n\n        nearestNList[i].dist = dist;\n        nearestNList[i].node = node;\n    };\n\n    /**\n     * Find nearest N points\n     * @param  {Array} target Target point\n     * @param  {number} N\n     * @param  {Function} squaredDistance Squared distance function\n     * @param  {Array} [output] Output nearest N points\n     */\n    KDTree.prototype.nearestN = function (target, N, squaredDistance, output) {\n        if (N <= 0) {\n            output.length = 0;\n            return output;\n        }\n\n        var curr = this.root;\n        var stack = this._stack;\n        var idx = 0;\n\n        var nearestNList = this._nearstNList;\n        for (var i = 0; i < N; i++) {\n            // Allocate\n            if (!nearestNList[i]) {\n                nearestNList[i] = {};\n            }\n            nearestNList[i].dist = 0;\n            nearestNList[i].node = null;\n        }\n        var currDist = squaredDistance(curr.data, target);\n\n        var found = 0;\n        if (curr.data !== target) {\n            found++;\n            this._addNearest(found, currDist, curr);\n        }\n\n        if (target.array[curr.axis] < curr.data.array[curr.axis]) {\n            // Left first\n            curr.right && (stack[idx++] = curr.right);\n            curr.left && (stack[idx++] = curr.left);\n        }\n        else {\n            // Right first\n            curr.left && (stack[idx++] = curr.left);\n            curr.right && (stack[idx++] = curr.right);\n        }\n\n        while (idx--) {\n            curr = stack[idx];\n            var currDist = target.array[curr.axis] - curr.data.array[curr.axis];\n            var isLeft = currDist < 0;\n            var needsCheckOtherSide = false;\n            currDist = currDist * currDist;\n            // Intersecting right hyperplane with minDist hypersphere\n            if (found < N || currDist < nearestNList[found - 1].dist) {\n                currDist = squaredDistance(curr.data, target);\n                if (\n                    (found < N || currDist < nearestNList[found - 1].dist)\n                    && curr.data !== target\n                ) {\n                    if (found < N) {\n                        found++;\n                    }\n                    this._addNearest(found, currDist, curr);\n                }\n                needsCheckOtherSide = true;\n            }\n            if (isLeft) {\n                if (needsCheckOtherSide) {\n                    curr.right && (stack[idx++] = curr.right);\n                }\n                // Search in the left area\n                curr.left && (stack[idx++] = curr.left);\n            }\n            else {\n                if (needsCheckOtherSide) {\n                    curr.left && (stack[idx++] = curr.left);\n                }\n                // Search the right area\n                curr.right && (stack[idx++] = curr.right);\n            }\n        }\n\n        // Copy to output\n        for (var i = 0; i < found; i++) {\n            output[i] = nearestNList[i].node.data;\n        }\n        output.length = found;\n\n        return output;\n    };\n\n    return KDTree;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/data/KDTree.js\n ** module id = 60\n ** module chunks = 0\n **/","/**\n * Quick select n-th element in an array.\n *\n * Note: it will change the elements placement in array.\n *\n * @module echarts/data/quickSelect\n * @author Yi Shen(https://github.com/pissang)\n */\ndefine(function (require) {\n\n    function defaultCompareFunc(a, b) {\n        return a - b;\n    }\n\n    function swapElement(list, idx0, idx1) {\n        var tmp = list[idx0];\n        list[idx0] = list[idx1];\n        list[idx1] = tmp;\n    }\n\n    function select(list, left, right, nth, compareFunc) {\n        var pivotIdx = left;\n        while (right > left) {\n            var pivotIdx = Math.round((right + left) / 2);\n            var pivotValue = list[pivotIdx];\n            // Swap pivot to the end\n            swapElement(list, pivotIdx, right);\n            pivotIdx = left;\n            for (var i = left; i <= right - 1; i++) {\n                if (compareFunc(pivotValue, list[i]) >= 0) {\n                    swapElement(list, i, pivotIdx);\n                    pivotIdx++;\n                }\n            }\n            swapElement(list, right, pivotIdx);\n\n            if (pivotIdx === nth) {\n                return pivotIdx;\n            } else if (pivotIdx < nth) {\n                left = pivotIdx + 1;\n            } else {\n                right = pivotIdx - 1;\n            }\n        }\n        // Left == right\n        return left;\n    }\n\n    /**\n     * @alias module:echarts/data/quickSelect\n     * @param {Array} list\n     * @param {number} [left]\n     * @param {number} [right]\n     * @param {number} nth\n     * @param {Function} [compareFunc]\n     * @example\n     *     var quickSelect = require('echarts/data/quickSelect');\n     *     var list = [5, 2, 1, 4, 3]\n     *     quickSelect(list, 3);\n     *     quickSelect(list, 0, 3, 1, function (a, b) {return a - b});\n     *\n     * @return {number}\n     */\n    function quickSelect(list, left, right, nth, compareFunc) {\n        if (arguments.length <= 3) {\n            nth = left;\n            if (arguments.length == 2) {\n                compareFunc = defaultCompareFunc;\n            } else {\n                compareFunc = right;\n            }\n            left = 0;\n            right = list.length - 1;\n        }\n        return select(list, left, right, nth, compareFunc);\n    }\n    \n    return quickSelect;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/data/quickSelect.js\n ** module id = 61\n ** module chunks = 0\n **/","/**\r\n * echarts组件：工具箱\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var LineShape = require('zrender/shape/Line');\r\n    var ImageShape = require('zrender/shape/Image');\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n    var IconShape = require('../util/shape/Icon');\r\n    \r\n    var ecConfig = require('../config');\r\n    ecConfig.toolbox = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 6,                       // 二级层叠\r\n        show: false,\r\n        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'right',                // 水平安放位置，默认为全图右对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        color: ['#1e90ff','#22bb22','#4b0082','#d2691e'],\r\n        disableColor: '#ddd',\r\n        effectiveColor: 'red',\r\n        backgroundColor: 'rgba(0,0,0,0)', // 工具箱背景颜色\r\n        borderColor: '#ccc',       // 工具箱边框颜色\r\n        borderWidth: 0,            // 工具箱边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 工具箱内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemSize: 16,              // 工具箱图形宽度\r\n        showTitle: true,\r\n        // textStyle: {},\r\n        feature: {\r\n            mark: {\r\n                show: false,\r\n                title: {\r\n                    mark: '辅助线开关',\r\n                    markUndo: '删除辅助线',\r\n                    markClear: '清空辅助线'\r\n                },\r\n                lineStyle: {\r\n                    width: 1,\r\n                    color: '#1e90ff',\r\n                    type: 'dashed'\r\n                }\r\n            },\r\n            dataZoom: {\r\n                show: false,\r\n                title: {\r\n                    dataZoom: '区域缩放',\r\n                    dataZoomReset: '区域缩放后退'\r\n                }\r\n            },\r\n            dataView: {\r\n                show: false,\r\n                title: '数据视图',\r\n                readOnly: false,\r\n                lang: ['数据视图', '关闭', '刷新']\r\n            },\r\n            magicType: {\r\n                show: false,\r\n                title: {\r\n                    line: '折线图切换',\r\n                    bar: '柱形图切换',\r\n                    stack: '堆积',\r\n                    tiled: '平铺',\r\n                    force: '力导向布局图切换',\r\n                    chord: '和弦图切换',\r\n                    pie: '饼图切换',\r\n                    funnel: '漏斗图切换'\r\n                },\r\n                /*\r\n                option: {\r\n                    line: {},\r\n                    bar: {},\r\n                    stack: {},\r\n                    tiled: {},\r\n                    force: {},\r\n                    chord: {},\r\n                    pie: {},\r\n                    funnel: {}\r\n                },\r\n                */\r\n                type: [] // 'line', 'bar', 'stack', 'tiled', 'force', 'chord', 'pie', 'funnel'\r\n            },\r\n            restore: {\r\n                show: false,\r\n                title: '还原'\r\n            },\r\n            saveAsImage: {\r\n                show: false,\r\n                title: '保存为图片',\r\n                type: 'png',\r\n                lang: ['点击保存'] \r\n            }\r\n        }\r\n    };\r\n\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrConfig = require('zrender/config');\r\n    var zrEvent = require('zrender/tool/event');\r\n    \r\n    var _MAGICTYPE_STACK = 'stack';\r\n    var _MAGICTYPE_TILED = 'tiled';\r\n        \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {HtmlElement} dom 目标对象\r\n     * @param {ECharts} myChart 当前图表实例\r\n     */\r\n    function Toolbox(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.dom = myChart.dom;\r\n        \r\n        this._magicType = {};\r\n        this._magicMap = {};\r\n        this._isSilence = false;\r\n        \r\n        this._iconList;\r\n        this._iconShapeMap = {};\r\n        //this._itemGroupLocation;\r\n        this._featureTitle = {};             // 文字\r\n        this._featureIcon = {};              // 图标\r\n        this._featureColor = {};             // 颜色\r\n        this._featureOption = {};\r\n        this._enableColor = 'red';\r\n        this._disableColor = '#ccc';\r\n        // this._markStart;\r\n        // this._marking;\r\n        // this._markShape;\r\n        // this._zoomStart;\r\n        // this._zooming;\r\n        // this._zoomShape;\r\n        // this._zoomQueue;\r\n        // this._dataView;\r\n        this._markShapeList = [];\r\n        var self = this;\r\n        self._onMark = function (param) {\r\n            self.__onMark(param);\r\n        };\r\n        self._onMarkUndo = function (param) {\r\n            self.__onMarkUndo(param);\r\n        };\r\n        self._onMarkClear = function (param) {\r\n            self.__onMarkClear(param);\r\n        };\r\n        self._onDataZoom = function (param) {\r\n            self.__onDataZoom(param);\r\n        };\r\n        self._onDataZoomReset = function (param) {\r\n            self.__onDataZoomReset(param);\r\n        };\r\n        self._onDataView = function (param) {\r\n            self.__onDataView(param);\r\n        };\r\n        self._onRestore = function (param) {\r\n            self.__onRestore(param);\r\n        };\r\n        self._onSaveAsImage = function (param) {\r\n            self.__onSaveAsImage(param);\r\n        };\r\n        self._onMagicType = function (param) {\r\n            self.__onMagicType(param);\r\n        };\r\n        self._onCustomHandler = function (param) {\r\n            self.__onCustomHandler(param);\r\n        };\r\n        self._onmousemove = function (param) {\r\n            return self.__onmousemove(param);\r\n        };\r\n\r\n        self._onmousedown = function (param) {\r\n            return self.__onmousedown(param);\r\n        };\r\n        \r\n        self._onmouseup = function (param) {\r\n            return self.__onmouseup(param);\r\n        };\r\n        \r\n        self._onclick = function (param) {\r\n            return self.__onclick(param);\r\n        };\r\n    }\r\n\r\n    Toolbox.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TOOLBOX,\r\n        _buildShape: function () {\r\n            this._iconList = [];\r\n            var toolboxOption = this.option.toolbox;\r\n            this._enableColor = toolboxOption.effectiveColor;\r\n            this._disableColor = toolboxOption.disableColor;\r\n            var feature = toolboxOption.feature;\r\n            var iconName = [];\r\n            for (var key in feature){\r\n                if (feature[key].show) {\r\n                    switch (key) {\r\n                        case 'mark' :\r\n                            iconName.push({ key: key, name: 'mark' });\r\n                            iconName.push({ key: key, name: 'markUndo' });\r\n                            iconName.push({ key: key, name: 'markClear' });\r\n                            break;\r\n                        case 'magicType' :\r\n                            for (var i = 0, l = feature[key].type.length; i < l; i++) {\r\n                                feature[key].title[feature[key].type[i] + 'Chart']\r\n                                    = feature[key].title[feature[key].type[i]];\r\n                                if (feature[key].option) {\r\n                                    feature[key].option[feature[key].type[i] + 'Chart']\r\n                                        = feature[key].option[feature[key].type[i]];\r\n                                }\r\n                                iconName.push({ key: key, name: feature[key].type[i] + 'Chart' });\r\n                            }\r\n                            break;\r\n                        case 'dataZoom' :\r\n                            iconName.push({ key: key, name: 'dataZoom' });\r\n                            iconName.push({ key: key, name: 'dataZoomReset' });\r\n                            break;\r\n                        case 'saveAsImage' :\r\n                            if (this.canvasSupported) {\r\n                                iconName.push({ key: key, name: 'saveAsImage' });\r\n                            }\r\n                            break;\r\n                        default :\r\n                            iconName.push({ key: key, name: key });\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (iconName.length > 0) {\r\n                var name;\r\n                var key;\r\n                for (var i = 0, l = iconName.length; i < l; i++) {\r\n                    name = iconName[i].name;\r\n                    key = iconName[i].key;\r\n                    this._iconList.push(name);\r\n                    this._featureTitle[name] = feature[key].title[name] || feature[key].title;\r\n                    if (feature[key].icon) {\r\n                        this._featureIcon[name] = feature[key].icon[name] || feature[key].icon;\r\n                    }\r\n                    if (feature[key].color) {\r\n                        this._featureColor[name] = feature[key].color[name] || feature[key].color;\r\n                    }\r\n                    if (feature[key].option) {\r\n                        this._featureOption[name] = feature[key].option[name] \r\n                                                    || feature[key].option;\r\n                    }\r\n                }\r\n                this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n                this._buildBackground();\r\n                this._buildItem();\r\n\r\n                for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(this.shapeList[i]);\r\n                }\r\n                if (this._iconShapeMap['mark']) {\r\n                    this._iconDisable(this._iconShapeMap['markUndo']);\r\n                    this._iconDisable(this._iconShapeMap['markClear']);\r\n                }\r\n                if (this._iconShapeMap['dataZoomReset'] && this._zoomQueue.length === 0) {\r\n                    this._iconDisable(this._iconShapeMap['dataZoomReset']);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有图例元素\r\n         */\r\n        _buildItem: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var iconLength = this._iconList.length;\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemSize = toolboxOption.itemSize;\r\n            var itemGap = toolboxOption.itemGap;\r\n            var itemShape;\r\n\r\n            var color = toolboxOption.color instanceof Array\r\n                        ? toolboxOption.color : [toolboxOption.color];\r\n            \r\n            var textFont = this.getFont(toolboxOption.textStyle);\r\n            var textPosition;\r\n            var textAlign;\r\n            var textBaseline;\r\n            if (toolboxOption.orient === 'horizontal') {\r\n                textPosition = this._itemGroupLocation.y / this.zr.getHeight() < 0.5\r\n                               ? 'bottom' : 'top';\r\n                textAlign = this._itemGroupLocation.x / this.zr.getWidth() < 0.5\r\n                            ? 'left' : 'right';\r\n                textBaseline = this._itemGroupLocation.y / this.zr.getHeight() < 0.5\r\n                               ? 'top' : 'bottom';\r\n            }\r\n            else {\r\n                textPosition = this._itemGroupLocation.x / this.zr.getWidth() < 0.5\r\n                               ? 'right' : 'left';\r\n            }\r\n            \r\n           this._iconShapeMap = {};\r\n           var self = this;\r\n\r\n            for (var i = 0; i < iconLength; i++) {\r\n                // 图形\r\n                itemShape = {\r\n                    type: 'icon',\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        x: lastX,\r\n                        y: lastY,\r\n                        width: itemSize,\r\n                        height: itemSize,\r\n                        iconType: this._iconList[i],\r\n                        lineWidth: 1,\r\n                        strokeColor: this._featureColor[this._iconList[i]] \r\n                                     || color[i % color.length],\r\n                        brushType: 'stroke'\r\n                    },\r\n                    highlightStyle: {\r\n                        lineWidth: 1,\r\n                        text: toolboxOption.showTitle \r\n                              ? this._featureTitle[this._iconList[i]]\r\n                              : undefined,\r\n                        textFont: textFont,\r\n                        textPosition: textPosition,\r\n                        strokeColor: this._featureColor[this._iconList[i]] \r\n                                     || color[i % color.length]\r\n                    },\r\n                    hoverable: true,\r\n                    clickable: true\r\n                };\r\n                \r\n                if (this._featureIcon[this._iconList[i]]) {\r\n                    itemShape.style.image = this._featureIcon[this._iconList[i]].replace(\r\n                        new RegExp('^image:\\\\/\\\\/'), ''\r\n                    );\r\n                    itemShape.style.opacity = 0.8;\r\n                    itemShape.highlightStyle.opacity = 1;\r\n                    itemShape.type = 'image';\r\n                }\r\n                \r\n                if (toolboxOption.orient === 'horizontal') {\r\n                    // 修正左对齐第一个或右对齐最后一个\r\n                    if (i === 0 && textAlign === 'left') {\r\n                        itemShape.highlightStyle.textPosition = 'specific';\r\n                        itemShape.highlightStyle.textAlign = textAlign;\r\n                        itemShape.highlightStyle.textBaseline = textBaseline;\r\n                        itemShape.highlightStyle.textX = lastX;\r\n                        itemShape.highlightStyle.textY = textBaseline === 'top' \r\n                                                     ? lastY + itemSize + 10\r\n                                                     : lastY - 10;\r\n                    }\r\n                    if (i === iconLength - 1 && textAlign === 'right') {\r\n                        itemShape.highlightStyle.textPosition = 'specific';\r\n                        itemShape.highlightStyle.textAlign = textAlign;\r\n                        itemShape.highlightStyle.textBaseline = textBaseline;\r\n                        itemShape.highlightStyle.textX = lastX + itemSize;\r\n                        itemShape.highlightStyle.textY = textBaseline === 'top' \r\n                                                         ? lastY + itemSize + 10\r\n                                                         : lastY - 10;\r\n                    }\r\n                }\r\n                \r\n                switch(this._iconList[i]) {\r\n                    case 'mark':\r\n                        itemShape.onclick = self._onMark;\r\n                        break;\r\n                    case 'markUndo':\r\n                        itemShape.onclick = self._onMarkUndo;\r\n                        break;\r\n                    case 'markClear':\r\n                        itemShape.onclick = self._onMarkClear;\r\n                        break;\r\n                    case 'dataZoom':\r\n                        itemShape.onclick = self._onDataZoom;\r\n                        break;\r\n                    case 'dataZoomReset':\r\n                        itemShape.onclick = self._onDataZoomReset;\r\n                        break;\r\n                    case 'dataView' :\r\n                        if (!this._dataView) {\r\n                            var DataView = require('./dataView');\r\n                            this._dataView = new DataView(\r\n                                this.ecTheme, this.messageCenter, this.zr, this.option, this.myChart\r\n                            );\r\n                        }\r\n                        itemShape.onclick = self._onDataView;\r\n                        break;\r\n                    case 'restore':\r\n                        itemShape.onclick = self._onRestore;\r\n                        break;\r\n                    case 'saveAsImage':\r\n                        itemShape.onclick = self._onSaveAsImage;\r\n                        break;\r\n                    default:\r\n                        if (this._iconList[i].match('Chart')) {\r\n                            itemShape._name = this._iconList[i].replace('Chart', '');\r\n                            itemShape.onclick = self._onMagicType;\r\n                        }\r\n                        else {\r\n                            itemShape.onclick = self._onCustomHandler;\r\n                        }\r\n                        break;\r\n                }\r\n\r\n                if (itemShape.type === 'icon') {\r\n                    itemShape = new IconShape(itemShape);\r\n                }\r\n                else if (itemShape.type === 'image') {\r\n                    itemShape = new ImageShape(itemShape);\r\n                }\r\n                this.shapeList.push(itemShape);\r\n                this._iconShapeMap[this._iconList[i]] = itemShape;\r\n\r\n                if (toolboxOption.orient === 'horizontal') {\r\n                    lastX += itemSize + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemSize + itemGap;\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var padding = this.reformCssArray(this.option.toolbox.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: toolboxOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: toolboxOption.backgroundColor,\r\n                    strokeColor: toolboxOption.borderColor,\r\n                    lineWidth: toolboxOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算图例实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var padding = this.reformCssArray(this.option.toolbox.padding);\r\n            var iconLength = this._iconList.length;\r\n            var itemGap = toolboxOption.itemGap;\r\n            var itemSize = toolboxOption.itemSize;\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n\r\n            if (toolboxOption.orient === 'horizontal') {\r\n                // 水平布局，计算总宽度，别忘减去最后一个的itemGap\r\n                totalWidth = (itemSize + itemGap) * iconLength - itemGap;\r\n                totalHeight = itemSize;\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                totalHeight = (itemSize + itemGap) * iconLength - itemGap;\r\n                totalWidth = itemSize;\r\n            }\r\n\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (toolboxOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + toolboxOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - toolboxOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = toolboxOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (toolboxOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + toolboxOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - toolboxOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = toolboxOption.y - 0;\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight\r\n            };\r\n        },\r\n\r\n        __onmousemove: function (param) {\r\n            if (this._marking) {\r\n                this._markShape.style.xEnd = zrEvent.getX(param.event);\r\n                this._markShape.style.yEnd = zrEvent.getY(param.event);\r\n                this.zr.addHoverShape(this._markShape);\r\n            }\r\n            if (this._zooming) {\r\n                this._zoomShape.style.width = \r\n                    zrEvent.getX(param.event) - this._zoomShape.style.x;\r\n                this._zoomShape.style.height = \r\n                    zrEvent.getY(param.event) - this._zoomShape.style.y;\r\n                this.zr.addHoverShape(this._zoomShape);\r\n                this.dom.style.cursor = 'crosshair';\r\n                zrEvent.stop(param.event);\r\n            }\r\n            if (this._zoomStart\r\n                && (this.dom.style.cursor != 'pointer' && this.dom.style.cursor != 'move')\r\n            ) {\r\n                this.dom.style.cursor = 'crosshair';\r\n            }\r\n        },\r\n\r\n        __onmousedown: function (param) {\r\n            if (param.target) {\r\n                return;\r\n            }\r\n            this._zooming = true;\r\n            var x = zrEvent.getX(param.event);\r\n            var y = zrEvent.getY(param.event);\r\n            var zoomOption = this.option.dataZoom || {};\r\n            this._zoomShape = new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    x: x,\r\n                    y: y,\r\n                    width: 1,\r\n                    height: 1,\r\n                    brushType: 'both'\r\n                },\r\n                highlightStyle: {\r\n                    lineWidth: 2,\r\n                    color: zoomOption.fillerColor \r\n                           || ecConfig.dataZoom.fillerColor,\r\n                    strokeColor: zoomOption.handleColor \r\n                                  || ecConfig.dataZoom.handleColor,\r\n                    brushType: 'both'\r\n                }\r\n            });\r\n            this.zr.addHoverShape(this._zoomShape);\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onmouseup: function (/*param*/) {\r\n            if (!this._zoomShape \r\n                || Math.abs(this._zoomShape.style.width) < 10 \r\n                || Math.abs(this._zoomShape.style.height) < 10\r\n            ) {\r\n                this._zooming = false;\r\n                return true;\r\n            }\r\n            if (this._zooming && this.component.dataZoom) {\r\n                this._zooming = false;\r\n                \r\n                var zoom = this.component.dataZoom.rectZoom(this._zoomShape.style);\r\n                if (zoom) {\r\n                    this._zoomQueue.push({\r\n                        start: zoom.start,\r\n                        end: zoom.end,\r\n                        start2: zoom.start2,\r\n                        end2: zoom.end2\r\n                    });\r\n                    this._iconEnable(this._iconShapeMap['dataZoomReset']);\r\n                    this.zr.refreshNextFrame();\r\n                }\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onclick: function (param) {\r\n            if (param.target) {\r\n                return;\r\n            }\r\n            if (this._marking) {\r\n                this._marking = false;\r\n                this._markShapeList.push(this._markShape);\r\n                this._iconEnable(this._iconShapeMap['markUndo']);\r\n                this._iconEnable(this._iconShapeMap['markClear']);\r\n                this.zr.addShape(this._markShape);\r\n                this.zr.refreshNextFrame();\r\n            } \r\n            else if (this._markStart) {\r\n                this._marking = true;\r\n                var x = zrEvent.getX(param.event);\r\n                var y = zrEvent.getY(param.event);\r\n                this._markShape = new LineShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        xStart: x,\r\n                        yStart: y,\r\n                        xEnd: x,\r\n                        yEnd: y,\r\n                        lineWidth: this.query(\r\n                                       this.option,\r\n                                       'toolbox.feature.mark.lineStyle.width'\r\n                                   ),\r\n                        strokeColor: this.query(\r\n                                         this.option,\r\n                                         'toolbox.feature.mark.lineStyle.color'\r\n                                     ),\r\n                        lineType: this.query(\r\n                                      this.option,\r\n                                      'toolbox.feature.mark.lineStyle.type'\r\n                                  )\r\n                    }\r\n                });\r\n                this.zr.addHoverShape(this._markShape);\r\n            }\r\n        },\r\n        \r\n        __onMark: function (param) {\r\n            var target = param.target;\r\n            if (this._marking || this._markStart) {\r\n                // 取消\r\n                this._resetMark();\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            else {\r\n                // 启用Mark\r\n                this._resetZoom();   // mark与dataZoom互斥\r\n                \r\n                this.zr.modShape(target.id, {style: {strokeColor: this._enableColor}});\r\n                this.zr.refreshNextFrame();\r\n                this._markStart = true;\r\n                var self = this;\r\n                setTimeout(function (){\r\n                    self.zr\r\n                    && self.zr.on(zrConfig.EVENT.CLICK, self._onclick)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n                }, 10);\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onMarkUndo: function () {\r\n            if (this._marking) {\r\n                this._marking = false;\r\n            } else {\r\n                var len = this._markShapeList.length;\r\n                if (len >= 1) {\r\n                    var target = this._markShapeList[len - 1];\r\n                    this.zr.delShape(target.id);\r\n                    this.zr.refreshNextFrame();\r\n                    this._markShapeList.pop();\r\n                    if (len === 1) {\r\n                        this._iconDisable(this._iconShapeMap['markUndo']);\r\n                        this._iconDisable(this._iconShapeMap['markClear']);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        __onMarkClear: function () {\r\n            if (this._marking) {\r\n                this._marking = false;\r\n            }\r\n            var len = this._markShapeList.length;\r\n            if (len > 0) {\r\n                while(len--) {\r\n                    this.zr.delShape(this._markShapeList.pop().id);\r\n                }\r\n                this._iconDisable(this._iconShapeMap['markUndo']);\r\n                this._iconDisable(this._iconShapeMap['markClear']);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            return true;\r\n        },\r\n        \r\n        __onDataZoom: function (param) {\r\n            var target = param.target;\r\n            if (this._zooming || this._zoomStart) {\r\n                // 取消\r\n                this._resetZoom();\r\n                this.zr.refreshNextFrame();\r\n                this.dom.style.cursor = 'default';\r\n            }\r\n            else {\r\n                // 启用Zoom\r\n                this._resetMark();   // mark与dataZoom互斥\r\n                \r\n                this.zr.modShape(target.id, {style: {strokeColor: this._enableColor}});\r\n                this.zr.refreshNextFrame();\r\n                this._zoomStart = true;\r\n                var self = this;\r\n                setTimeout(function (){\r\n                    self.zr\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEDOWN, self._onmousedown)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEUP, self._onmouseup)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n                }, 10);\r\n                \r\n                this.dom.style.cursor = 'crosshair';\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onDataZoomReset: function () {\r\n            if (this._zooming) {\r\n                this._zooming = false;\r\n            }\r\n            this._zoomQueue.pop();\r\n            //console.log(this._zoomQueue)\r\n            if (this._zoomQueue.length > 0) {\r\n                this.component.dataZoom.absoluteZoom(\r\n                    this._zoomQueue[this._zoomQueue.length - 1]\r\n                );\r\n            }\r\n            else {\r\n                this.component.dataZoom.rectZoom();\r\n                this._iconDisable(this._iconShapeMap['dataZoomReset']);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            \r\n            return true;\r\n        },\r\n\r\n        _resetMark: function () {\r\n            this._marking = false;\r\n            if (this._markStart) {\r\n                this._markStart = false;\r\n                if (this._iconShapeMap['mark']) {\r\n                    // 还原图标为未生效状态\r\n                    this.zr.modShape(\r\n                        this._iconShapeMap['mark'].id,\r\n                        {\r\n                            style: {\r\n                                strokeColor: this._iconShapeMap['mark']\r\n                                                 .highlightStyle\r\n                                                 .strokeColor\r\n                            }\r\n                         }\r\n                    );\r\n                }\r\n                \r\n                this.zr.un(zrConfig.EVENT.CLICK, this._onclick);\r\n                this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            }\r\n        },\r\n        \r\n        _resetZoom: function () {\r\n            this._zooming = false;\r\n            if (this._zoomStart) {\r\n                this._zoomStart = false;\r\n                if (this._iconShapeMap['dataZoom']) {\r\n                    // 还原图标为未生效状态\r\n                    this.zr.modShape(\r\n                        this._iconShapeMap['dataZoom'].id,\r\n                        {\r\n                            style: {\r\n                                strokeColor: this._iconShapeMap['dataZoom']\r\n                                                 .highlightStyle\r\n                                                 .strokeColor\r\n                            }\r\n                         }\r\n                    );\r\n                }\r\n                \r\n                this.zr.un(zrConfig.EVENT.MOUSEDOWN, this._onmousedown);\r\n                this.zr.un(zrConfig.EVENT.MOUSEUP, this._onmouseup);\r\n                this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            }\r\n        },\r\n\r\n        _iconDisable: function (target) {\r\n            if (target.type != 'image') {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: false,\r\n                    clickable: false,\r\n                    style: {\r\n                        strokeColor: this._disableColor\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: false,\r\n                    clickable: false,\r\n                    style: {\r\n                        opacity: 0.3\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _iconEnable: function (target) {\r\n            if (target.type != 'image') {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: true,\r\n                    clickable: true,\r\n                    style: {\r\n                        strokeColor: target.highlightStyle.strokeColor\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: true,\r\n                    clickable: true,\r\n                    style: {\r\n                        opacity: 0.8\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        __onDataView: function () {\r\n            this._dataView.show(this.option);\r\n            return true;\r\n        },\r\n\r\n        __onRestore: function (){\r\n            this._resetMark();\r\n            this._resetZoom();\r\n            this.messageCenter.dispatch(ecConfig.EVENT.RESTORE, null, null, this.myChart);\r\n            return true;\r\n        },\r\n        \r\n        __onSaveAsImage: function () {\r\n            var saveOption = this.option.toolbox.feature.saveAsImage;\r\n            var imgType = saveOption.type || 'png';\r\n            if (imgType != 'png' && imgType != 'jpeg') {\r\n                imgType = 'png';\r\n            }\r\n            \r\n            var image;\r\n            if (!this.myChart.isConnected()) {\r\n                image = this.zr.toDataURL(\r\n                    'image/' + imgType,\r\n                    this.option.backgroundColor \r\n                    && this.option.backgroundColor.replace(' ','') === 'rgba(0,0,0,0)'\r\n                        ? '#fff' : this.option.backgroundColor\r\n                );\r\n            }\r\n            else {\r\n                image = this.myChart.getConnectedDataURL(imgType);\r\n            }\r\n             \r\n            var downloadDiv = document.createElement('div');\r\n            downloadDiv.id = '__echarts_download_wrap__';\r\n            downloadDiv.style.cssText = 'position:fixed;'\r\n                + 'z-index:99999;'\r\n                + 'display:block;'\r\n                + 'top:0;left:0;'\r\n                + 'background-color:rgba(33,33,33,0.5);'\r\n                + 'text-align:center;'\r\n                + 'width:100%;'\r\n                + 'height:100%;'\r\n                + 'line-height:' \r\n                + document.documentElement.clientHeight + 'px;';\r\n                \r\n            var downloadLink = document.createElement('a');\r\n            //downloadLink.onclick = _saveImageForIE;\r\n            downloadLink.href = image;\r\n            downloadLink.setAttribute(\r\n                'download',\r\n                (saveOption.name \r\n                 ? saveOption.name \r\n                 : (this.option.title && (this.option.title.text || this.option.title.subtext))\r\n                   ? (this.option.title.text || this.option.title.subtext)\r\n                   : 'ECharts')\r\n                + '.' + imgType \r\n            );\r\n            downloadLink.innerHTML = '<img style=\"vertical-align:middle\" src=\"' + image \r\n                + '\" title=\"'\r\n                + ((!!window.ActiveXObject || 'ActiveXObject' in window)\r\n                  ? '右键->图片另存为'\r\n                  : (saveOption.lang ? saveOption.lang[0] : '点击保存'))\r\n                + '\"/>';\r\n            \r\n            downloadDiv.appendChild(downloadLink);\r\n            document.body.appendChild(downloadDiv);\r\n            downloadLink = null;\r\n            downloadDiv = null;\r\n            \r\n            setTimeout(function (){\r\n                var _d = document.getElementById('__echarts_download_wrap__');\r\n                if (_d) {\r\n                    _d.onclick = function () {\r\n                        var d = document.getElementById(\r\n                            '__echarts_download_wrap__'\r\n                        );\r\n                        d.onclick = null;\r\n                        d.innerHTML = '';\r\n                        document.body.removeChild(d);\r\n                        d = null;\r\n                    };\r\n                    _d = null;\r\n                }\r\n            }, 500);\r\n            \r\n            /*\r\n            function _saveImageForIE() {\r\n                window.win = window.open(image);\r\n                win.document.execCommand(\"SaveAs\");\r\n                win.close()\r\n            }\r\n            */\r\n            return;\r\n        },\r\n\r\n        __onMagicType: function (param) {\r\n            this._resetMark();\r\n            var itemName = param.target._name;\r\n            if (!this._magicType[itemName]) {\r\n                // 启用\r\n                this._magicType[itemName] = true;\r\n                // 折柱互斥\r\n                if (itemName === ecConfig.CHART_TYPE_LINE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_BAR] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_BAR) {\r\n                    this._magicType[ecConfig.CHART_TYPE_LINE] = false;\r\n                }\r\n                // 饼图漏斗互斥\r\n                if (itemName === ecConfig.CHART_TYPE_PIE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_FUNNEL] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_FUNNEL) {\r\n                    this._magicType[ecConfig.CHART_TYPE_PIE] = false;\r\n                }\r\n                // 力导和弦互斥\r\n                if (itemName === ecConfig.CHART_TYPE_FORCE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_CHORD] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_CHORD) {\r\n                    this._magicType[ecConfig.CHART_TYPE_FORCE] = false;\r\n                }\r\n                // 堆积平铺互斥\r\n                if (itemName === _MAGICTYPE_STACK) {\r\n                    this._magicType[_MAGICTYPE_TILED] = false;\r\n                }\r\n                else if (itemName === _MAGICTYPE_TILED) {\r\n                    this._magicType[_MAGICTYPE_STACK] = false;\r\n                }\r\n                this.messageCenter.dispatch(\r\n                    ecConfig.EVENT.MAGIC_TYPE_CHANGED,\r\n                    param.event,\r\n                    { magicType: this._magicType },\r\n                    this.myChart\r\n                );\r\n            }\r\n            \r\n            return true;\r\n        },\r\n        \r\n        setMagicType: function (magicType) {\r\n            this._resetMark();\r\n            this._magicType = magicType;\r\n            \r\n            !this._isSilence && this.messageCenter.dispatch(\r\n                ecConfig.EVENT.MAGIC_TYPE_CHANGED,\r\n                null,\r\n                { magicType: this._magicType },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        // 用户自定义扩展toolbox方法\r\n        __onCustomHandler: function (param) {\r\n            var target = param.target.style.iconType;\r\n            var featureHandler = this.option.toolbox.feature[target].onclick;\r\n            if (typeof featureHandler === 'function') {\r\n                featureHandler.call(this, this.option);\r\n            }\r\n        },\r\n\r\n        // 重置备份还原状态等\r\n        reset: function (newOption, isRestore) {\r\n            isRestore && this.clear();\r\n            \r\n            if (this.query(newOption, 'toolbox.show')\r\n                && this.query(newOption, 'toolbox.feature.magicType.show')\r\n            ) {\r\n                var magicType = newOption.toolbox.feature.magicType.type;\r\n                var len = magicType.length;\r\n                this._magicMap = {};     // 标识可控类型\r\n                while (len--) {\r\n                    this._magicMap[magicType[len]] = true;\r\n                }\r\n\r\n                len = newOption.series.length;\r\n                var oriType;        // 备份还原可控类型\r\n                var axis;\r\n                while (len--) {\r\n                    oriType = newOption.series[len].type;\r\n                    if (this._magicMap[oriType]) {\r\n                        axis = newOption.xAxis instanceof Array\r\n                               ? newOption.xAxis[newOption.series[len].xAxisIndex || 0]\r\n                               : newOption.xAxis;\r\n                        if (axis && (axis.type || 'category') === 'category') {\r\n                            axis.__boundaryGap = axis.boundaryGap != null\r\n                                                 ? axis.boundaryGap : true;\r\n                        }\r\n                        axis = newOption.yAxis instanceof Array\r\n                               ? newOption.yAxis[newOption.series[len].yAxisIndex || 0]\r\n                               : newOption.yAxis;\r\n                        if (axis && axis.type === 'category') {\r\n                            axis.__boundaryGap = axis.boundaryGap != null\r\n                                                 ? axis.boundaryGap : true;\r\n                        }\r\n                        newOption.series[len].__type = oriType;\r\n                        // 避免不同类型图表类型的样式污染\r\n                        newOption.series[len].__itemStyle = zrUtil.clone(\r\n                            newOption.series[len].itemStyle || {}\r\n                        );\r\n                    }\r\n                    \r\n                    if (this._magicMap[_MAGICTYPE_STACK] || this._magicMap[_MAGICTYPE_TILED]) {\r\n                        newOption.series[len].__stack = newOption.series[len].stack;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            this._magicType = isRestore ? {} : (this._magicType || {});\r\n            for (var itemName in this._magicType) {\r\n                if (this._magicType[itemName]) {\r\n                    this.option = newOption;\r\n                    this.getMagicOption();\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            // 框选缩放\r\n            var zoomOption = newOption.dataZoom;\r\n            if (zoomOption && zoomOption.show) {\r\n                var start = zoomOption.start != null\r\n                            && zoomOption.start >= 0\r\n                            && zoomOption.start <= 100\r\n                            ? zoomOption.start : 0;\r\n                var end = zoomOption.end != null\r\n                          && zoomOption.end >= 0\r\n                          && zoomOption.end <= 100\r\n                          ? zoomOption.end : 100;\r\n                if (start > end) {\r\n                    // 大小颠倒自动翻转\r\n                    start = start + end;\r\n                    end = start - end;\r\n                    start = start - end;\r\n                }\r\n                this._zoomQueue = [{\r\n                    start: start,\r\n                    end: end,\r\n                    start2: 0,\r\n                    end2: 100\r\n                }];\r\n            }\r\n            else {\r\n                this._zoomQueue = [];\r\n            }\r\n        },\r\n        \r\n        getMagicOption: function (){\r\n            var axis;\r\n            var chartType;\r\n            if (this._magicType[ecConfig.CHART_TYPE_LINE] \r\n                || this._magicType[ecConfig.CHART_TYPE_BAR]\r\n            ) {\r\n                // 图表类型有折柱切换\r\n                var boundaryGap = this._magicType[ecConfig.CHART_TYPE_LINE] ? false : true;\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    chartType = this.option.series[i].type;\r\n                    if (chartType == ecConfig.CHART_TYPE_LINE\r\n                        || chartType == ecConfig.CHART_TYPE_BAR\r\n                    ) {\r\n                        axis = this.option.xAxis instanceof Array\r\n                               ? this.option.xAxis[this.option.series[i].xAxisIndex || 0]\r\n                               : this.option.xAxis;\r\n                        if (axis && (axis.type || 'category') === 'category') {\r\n                            axis.boundaryGap = boundaryGap ? true : axis.__boundaryGap;\r\n                        }\r\n                        axis = this.option.yAxis instanceof Array\r\n                               ? this.option.yAxis[this.option.series[i].yAxisIndex || 0]\r\n                               : this.option.yAxis;\r\n                        if (axis && axis.type === 'category') {\r\n                            axis.boundaryGap = boundaryGap ? true : axis.__boundaryGap;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                this._defaultMagic(ecConfig.CHART_TYPE_LINE, ecConfig.CHART_TYPE_BAR);\r\n            }\r\n            this._defaultMagic(ecConfig.CHART_TYPE_CHORD, ecConfig.CHART_TYPE_FORCE);\r\n            this._defaultMagic(ecConfig.CHART_TYPE_PIE, ecConfig.CHART_TYPE_FUNNEL);\r\n            \r\n            if (this._magicType[_MAGICTYPE_STACK] || this._magicType[_MAGICTYPE_TILED]) {\r\n                // 有堆积平铺切换\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    if (this._magicType[_MAGICTYPE_STACK]) {\r\n                        // 启用堆积\r\n                        this.option.series[i].stack = '_ECHARTS_STACK_KENER_2014_';\r\n                        chartType = _MAGICTYPE_STACK;\r\n                    }\r\n                    else if (this._magicType[_MAGICTYPE_TILED]) {\r\n                        // 启用平铺\r\n                        this.option.series[i].stack = null;\r\n                        chartType = _MAGICTYPE_TILED;\r\n                    }\r\n                    if (this._featureOption[chartType + 'Chart']) {\r\n                        zrUtil.merge(\r\n                            this.option.series[i],\r\n                            this._featureOption[chartType + 'Chart'] || {},\r\n                            true\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            return this.option;\r\n        },\r\n        \r\n        _defaultMagic : function(cType1, cType2) {\r\n            if (this._magicType[cType1] || this._magicType[cType2]) {\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    var chartType = this.option.series[i].type;\r\n                    if (chartType == cType1 || chartType == cType2) {\r\n                        this.option.series[i].type = this._magicType[cType1] ? cType1 : cType2;\r\n                        // 避免不同类型图表类型的样式污染\r\n                        this.option.series[i].itemStyle = zrUtil.clone(\r\n                            this.option.series[i].__itemStyle\r\n                        );\r\n                        chartType = this.option.series[i].type;\r\n                        if (this._featureOption[chartType + 'Chart']) {\r\n                            zrUtil.merge(\r\n                                this.option.series[i],\r\n                                this._featureOption[chartType + 'Chart'] || {},\r\n                                true\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        silence: function (s) {\r\n            this._isSilence = s;\r\n        },\r\n        \r\n        resize: function () {\r\n            this._resetMark();\r\n            this.clear();\r\n            if (this.option && this.option.toolbox && this.option.toolbox.show) {\r\n               this._buildShape();\r\n            }\r\n            if (this._dataView) {\r\n                this._dataView.resize();\r\n            }\r\n        },\r\n\r\n        hideDataView: function () {\r\n            if (this._dataView) {\r\n                this._dataView.hide();\r\n            }\r\n        },\r\n        \r\n        clear: function(notMark) {\r\n            if (this.zr) {\r\n                this.zr.delShape(this.shapeList);\r\n                this.shapeList = [];\r\n                \r\n                if (!notMark) {\r\n                    this.zr.delShape(this._markShapeList);\r\n                    this._markShapeList = [];\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        onbeforDispose: function () {\r\n            if (this._dataView) {\r\n                this._dataView.dispose();\r\n                this._dataView = null;\r\n            }\r\n            this._markShapeList = null;\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this._resetMark();\r\n                this._resetZoom();\r\n                \r\n                newOption.toolbox = this.reformOption(newOption.toolbox);\r\n                this.option = newOption;\r\n                \r\n                this.clear(true);\r\n    \r\n                if (newOption.toolbox.show) {\r\n                    this._buildShape();\r\n                }\r\n    \r\n                this.hideDataView();\r\n            }\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Toolbox, Base);\r\n    \r\n    require('../component').define('toolbox', Toolbox);\r\n    \r\n    return Toolbox;\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/toolbox.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\r\n * echarts组件：提示框\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n\r\n    var ecConfig = require('../config');\r\n    var zrUtil = require('zrender/tool/util');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 提示框参数\r\n     * @param {HtmlElement} dom 目标对象\r\n     */\r\n    function DataView(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.dom = myChart.dom;\r\n        \r\n        // dataview dom & css\r\n        this._tDom = document.createElement('div');\r\n        this._textArea = document.createElement('textArea');\r\n        this._buttonRefresh = document.createElement('button');\r\n        this._buttonClose = document.createElement('button');\r\n        this._hasShow = false;\r\n\r\n        // 缓存一些高宽数据\r\n        this._zrHeight = zr.getHeight();\r\n        this._zrWidth = zr.getWidth();\r\n    \r\n        this._tDom.className = 'echarts-dataview';\r\n        this.hide();\r\n        this.dom.firstChild.appendChild(this._tDom);\r\n\r\n        if (window.addEventListener) {\r\n            this._tDom.addEventListener('click', this._stop);\r\n            this._tDom.addEventListener('mousewheel', this._stop);\r\n            this._tDom.addEventListener('mousemove', this._stop);\r\n            this._tDom.addEventListener('mousedown', this._stop);\r\n            this._tDom.addEventListener('mouseup', this._stop);\r\n\r\n            // mobile支持\r\n            this._tDom.addEventListener('touchstart', this._stop);\r\n            this._tDom.addEventListener('touchmove', this._stop);\r\n            this._tDom.addEventListener('touchend', this._stop);\r\n        }\r\n        else {\r\n            this._tDom.attachEvent('onclick', this._stop);\r\n            this._tDom.attachEvent('onmousewheel', this._stop);\r\n            this._tDom.attachEvent('onmousemove', this._stop);\r\n            this._tDom.attachEvent('onmousedown', this._stop);\r\n            this._tDom.attachEvent('onmouseup', this._stop);\r\n        }\r\n    }\r\n    \r\n    DataView.prototype = {\r\n        type : ecConfig.COMPONENT_TYPE_DATAVIEW,\r\n        _lang : ['Data View', 'close', 'refresh'],\r\n        // 通用样式\r\n        _gCssText : 'position:absolute;'\r\n                    + 'display:block;'\r\n                    + 'overflow:hidden;'\r\n                    + 'transition:height 0.8s,background-color 1s;'\r\n                    + '-moz-transition:height 0.8s,background-color 1s;'\r\n                    + '-webkit-transition:height 0.8s,background-color 1s;'\r\n                    + '-o-transition:height 0.8s,background-color 1s;'\r\n                    + 'z-index:1;'\r\n                    + 'left:0;'\r\n                    + 'top:0;',\r\n        hide : function () {\r\n            this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                           + 'height:' + 0 + 'px;'\r\n                           + 'background-color:#f0ffff;';\r\n            this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n            // 这是个很恶心的事情\r\n            /*\r\n            this.dom.onselectstart = function () {\r\n                return false;\r\n            };\r\n            */\r\n        },\r\n\r\n        show : function (newOption) {\r\n            this._hasShow = true;\r\n            var lang = this.query(this.option, 'toolbox.feature.dataView.lang')\r\n                       || this._lang;\r\n\r\n            this.option = newOption;\r\n\r\n            this._tDom.innerHTML = '<p style=\"padding:8px 0;margin:0 0 10px 0;'\r\n                              + 'border-bottom:1px solid #eee\">'\r\n                              + (lang[0] || this._lang[0])\r\n                              + '</p>';\r\n\r\n            var customContent = this.query(\r\n                this.option, 'toolbox.feature.dataView.optionToContent'\r\n            );\r\n            if (typeof customContent != 'function') {\r\n                this._textArea.value = this._optionToContent();\r\n            }\r\n            else {\r\n                // innerHTML the custom optionToContent;\r\n                this._textArea = document.createElement('div');\r\n                this._textArea.innerHTML = customContent(this.option);\r\n            }\r\n\r\n            this._textArea.style.cssText =\r\n                'display:block;margin:0 0 8px 0;padding:4px 6px;overflow:auto;'\r\n                + 'width:100%;'\r\n                + 'height:' + (this._zrHeight - 100) + 'px;';\r\n\r\n            this._tDom.appendChild(this._textArea);\r\n\r\n            this._buttonClose.style.cssText = 'float:right;padding:1px 6px;';\r\n            this._buttonClose.innerHTML = lang[1] || this._lang[1];\r\n            var self = this;\r\n            this._buttonClose.onclick = function (){\r\n                self.hide();\r\n            };\r\n            this._tDom.appendChild(this._buttonClose);\r\n\r\n            if (this.query(this.option, 'toolbox.feature.dataView.readOnly')\r\n                === false\r\n            ) {\r\n                this._buttonRefresh.style.cssText =\r\n                    'float:right;margin-right:10px;padding:1px 6px;';\r\n                this._buttonRefresh.innerHTML = lang[2] || this._lang[2];\r\n                this._buttonRefresh.onclick = function (){\r\n                    self._save();\r\n                };\r\n                this._textArea.readOnly = false;\r\n                this._textArea.style.cursor = 'default';\r\n            }\r\n            else {\r\n                this._buttonRefresh.style.cssText =\r\n                    'display:none';\r\n                this._textArea.readOnly = true;\r\n                this._textArea.style.cursor = 'text';\r\n            }\r\n            this._tDom.appendChild(this._buttonRefresh);\r\n\r\n            this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                           + 'height:' + this._zrHeight + 'px;'\r\n                           + 'background-color:#fff;';\r\n            this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n            // 这是个很恶心的事情\r\n            /*\r\n            this.dom.onselectstart = function () {\r\n                return true;\r\n            };\r\n            */\r\n        },\r\n\r\n        _optionToContent : function () {\r\n            var i;\r\n            var j;\r\n            var k;\r\n            var len;\r\n            var data;\r\n            var valueList;\r\n            var axisList = [];\r\n            var content = '';\r\n            if (this.option.xAxis) {\r\n                if (this.option.xAxis instanceof Array) {\r\n                    axisList = this.option.xAxis;\r\n                } else {\r\n                    axisList = [this.option.xAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    // 横纵默认为类目\r\n                    if ((axisList[i].type || 'category') == 'category') {\r\n                        valueList = [];\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            valueList.push(this.getDataFromOption(axisList[i].data[j]));\r\n                        }\r\n                        content += valueList.join(', ') + '\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.option.yAxis) {\r\n                if (this.option.yAxis instanceof Array) {\r\n                    axisList = this.option.yAxis;\r\n                } else {\r\n                    axisList = [this.option.yAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    if (axisList[i].type  == 'category') {\r\n                        valueList = [];\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            valueList.push(this.getDataFromOption(axisList[i].data[j]));\r\n                        }\r\n                        content += valueList.join(', ') + '\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            var series = this.option.series;\r\n            var itemName;\r\n            for (i = 0, len = series.length; i < len; i++) {\r\n                valueList = [];\r\n                for (j = 0, k = series[i].data.length; j < k; j++) {\r\n                    data = series[i].data[j];\r\n                    if (series[i].type == ecConfig.CHART_TYPE_PIE\r\n                        || series[i].type == ecConfig.CHART_TYPE_MAP\r\n                    ) {\r\n                        itemName = (data.name || '-') + ':';\r\n                    }\r\n                    else {\r\n                        itemName = '';\r\n                    }\r\n                    \r\n                    if (series[i].type == ecConfig.CHART_TYPE_SCATTER) {\r\n                        data = this.getDataFromOption(data).join(', ');\r\n                    }\r\n                    valueList.push(itemName + this.getDataFromOption(data));\r\n                }\r\n                content += (series[i].name || '-') + ' : \\n';\r\n                content += valueList.join(\r\n                    series[i].type == ecConfig.CHART_TYPE_SCATTER ? '\\n': ', '\r\n                );\r\n                content += '\\n\\n';\r\n            }\r\n\r\n            return content;\r\n        },\r\n\r\n        _save : function () {\r\n            var customContent = this.query(\r\n                this.option, 'toolbox.feature.dataView.contentToOption'\r\n            );\r\n            if (typeof customContent != 'function') {\r\n                var text = this._textArea.value.split('\\n');\r\n                var content = [];\r\n                for (var i = 0, l = text.length; i < l; i++) {\r\n                    text[i] = this._trim(text[i]);\r\n                    if (text[i] !== '') {\r\n                        content.push(text[i]);\r\n                    }\r\n                }\r\n                this._contentToOption(content);\r\n            }\r\n            else {\r\n                // return the textArea dom for custom contentToOption\r\n                customContent(this._textArea, this.option);\r\n            }\r\n\r\n            this.hide();\r\n            \r\n            var self = this;\r\n            setTimeout(\r\n                function (){\r\n                    self.messageCenter && self.messageCenter.dispatch(\r\n                        ecConfig.EVENT.DATA_VIEW_CHANGED,\r\n                        null,\r\n                        {option : self.option},\r\n                        self.myChart\r\n                    );\r\n                },\r\n                // 有动画，所以高级浏览器时间更长点\r\n                self.canvasSupported ? 800 : 100\r\n            );\r\n        },\r\n\r\n        _contentToOption : function (content) {\r\n            var i;\r\n            var j;\r\n            var k;\r\n            var len;\r\n            var data;\r\n            var axisList = [];\r\n\r\n            var contentIdx = 0;\r\n            var contentValueList;\r\n            var value;\r\n\r\n            if (this.option.xAxis) {\r\n                if (this.option.xAxis instanceof Array) {\r\n                    axisList = this.option.xAxis;\r\n                } else {\r\n                    axisList = [this.option.xAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    // 横纵默认为类目\r\n                    if ((axisList[i].type || 'category') == 'category'\r\n                    ) {\r\n                        contentValueList = content[contentIdx].split(',');\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            value = this._trim(contentValueList[j] || '');\r\n                            data = axisList[i].data[j];\r\n                            if (typeof axisList[i].data[j].value != 'undefined'\r\n                            ) {\r\n                                axisList[i].data[j].value = value;\r\n                            }\r\n                            else {\r\n                                axisList[i].data[j] = value;\r\n                            }\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.option.yAxis) {\r\n                if (this.option.yAxis instanceof Array) {\r\n                    axisList = this.option.yAxis;\r\n                } else {\r\n                    axisList = [this.option.yAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    if (axisList[i].type  == 'category') {\r\n                        contentValueList = content[contentIdx].split(',');\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            value = this._trim(contentValueList[j] || '');\r\n                            data = axisList[i].data[j];\r\n                            if (typeof axisList[i].data[j].value != 'undefined'\r\n                            ) {\r\n                                axisList[i].data[j].value = value;\r\n                            }\r\n                            else {\r\n                                axisList[i].data[j] = value;\r\n                            }\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var series = this.option.series;\r\n            for (i = 0, len = series.length; i < len; i++) {\r\n                contentIdx++;\r\n                if (series[i].type == ecConfig.CHART_TYPE_SCATTER) {\r\n                    for (var j = 0, k = series[i].data.length; j < k; j++) {\r\n                        contentValueList = content[contentIdx];\r\n                        value = contentValueList.replace(' ','').split(',');\r\n                        if (typeof series[i].data[j].value != 'undefined'\r\n                        ) {\r\n                            series[i].data[j].value = value;\r\n                        }\r\n                        else {\r\n                            series[i].data[j] = value;\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n                else {\r\n                    contentValueList = content[contentIdx].split(',');\r\n                    for (var j = 0, k = series[i].data.length; j < k; j++) {\r\n                        value = (contentValueList[j] || '').replace(/.*:/,'');\r\n                        value = this._trim(value);\r\n                        value = (value != '-' && value !== '')\r\n                                ? (value - 0)\r\n                                : '-';\r\n                        if (typeof series[i].data[j].value != 'undefined'\r\n                        ) {\r\n                            series[i].data[j].value = value;\r\n                        }\r\n                        else {\r\n                            series[i].data[j] = value;\r\n                        }\r\n                    }\r\n                    contentIdx++;\r\n                }\r\n            }\r\n        },\r\n\r\n        _trim : function (str){\r\n            var trimer = new RegExp(\r\n                '(^[\\\\s\\\\t\\\\xa0\\\\u3000]+)|([\\\\u3000\\\\xa0\\\\s\\\\t]+\\x24)', 'g'\r\n            );\r\n            return str.replace(trimer, '');\r\n        },\r\n\r\n        // 阻塞zrender事件\r\n        _stop : function (e){\r\n            e = e || window.event;\r\n            if (e.stopPropagation) {\r\n                e.stopPropagation();\r\n            }\r\n            else {\r\n                e.cancelBubble = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * zrender事件响应：窗口大小改变\r\n         */\r\n        resize : function () {\r\n            this._zrHeight = this.zr.getHeight();\r\n            this._zrWidth = this.zr.getWidth();\r\n            if (this._tDom.offsetHeight > 10) {\r\n                this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                               + 'height:' + this._zrHeight + 'px;'\r\n                               + 'background-color:#fff;';\r\n                this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n                this._textArea.style.cssText = 'display:block;margin:0 0 8px 0;'\r\n                                        + 'padding:4px 6px;overflow:auto;'\r\n                                        + 'width:100%;'\r\n                                        + 'height:' + (this._zrHeight - 100) + 'px;';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        dispose : function () {\r\n            if (window.removeEventListener) {\r\n                this._tDom.removeEventListener('click', this._stop);\r\n                this._tDom.removeEventListener('mousewheel', this._stop);\r\n                this._tDom.removeEventListener('mousemove', this._stop);\r\n                this._tDom.removeEventListener('mousedown', this._stop);\r\n                this._tDom.removeEventListener('mouseup', this._stop);\r\n\r\n                // mobile支持\r\n                this._tDom.removeEventListener('touchstart', this._stop);\r\n                this._tDom.removeEventListener('touchmove', this._stop);\r\n                this._tDom.removeEventListener('touchend', this._stop);\r\n            }\r\n            else {\r\n                this._tDom.detachEvent('onclick', this._stop);\r\n                this._tDom.detachEvent('onmousewheel', this._stop);\r\n                this._tDom.detachEvent('onmousemove', this._stop);\r\n                this._tDom.detachEvent('onmousedown', this._stop);\r\n                this._tDom.detachEvent('onmouseup', this._stop);\r\n            }\r\n\r\n            this._buttonRefresh.onclick = null;\r\n            this._buttonClose.onclick = null;\r\n\r\n            if (this._hasShow) {\r\n                this._tDom.removeChild(this._textArea);\r\n                this._tDom.removeChild(this._buttonRefresh);\r\n                this._tDom.removeChild(this._buttonClose);\r\n            }\r\n\r\n            this._textArea = null;\r\n            this._buttonRefresh = null;\r\n            this._buttonClose = null;\r\n\r\n            this.dom.firstChild.removeChild(this._tDom);\r\n            this._tDom = null;\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(DataView, Base);\r\n    \r\n    require('../component').define('dataView', DataView);\r\n    \r\n    return DataView;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/dataView.js\n ** module id = 63\n ** module chunks = 0\n **/","/**\r\n * echart组件库\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (/*require*/) {     // component\r\n    var self = {};\r\n\r\n    var _componentLibrary = {};     // echart组件库\r\n\r\n    /**\r\n     * 定义图形实现\r\n     * @param {Object} name\r\n     * @param {Object} clazz 图形实现\r\n     */\r\n    self.define = function (name, clazz) {\r\n        _componentLibrary[name] = clazz;\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * 获取图形实现\r\n     * @param {Object} name\r\n     */\r\n    self.get = function (name) {\r\n        return _componentLibrary[name];\r\n    };\r\n    \r\n    return self;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component.js\n ** module id = 64\n ** module chunks = 0\n **/","/**\r\n * echarts组件：图表标题\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var TextShape = require('zrender/shape/Text');\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n    \r\n    var ecConfig = require('../config');\r\n    // 图表标题\r\n    ecConfig.title = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 6,                       // 二级层叠\r\n        show: true,\r\n        text: '',\r\n        // link: null,             // 超链接跳转\r\n        // target: null,           // 仅支持self | blank\r\n        subtext: '',\r\n        // sublink: null,          // 超链接跳转\r\n        // subtarget: null,        // 仅支持self | blank\r\n        x: 'left',                 // 水平安放位置，默认为左对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        //textAlign: null          // 水平对齐方式，默认根据x设置自动调整\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 标题边框颜色\r\n        borderWidth: 0,            // 标题边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 标题内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 5,                // 主副标题纵向间隔，单位px，默认为10，\r\n        textStyle: {\r\n            fontSize: 18,\r\n            fontWeight: 'bolder',\r\n            color: '#333'          // 主标题文字颜色\r\n        },\r\n        subtextStyle: {\r\n            color: '#aaa'          // 副标题文字颜色\r\n        }\r\n    };\r\n    \r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrArea = require('zrender/tool/area');\r\n    var zrColor = require('zrender/tool/color');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Title(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    Title.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TITLE,\r\n        _buildShape: function () {\r\n            if (!this.titleOption.show) {\r\n                return;\r\n            }\r\n            // 标题元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n            this._buildBackground();\r\n            this._buildItem();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有标题元素\r\n         */\r\n        _buildItem: function () {\r\n            var text = this.titleOption.text;\r\n            var link = this.titleOption.link;\r\n            var target = this.titleOption.target;\r\n            var subtext = this.titleOption.subtext;\r\n            var sublink = this.titleOption.sublink;\r\n            var subtarget = this.titleOption.subtarget;\r\n            var font = this.getFont(this.titleOption.textStyle);\r\n            var subfont = this.getFont(this.titleOption.subtextStyle);\r\n            \r\n            var x = this._itemGroupLocation.x;\r\n            var y = this._itemGroupLocation.y;\r\n            var width = this._itemGroupLocation.width;\r\n            var height = this._itemGroupLocation.height;\r\n            \r\n            var textShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    y: y,\r\n                    color: this.titleOption.textStyle.color,\r\n                    text: text,\r\n                    textFont: font,\r\n                    textBaseline: 'top'\r\n                },\r\n                highlightStyle: {\r\n                    color: zrColor.lift(this.titleOption.textStyle.color, 1),\r\n                    brushType: 'fill'\r\n                },\r\n                hoverable: false\r\n            };\r\n            if (link) {\r\n                textShape.hoverable = true;\r\n                textShape.clickable = true;\r\n                textShape.onclick = function (){\r\n                    if (!target || target != 'self') {\r\n                        window.open(link);\r\n                    }\r\n                    else {\r\n                        window.location = link;\r\n                    }\r\n                };\r\n            }\r\n            \r\n            var subtextShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    y: y + height,\r\n                    color: this.titleOption.subtextStyle.color,\r\n                    text: subtext,\r\n                    textFont: subfont,\r\n                    textBaseline: 'bottom'\r\n                },\r\n                highlightStyle: {\r\n                    color: zrColor.lift(this.titleOption.subtextStyle.color, 1),\r\n                    brushType: 'fill'\r\n                },\r\n                hoverable: false\r\n            };\r\n            if (sublink) {\r\n                subtextShape.hoverable = true;\r\n                subtextShape.clickable = true;\r\n                subtextShape.onclick = function (){\r\n                    if (!subtarget || subtarget != 'self') {\r\n                        window.open(sublink);\r\n                    }\r\n                    else {\r\n                        window.location = sublink;\r\n                    }\r\n                };\r\n            }\r\n\r\n            switch (this.titleOption.x) {\r\n                case 'center' :\r\n                    textShape.style.x = subtextShape.style.x = x + width / 2;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'center';\r\n                    break;\r\n                case 'left' :\r\n                    textShape.style.x = subtextShape.style.x = x;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'left';\r\n                    break;\r\n                case 'right' :\r\n                    textShape.style.x = subtextShape.style.x = x + width;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'right';\r\n                    break;\r\n                default :\r\n                    x = this.titleOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    textShape.style.x = subtextShape.style.x = x;\r\n                    break;\r\n            }\r\n            \r\n            if (this.titleOption.textAlign) {\r\n                textShape.style.textAlign = subtextShape.style.textAlign \r\n                                          = this.titleOption.textAlign;\r\n            }\r\n\r\n            this.shapeList.push(new TextShape(textShape));\r\n            subtext !== '' && this.shapeList.push(new TextShape(subtextShape));\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var padding = this.reformCssArray(this.titleOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: this.titleOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: this.titleOption.backgroundColor,\r\n                    strokeColor: this.titleOption.borderColor,\r\n                    lineWidth: this.titleOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算标题实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var padding = this.reformCssArray(this.titleOption.padding);\r\n            var text = this.titleOption.text;\r\n            var subtext = this.titleOption.subtext;\r\n            var font = this.getFont(this.titleOption.textStyle);\r\n            var subfont = this.getFont(this.titleOption.subtextStyle);\r\n            \r\n            var totalWidth = Math.max(\r\n                    zrArea.getTextWidth(text, font),\r\n                    zrArea.getTextWidth(subtext, subfont)\r\n                );\r\n            var totalHeight = zrArea.getTextHeight(text, font)\r\n                              + (subtext === ''\r\n                                 ? 0\r\n                                 : (this.titleOption.itemGap\r\n                                    + zrArea.getTextHeight(subtext, subfont))\r\n                                );\r\n\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (this.titleOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.titleOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - this.titleOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = this.titleOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (this.titleOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.titleOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - this.titleOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.titleOption.y - 0;\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight\r\n            };\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n\r\n                this.option.title = this.reformOption(this.option.title);\r\n                this.titleOption = this.option.title;\r\n                this.titleOption.textStyle = this.getTextStyle(\r\n                    this.titleOption.textStyle\r\n                );\r\n                this.titleOption.subtextStyle = this.getTextStyle(\r\n                    this.titleOption.subtextStyle\r\n                );\r\n            }\r\n            \r\n            this.clear();\r\n            this._buildShape();\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Title, Base);\r\n    \r\n    require('../component').define('title', Title);\r\n    \r\n    return Title;\r\n});\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/title.js\n ** module id = 65\n ** module chunks = 0\n **/","/**\r\n * echarts组件：提示框\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var CrossShape = require('../util/shape/Cross');\r\n    var LineShape = require('zrender/shape/Line');\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n    var rectangleInstance = new RectangleShape({});\r\n    \r\n    var ecConfig = require('../config');\r\n    // 提示框\r\n    ecConfig.tooltip = {\r\n        zlevel: 1,                  // 一级层叠，频繁变化的tooltip指示器在pc上独立一层\r\n        z: 8,                       // 二级层叠\r\n        show: true,\r\n        showContent: true,         // tooltip主体内容\r\n        trigger: 'item',           // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\r\n        // position: null          // 位置 {Array} | {Function}\r\n        // formatter: null         // 内容格式器：{string}（Template） ¦ {Function}\r\n        islandFormatter: '{a} <br/>{b} : {c}',  // 数据孤岛内容格式器\r\n        showDelay: 20,             // 显示延迟，添加显示延迟可以避免频繁切换，单位ms\r\n        hideDelay: 100,            // 隐藏延迟，单位ms\r\n        transitionDuration: 0.4,   // 动画变换时间，单位s\r\n        enterable: false,\r\n        backgroundColor: 'rgba(0,0,0,0.7)',     // 提示背景颜色，默认为透明度为0.7的黑色\r\n        borderColor: '#333',       // 提示边框颜色\r\n        borderRadius: 4,           // 提示边框圆角，单位px，默认为4\r\n        borderWidth: 0,            // 提示边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 提示内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        axisPointer: {             // 坐标轴指示器，坐标轴触发有效\r\n            type: 'line',          // 默认为直线，可选为：'line' | 'shadow' | 'cross'\r\n            lineStyle: {           // 直线指示器样式设置\r\n                color: '#48b',\r\n                width: 2,\r\n                type: 'solid'\r\n            },\r\n            crossStyle: {\r\n                color: '#1e90ff',\r\n                width: 1,\r\n                type: 'dashed'\r\n            },\r\n            shadowStyle: {                      // 阴影指示器样式设置\r\n                color: 'rgba(150,150,150,0.3)', // 阴影颜色\r\n                width: 'auto',                  // 阴影大小\r\n                type: 'default'\r\n            }\r\n        },\r\n        textStyle: {\r\n            color: '#fff'\r\n        }\r\n    };\r\n\r\n    var ecData = require('../util/ecData');\r\n    var zrConfig = require('zrender/config');\r\n    var zrEvent = require('zrender/tool/event');\r\n    var zrArea = require('zrender/tool/area');\r\n    var zrColor = require('zrender/tool/color');\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrShapeBase = require('zrender/shape/Base');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 提示框参数\r\n     * @param {HtmlElement} dom 目标对象\r\n     * @param {ECharts} myChart 当前图表实例\r\n     */\r\n    function Tooltip(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.dom = myChart.dom;\r\n        \r\n        var self = this;\r\n        self._onmousemove = function (param) {\r\n            return self.__onmousemove(param);\r\n        };\r\n        self._onglobalout = function (param) {\r\n            return self.__onglobalout(param);\r\n        };\r\n        \r\n        this.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n        this.zr.on(zrConfig.EVENT.GLOBALOUT, self._onglobalout);\r\n\r\n        self._hide = function (param) {\r\n            return self.__hide(param);\r\n        };\r\n        self._tryShow = function(param) {\r\n            return self.__tryShow(param);\r\n        };\r\n        self._refixed = function(param) {\r\n            return self.__refixed(param);\r\n        };\r\n        \r\n        self._setContent = function(ticket, res) {\r\n            return self.__setContent(ticket, res);\r\n        };\r\n        \r\n        this._tDom = this._tDom || document.createElement('div');\r\n        // 避免拖拽时页面选中的尴尬\r\n        this._tDom.onselectstart = function() {\r\n            return false;\r\n        };\r\n        this._tDom.onmouseover = function() {\r\n            self._mousein = true;\r\n        };\r\n        this._tDom.onmouseout = function() {\r\n            self._mousein = false;\r\n        };\r\n        this._tDom.className = 'echarts-tooltip';\r\n        this._tDom.style.position = 'absolute';  // 不是多余的，别删！\r\n        this.hasAppend = false;\r\n        \r\n        this._axisLineShape && this.zr.delShape(this._axisLineShape.id);\r\n        this._axisLineShape = new LineShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: this.getZBase(),\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisLineShape);\r\n        this.zr.addShape(this._axisLineShape);\r\n        \r\n        this._axisShadowShape && this.zr.delShape(this._axisShadowShape.id);\r\n        this._axisShadowShape = new LineShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: 1,                      // grid上，chart下\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisShadowShape);\r\n        this.zr.addShape(this._axisShadowShape);\r\n        \r\n        this._axisCrossShape && this.zr.delShape(this._axisCrossShape.id);\r\n        this._axisCrossShape = new CrossShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: this.getZBase(),\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisCrossShape);\r\n        this.zr.addShape(this._axisCrossShape);\r\n        \r\n        this.showing = false;\r\n        this.refresh(option);\r\n    }\r\n    \r\n    Tooltip.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TOOLTIP,\r\n        // 通用样式\r\n        _gCssText: 'position:absolute;display:block;border-style:solid;white-space:nowrap;',\r\n        /**\r\n         * 根据配置设置dom样式\r\n         */\r\n        _style: function (opt) {\r\n            if (!opt) {\r\n                return '';\r\n            }\r\n            var cssText = [];\r\n            if (opt.transitionDuration) {\r\n                var transitionText = 'left ' + opt.transitionDuration + 's,'\r\n                                    + 'top ' + opt.transitionDuration + 's';\r\n                cssText.push(\r\n                    'transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-moz-transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-webkit-transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-o-transition:' + transitionText\r\n                );\r\n            }\r\n\r\n            if (opt.backgroundColor) {\r\n                // for sb ie~\r\n                cssText.push(\r\n                    'background-Color:' + zrColor.toHex(\r\n                        opt.backgroundColor\r\n                    )\r\n                );\r\n                cssText.push('filter:alpha(opacity=70)');\r\n                cssText.push('background-Color:' + opt.backgroundColor);\r\n            }\r\n\r\n            if (opt.borderWidth != null) {\r\n                cssText.push('border-width:' + opt.borderWidth + 'px');\r\n            }\r\n\r\n            if (opt.borderColor != null) {\r\n                cssText.push('border-color:' + opt.borderColor);\r\n            }\r\n\r\n            if (opt.borderRadius != null) {\r\n                cssText.push(\r\n                    'border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-moz-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-webkit-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-o-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n            }\r\n\r\n            var textStyle = opt.textStyle;\r\n            if (textStyle) {\r\n                textStyle.color && cssText.push('color:' + textStyle.color);\r\n                textStyle.decoration && cssText.push(\r\n                    'text-decoration:' + textStyle.decoration\r\n                );\r\n                textStyle.align && cssText.push(\r\n                    'text-align:' + textStyle.align\r\n                );\r\n                textStyle.fontFamily && cssText.push(\r\n                    'font-family:' + textStyle.fontFamily\r\n                );\r\n                textStyle.fontSize && cssText.push(\r\n                    'font-size:' + textStyle.fontSize + 'px'\r\n                );\r\n                textStyle.fontSize && cssText.push(\r\n                    'line-height:' + Math.round(textStyle.fontSize*3/2) + 'px'\r\n                );\r\n                textStyle.fontStyle && cssText.push(\r\n                    'font-style:' + textStyle.fontStyle\r\n                );\r\n                textStyle.fontWeight && cssText.push(\r\n                    'font-weight:' + textStyle.fontWeight\r\n                );\r\n            }\r\n\r\n\r\n            var padding = opt.padding;\r\n            if (padding != null) {\r\n                padding = this.reformCssArray(padding);\r\n                cssText.push(\r\n                    'padding:' + padding[0] + 'px '\r\n                               + padding[1] + 'px '\r\n                               + padding[2] + 'px '\r\n                               + padding[3] + 'px'\r\n                );\r\n            }\r\n\r\n            cssText = cssText.join(';') + ';';\r\n\r\n            return cssText;\r\n        },\r\n        \r\n        __hide: function () {\r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n            this._lastItemTriggerId = -1;\r\n            if (this._tDom) {\r\n                this._tDom.style.display = 'none';\r\n            }\r\n            var needRefresh = false;\r\n            if (!this._axisLineShape.invisible) {\r\n                this._axisLineShape.invisible = true;\r\n                this.zr.modShape(this._axisLineShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (!this._axisShadowShape.invisible) {\r\n                this._axisShadowShape.invisible = true;\r\n                this.zr.modShape(this._axisShadowShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (!this._axisCrossShape.invisible) {\r\n                this._axisCrossShape.invisible = true;\r\n                this.zr.modShape(this._axisCrossShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n                this._lastTipShape = false;\r\n                this.shapeList.length = 2;\r\n            }\r\n            needRefresh && this.zr.refreshNextFrame();\r\n            this.showing = false;\r\n        },\r\n        \r\n        _show: function (position, x, y, specialCssText) {\r\n            var domHeight = this._tDom.offsetHeight;\r\n            var domWidth = this._tDom.offsetWidth;\r\n            if (position) {\r\n                if (typeof position === 'function') {\r\n                    position = position([x, y]);\r\n                }\r\n                if (position instanceof Array) {\r\n                    x = position[0];\r\n                    y = position[1];\r\n                }\r\n            }\r\n            if (x + domWidth > this._zrWidth) {\r\n                // 太靠右\r\n                //x = this._zrWidth - domWidth;\r\n                x -= (domWidth + 40);\r\n            }\r\n            if (y + domHeight > this._zrHeight) {\r\n                // 太靠下\r\n                //y = this._zrHeight - domHeight;\r\n                y -= (domHeight - 20);\r\n            }\r\n            if (y < 20) {\r\n                y = 0;\r\n            }\r\n            this._tDom.style.cssText = this._gCssText\r\n                                  + this._defaultCssText\r\n                                  + (specialCssText ? specialCssText : '')\r\n                                  + 'left:' + x + 'px;top:' + y + 'px;';\r\n            \r\n            if (domHeight < 10 || domWidth < 10) {\r\n                // this._zrWidth - x < 100 || this._zrHeight - y < 100\r\n                setTimeout(this._refixed, 20);\r\n            }\r\n            this.showing = true;\r\n        },\r\n        \r\n        __refixed: function () {\r\n            if (this._tDom) {\r\n                var cssText = '';\r\n                var domHeight = this._tDom.offsetHeight;\r\n                var domWidth = this._tDom.offsetWidth;\r\n                if (this._tDom.offsetLeft + domWidth > this._zrWidth) {\r\n                    cssText += 'left:' + (this._zrWidth - domWidth - 20) + 'px;';\r\n                }\r\n                if (this._tDom.offsetTop + domHeight > this._zrHeight) {\r\n                    cssText += 'top:' + (this._zrHeight - domHeight - 10) + 'px;';\r\n                }\r\n                if (cssText !== '') {\r\n                    this._tDom.style.cssText += cssText;\r\n                }\r\n            }\r\n        },\r\n        \r\n        __tryShow: function () {\r\n            var needShow;\r\n            var trigger;\r\n            if (!this._curTarget) {\r\n                // 坐标轴事件\r\n                this._findPolarTrigger() || this._findAxisTrigger();\r\n            }\r\n            else {\r\n                // 数据项事件\r\n                if (this._curTarget._type === 'island' && this.option.tooltip.show) {\r\n                    this._showItemTrigger();\r\n                    return;\r\n                }\r\n                var serie = ecData.get(this._curTarget, 'series');\r\n                var data = ecData.get(this._curTarget, 'data');\r\n                needShow = this.deepQuery(\r\n                    [data, serie, this.option],\r\n                    'tooltip.show'\r\n                );\r\n                if (serie == null || data == null || !needShow) {\r\n                    // 不响应tooltip的数据对象延时隐藏\r\n                    clearTimeout(this._hidingTicket);\r\n                    clearTimeout(this._showingTicket);\r\n                    this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                }\r\n                else {\r\n                    trigger = this.deepQuery(\r\n                        [data, serie, this.option],\r\n                        'tooltip.trigger'\r\n                    );\r\n                    \r\n                    trigger === 'axis'\r\n                                ? this._showAxisTrigger(\r\n                                      serie.xAxisIndex, serie.yAxisIndex,\r\n                                      ecData.get(this._curTarget, 'dataIndex')\r\n                                  )\r\n                                : this._showItemTrigger();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 直角系 \r\n         */\r\n        _findAxisTrigger: function () {\r\n            if (!this.component.xAxis || !this.component.yAxis) {\r\n                this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                return;\r\n            }\r\n            var series = this.option.series;\r\n            var xAxisIndex;\r\n            var yAxisIndex;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                // 找到第一个axis触发tooltip的系列\r\n                if (this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis') {\r\n                    xAxisIndex = series[i].xAxisIndex || 0;\r\n                    yAxisIndex = series[i].yAxisIndex || 0;\r\n                    if (this.component.xAxis.getAxis(xAxisIndex)\r\n                        && this.component.xAxis.getAxis(xAxisIndex).type\r\n                           === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                    ) {\r\n                        // 横轴为类目轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex,\r\n                            this._getNearestDataIndex(\r\n                                'x', this.component.xAxis.getAxis(xAxisIndex)\r\n                            )\r\n                        );\r\n                        return;\r\n                    } \r\n                    else if (this.component.yAxis.getAxis(yAxisIndex)\r\n                             && this.component.yAxis.getAxis(yAxisIndex).type\r\n                                === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                    ) {\r\n                        // 纵轴为类目轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex,\r\n                            this._getNearestDataIndex(\r\n                                'y', this.component.yAxis.getAxis(yAxisIndex)\r\n                            )\r\n                        );\r\n                        return;\r\n                    }\r\n                    else {\r\n                        // 双数值轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex, -1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.option.tooltip.axisPointer.type === 'cross') {\r\n                this._showAxisTrigger(-1, -1, -1);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 极坐标 \r\n         */\r\n        _findPolarTrigger: function () {\r\n            if (!this.component.polar) {\r\n                return false;\r\n            }\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            var polarIndex = this.component.polar.getNearestIndex([x, y]);\r\n            var valueIndex;\r\n            if (polarIndex) {\r\n                valueIndex = polarIndex.valueIndex;\r\n                polarIndex = polarIndex.polarIndex;\r\n            }\r\n            else {\r\n                polarIndex = -1;\r\n            }\r\n            \r\n            if (polarIndex != -1) {\r\n                return this._showPolarTrigger(polarIndex, valueIndex);\r\n            }\r\n            \r\n            return false;\r\n        },\r\n        \r\n        /**\r\n         * 根据坐标轴事件带的属性获取最近的axisDataIndex\r\n         */\r\n        _getNearestDataIndex: function (direction, categoryAxis) {\r\n            var dataIndex = -1;\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            if (direction === 'x') {\r\n                // 横轴为类目轴\r\n                var left;\r\n                var right;\r\n                var xEnd = this.component.grid.getXend();\r\n                var curCoord = categoryAxis.getCoordByIndex(dataIndex);\r\n                while (curCoord < xEnd) {\r\n                    right = curCoord;\r\n                    if (curCoord <= x) {\r\n                        left = curCoord;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                    curCoord = categoryAxis.getCoordByIndex(++dataIndex);\r\n                }\r\n                if (dataIndex <= 0) {\r\n                    dataIndex = 0;\r\n                }\r\n                else if (x - left <= right - x) {\r\n                    dataIndex -= 1;\r\n                }\r\n                else {\r\n                    // 离右边近，看是否为最后一个\r\n                    if (categoryAxis.getNameByIndex(dataIndex) == null) {\r\n                        dataIndex -= 1;\r\n                    }\r\n                }\r\n                return dataIndex;\r\n            }\r\n            else {\r\n                // 纵轴为类目轴\r\n                var top;\r\n                var bottom;\r\n                var yStart = this.component.grid.getY();\r\n                var curCoord = categoryAxis.getCoordByIndex(dataIndex);\r\n                while (curCoord > yStart) {\r\n                    top = curCoord;\r\n                    if (curCoord >= y) {\r\n                        bottom = curCoord;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                    curCoord = categoryAxis.getCoordByIndex(++dataIndex);\r\n                }\r\n\r\n                if (dataIndex <= 0) {\r\n                    dataIndex = 0;\r\n                }\r\n                else if (y - top >= bottom - y) {\r\n                    dataIndex -= 1;\r\n                }\r\n                else {\r\n                    // 离上方边近，看是否为最后一个\r\n                    if (categoryAxis.getNameByIndex(dataIndex) == null) {\r\n                        dataIndex -= 1;\r\n                    }\r\n                }\r\n                return dataIndex;\r\n            }\r\n            return -1;\r\n        },\r\n\r\n        /**\r\n         * 直角系 \r\n         */\r\n        _showAxisTrigger: function (xAxisIndex, yAxisIndex, dataIndex) {\r\n            !this._event.connectTrigger && this.messageCenter.dispatch(\r\n                ecConfig.EVENT.TOOLTIP_IN_GRID,\r\n                this._event,\r\n                null,\r\n                this.myChart\r\n            );\r\n            if (this.component.xAxis == null\r\n                || this.component.yAxis == null\r\n                || xAxisIndex == null\r\n                || yAxisIndex == null\r\n                // || dataIndex < 0\r\n            ) {\r\n                // 不响应tooltip的数据对象延时隐藏\r\n                clearTimeout(this._hidingTicket);\r\n                clearTimeout(this._showingTicket);\r\n                this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                return;\r\n            }\r\n            var series = this.option.series;\r\n            var seriesArray = [];\r\n            var seriesIndex = [];\r\n            var categoryAxis;\r\n\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this.option.tooltip.trigger === 'axis') {\r\n                if (!this.option.tooltip.show) {\r\n                    return;\r\n                }\r\n                formatter = this.option.tooltip.formatter;\r\n                position = this.option.tooltip.position;\r\n            }\r\n\r\n            var axisLayout = xAxisIndex != -1\r\n                             && this.component.xAxis.getAxis(xAxisIndex).type\r\n                                === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                             ? 'xAxis'      // 横轴为类目轴，找到所有用这条横轴并且axis触发的系列数据\r\n                             : yAxisIndex != -1\r\n                               && this.component.yAxis.getAxis(yAxisIndex).type\r\n                                  === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                               ? 'yAxis'    // 纵轴为类目轴，找到所有用这条纵轴并且axis触发的系列数据\r\n                               : false;\r\n            var x;\r\n            var y;\r\n            if (axisLayout) {\r\n                var axisIndex = axisLayout == 'xAxis' ? xAxisIndex : yAxisIndex;\r\n                categoryAxis = this.component[axisLayout].getAxis(axisIndex);\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (!this._isSelected(series[i].name)) {\r\n                        continue;\r\n                    }\r\n                    if (series[i][axisLayout + 'Index'] === axisIndex\r\n                        && this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis'\r\n                    ) {\r\n                        showContent = this.query(series[i], 'tooltip.showContent') \r\n                                      || showContent;\r\n                        formatter = this.query(series[i], 'tooltip.formatter') \r\n                                    || formatter;\r\n                        position = this.query(series[i], 'tooltip.position') \r\n                                   || position;\r\n                        \r\n                        specialCssText += this._style(this.query(series[i], 'tooltip'));\r\n                        if (series[i].stack != null && axisLayout == 'xAxis') {\r\n                            seriesArray.unshift(series[i]);\r\n                            seriesIndex.unshift(i);\r\n                        }\r\n                        else {\r\n                            seriesArray.push(series[i]);\r\n                            seriesIndex.push(i);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                // 寻找高亮元素\r\n                this.messageCenter.dispatch(\r\n                    ecConfig.EVENT.TOOLTIP_HOVER,\r\n                    this._event,\r\n                    {\r\n                        seriesIndex: seriesIndex,\r\n                        dataIndex: dataIndex\r\n                    },\r\n                    this.myChart\r\n                );\r\n                \r\n                var rect;\r\n                if (axisLayout == 'xAxis') {\r\n                    x = this.subPixelOptimize(\r\n                        categoryAxis.getCoordByIndex(dataIndex),\r\n                        this._axisLineWidth\r\n                    );\r\n                    y = zrEvent.getY(this._event);\r\n                    rect = [\r\n                        x, this.component.grid.getY(), \r\n                        x, this.component.grid.getYend()\r\n                    ];\r\n                }\r\n                else {\r\n                    x = zrEvent.getX(this._event);\r\n                    y = this.subPixelOptimize(\r\n                        categoryAxis.getCoordByIndex(dataIndex),\r\n                        this._axisLineWidth\r\n                    );\r\n                    rect = [\r\n                        this.component.grid.getX(), y, \r\n                        this.component.grid.getXend(), y\r\n                    ];\r\n                }\r\n                this._styleAxisPointer(\r\n                    seriesArray,\r\n                    rect[0], rect[1], rect[2], rect[3],\r\n                    categoryAxis.getGap(), x, y\r\n                );\r\n            }\r\n            else {\r\n                // 双数值轴\r\n                x = zrEvent.getX(this._event);\r\n                y = zrEvent.getY(this._event);\r\n                this._styleAxisPointer(\r\n                    series,\r\n                    this.component.grid.getX(), y, \r\n                    this.component.grid.getXend(), y,\r\n                    0, x, y\r\n                );\r\n                if (dataIndex >= 0) {\r\n                    this._showItemTrigger(true);\r\n                }\r\n                else {\r\n                    clearTimeout(this._hidingTicket);\r\n                    clearTimeout(this._showingTicket);\r\n                    this._tDom.style.display = 'none';\r\n                }\r\n            }\r\n\r\n            if (seriesArray.length > 0) {\r\n                // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n                this._lastItemTriggerId = -1;\r\n                // 相同dataIndex seriesIndex时不再触发内容更新\r\n                if (this._lastDataIndex != dataIndex || this._lastSeriesIndex != seriesIndex[0]) {\r\n                    this._lastDataIndex = dataIndex;\r\n                    this._lastSeriesIndex = seriesIndex[0];\r\n                    var data;\r\n                    var value;\r\n                    if (typeof formatter === 'function') {\r\n                        var params = [];\r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            value = this.getDataFromOption(data, '-');\r\n                            \r\n                            params.push({\r\n                                seriesIndex: seriesIndex[i],\r\n                                seriesName: seriesArray[i].name || '',\r\n                                series: seriesArray[i],\r\n                                dataIndex: dataIndex,\r\n                                data: data,\r\n                                name: categoryAxis.getNameByIndex(dataIndex),\r\n                                value: value,\r\n                                // 向下兼容\r\n                                0: seriesArray[i].name || '',\r\n                                1: categoryAxis.getNameByIndex(dataIndex),\r\n                                2: value,\r\n                                3: data\r\n                            });\r\n                        }\r\n                        this._curTicket = 'axis:' + dataIndex;\r\n                        this._tDom.innerHTML = formatter.call(\r\n                            this.myChart, params, this._curTicket, this._setContent\r\n                        );\r\n                    }\r\n                    else if (typeof formatter === 'string') {\r\n                        this._curTicket = NaN;\r\n                        formatter = formatter.replace('{a}','{a0}')\r\n                                             .replace('{b}','{b0}')\r\n                                             .replace('{c}','{c0}');\r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            formatter = formatter.replace(\r\n                                '{a' + i + '}',\r\n                                this._encodeHTML(seriesArray[i].name || '')\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{b' + i + '}',\r\n                                this._encodeHTML(categoryAxis.getNameByIndex(dataIndex))\r\n                            );\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            data = this.getDataFromOption(data, '-');\r\n                            formatter = formatter.replace(\r\n                                '{c' + i + '}',\r\n                                data instanceof Array \r\n                                ? data : this.numAddCommas(data)\r\n                            );\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                    else {\r\n                        this._curTicket = NaN;\r\n                        formatter = this._encodeHTML(\r\n                            categoryAxis.getNameByIndex(dataIndex)\r\n                        );\r\n    \r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            formatter += '<br/>' \r\n                                         + this._encodeHTML(seriesArray[i].name || '')\r\n                                         + ' : ';\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            data = this.getDataFromOption(data, '-');\r\n                            formatter += data instanceof Array \r\n                                         ? data : this.numAddCommas(data);\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                }\r\n\r\n                // don't modify, just false, showContent == undefined == true\r\n                if (showContent === false || !this.option.tooltip.showContent) {\r\n                    // 只用tooltip的行为，不显示主体\r\n                    return;\r\n                }\r\n                \r\n                if (!this.hasAppend) {\r\n                    this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                    this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                    this.dom.firstChild.appendChild(this._tDom);\r\n                    this.hasAppend = true;\r\n                }\r\n                this._show(position, x + 10, y + 10, specialCssText);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 极坐标 \r\n         */\r\n        _showPolarTrigger: function (polarIndex, dataIndex) {\r\n            if (this.component.polar == null\r\n                || polarIndex == null\r\n                || dataIndex == null\r\n                || dataIndex < 0\r\n            ) {\r\n                return false;\r\n            }\r\n            var series = this.option.series;\r\n            var seriesArray = [];\r\n            var seriesIndex = [];\r\n\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this.option.tooltip.trigger === 'axis') {\r\n                if (!this.option.tooltip.show) {\r\n                    return false;\r\n                }\r\n                formatter = this.option.tooltip.formatter;\r\n                position = this.option.tooltip.position;\r\n            }\r\n            var indicatorName = this.option.polar[polarIndex].indicator[dataIndex].text;\r\n\r\n            // 找到所有用这个极坐标并且axis触发的系列数据\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (!this._isSelected(series[i].name)) {\r\n                    continue;\r\n                }\r\n                if (series[i].polarIndex === polarIndex\r\n                    && this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis'\r\n                ) {\r\n                    showContent = this.query(series[i], 'tooltip.showContent') \r\n                                  || showContent;\r\n                    formatter = this.query(series[i], 'tooltip.formatter') \r\n                                || formatter;\r\n                    position = this.query(series[i], 'tooltip.position') \r\n                               || position;\r\n                    specialCssText += this._style(this.query(series[i], 'tooltip'));\r\n                    seriesArray.push(series[i]);\r\n                    seriesIndex.push(i);\r\n                }\r\n            }\r\n            if (seriesArray.length > 0) {\r\n                var polarData;\r\n                var data;\r\n                var value;\r\n                var params = [];\r\n\r\n                for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                    polarData = seriesArray[i].data;\r\n                    for (var j = 0, k = polarData.length; j < k; j++) {\r\n                        data = polarData[j];\r\n                        if (!this._isSelected(data.name)) {\r\n                            continue;\r\n                        }\r\n                        data = data != null\r\n                               ? data\r\n                               : {name:'', value: {dataIndex:'-'}};\r\n                        value = this.getDataFromOption(data.value[dataIndex]);\r\n                        params.push({\r\n                            seriesIndex: seriesIndex[i],\r\n                            seriesName: seriesArray[i].name || '',\r\n                            series: seriesArray[i],\r\n                            dataIndex: dataIndex,\r\n                            data: data,\r\n                            name: data.name,\r\n                            indicator: indicatorName,\r\n                            value: value,\r\n                            // 向下兼容\r\n                            0: seriesArray[i].name || '',\r\n                            1: data.name,\r\n                            2: value,\r\n                            3: indicatorName\r\n                        });\r\n                    }\r\n                }\r\n                if (params.length <= 0) {\r\n                    return;\r\n                }\r\n                // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n                this._lastItemTriggerId = -1;\r\n\r\n                // 相同dataIndex seriesIndex时不再触发内容更新\r\n                if (this._lastDataIndex != dataIndex || this._lastSeriesIndex != seriesIndex[0]) {\r\n                    this._lastDataIndex = dataIndex;\r\n                    this._lastSeriesIndex = seriesIndex[0];\r\n                    if (typeof formatter === 'function') {\r\n                        this._curTicket = 'axis:' + dataIndex;\r\n                        this._tDom.innerHTML = formatter.call(\r\n                            this.myChart, params, this._curTicket, this._setContent\r\n                        );\r\n                    }\r\n                    else if (typeof formatter === 'string') {\r\n                        formatter = formatter.replace('{a}','{a0}')\r\n                                             .replace('{b}','{b0}')\r\n                                             .replace('{c}','{c0}')\r\n                                             .replace('{d}','{d0}');\r\n                        for (var i = 0, l = params.length; i < l; i++) {\r\n                            formatter = formatter.replace(\r\n                                '{a' + i + '}',\r\n                                this._encodeHTML(params[i].seriesName)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{b' + i + '}',\r\n                                this._encodeHTML(params[i].name)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{c' + i + '}',\r\n                                this.numAddCommas(params[i].value)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{d' + i + '}',\r\n                                this._encodeHTML(params[i].indicator)\r\n                            );\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                    else {\r\n                        formatter = this._encodeHTML(params[0].name) + '<br/>' \r\n                                    + this._encodeHTML(params[0].indicator) + ' : ' \r\n                                    + this.numAddCommas(params[0].value);\r\n                        for (var i = 1, l = params.length; i < l; i++) {\r\n                            formatter += '<br/>' + this._encodeHTML(params[i].name) \r\n                                         + '<br/>';\r\n                            formatter += this._encodeHTML(params[i].indicator) + ' : ' \r\n                                         + this.numAddCommas(params[i].value);\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                }\r\n\r\n                // don't modify, just false, showContent == undefined == true\r\n                if (showContent === false || !this.option.tooltip.showContent) {\r\n                    // 只用tooltip的行为，不显示主体\r\n                    return;\r\n                }\r\n                \r\n                if (!this.hasAppend) {\r\n                    this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                    this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                    this.dom.firstChild.appendChild(this._tDom);\r\n                    this.hasAppend = true;\r\n                }\r\n                this._show(\r\n                    position,\r\n                    zrEvent.getX(this._event), \r\n                    zrEvent.getY(this._event), \r\n                    specialCssText\r\n                );\r\n                return true;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * @parma {boolean} axisTrigger \r\n         */\r\n        _showItemTrigger: function (axisTrigger) {\r\n            if (!this._curTarget) {\r\n                return;\r\n            }\r\n            var serie = ecData.get(this._curTarget, 'series');\r\n            var seriesIndex = ecData.get(this._curTarget, 'seriesIndex');\r\n            var data = ecData.get(this._curTarget, 'data');\r\n            var dataIndex = ecData.get(this._curTarget, 'dataIndex');\r\n            var name = ecData.get(this._curTarget, 'name');\r\n            var value = ecData.get(this._curTarget, 'value');\r\n            var special = ecData.get(this._curTarget, 'special');\r\n            var special2 = ecData.get(this._curTarget, 'special2');\r\n            var queryTarget = [data, serie, this.option];\r\n            // 从低优先级往上找到trigger为item的formatter和样式\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this._curTarget._type != 'island') {\r\n                // 全局\r\n                var trigger = axisTrigger ? 'axis' : 'item';\r\n                if (this.option.tooltip.trigger === trigger) {\r\n                    formatter = this.option.tooltip.formatter;\r\n                    position = this.option.tooltip.position;\r\n                }\r\n                // 系列\r\n                if (this.query(serie, 'tooltip.trigger') === trigger) {\r\n                    showContent = this.query(serie, 'tooltip.showContent') || showContent;\r\n                    formatter = this.query(serie, 'tooltip.formatter') || formatter;\r\n                    position = this.query(serie, 'tooltip.position') || position;\r\n                    specialCssText += this._style(this.query(serie, 'tooltip'));\r\n                }\r\n                // 数据项\r\n                showContent = this.query(data, 'tooltip.showContent') || showContent;\r\n                formatter = this.query(data, 'tooltip.formatter') || formatter;\r\n                position = this.query(data, 'tooltip.position') || position;\r\n                specialCssText += this._style(this.query(data, 'tooltip'));\r\n            }\r\n            else {\r\n                this._lastItemTriggerId = NaN;\r\n                showContent = this.deepQuery(queryTarget, 'tooltip.showContent');\r\n                formatter = this.deepQuery(queryTarget, 'tooltip.islandFormatter');\r\n                position = this.deepQuery(queryTarget, 'tooltip.islandPosition');\r\n            }\r\n\r\n            // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n\r\n            // 相同dataIndex seriesIndex时不再触发内容更新\r\n            if (this._lastItemTriggerId !== this._curTarget.id) {\r\n                this._lastItemTriggerId = this._curTarget.id;\r\n                if (typeof formatter === 'function') {\r\n                    this._curTicket = (serie.name || '') + ':' + dataIndex;\r\n                    this._tDom.innerHTML = formatter.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesIndex: seriesIndex,\r\n                            seriesName: serie.name || '',\r\n                            series: serie,\r\n                            dataIndex: dataIndex,\r\n                            data: data,\r\n                            name: name,\r\n                            value: value,\r\n                            percent: special,   // 饼图\r\n                            indicator: special, // 雷达图\r\n                            value2: special2,\r\n                            indicator2: special2,\r\n                            // 向下兼容\r\n                            0: serie.name || '',\r\n                            1: name,\r\n                            2: value,\r\n                            3: special,\r\n                            4: special2,\r\n                            5: data,\r\n                            6: seriesIndex,\r\n                            7: dataIndex\r\n                        },\r\n                        this._curTicket,\r\n                        this._setContent\r\n                    );\r\n                }\r\n                else if (typeof formatter === 'string') {\r\n                    this._curTicket = NaN;\r\n                    formatter = formatter.replace('{a}', '{a0}')\r\n                                         .replace('{b}', '{b0}')\r\n                                         .replace('{c}', '{c0}');\r\n                    formatter = formatter.replace('{a0}', this._encodeHTML(serie.name || ''))\r\n                                         .replace('{b0}', this._encodeHTML(name))\r\n                                         .replace(\r\n                                             '{c0}',\r\n                                             value instanceof Array ? value : this.numAddCommas(value)\r\n                                         );\r\n    \r\n                    formatter = formatter.replace('{d}', '{d0}')\r\n                                         .replace('{d0}', special || '');\r\n                    formatter = formatter.replace('{e}', '{e0}')\r\n                                         .replace(\r\n                                             '{e0}',\r\n                                             ecData.get(this._curTarget, 'special2') || ''\r\n                                         );\r\n    \r\n                    this._tDom.innerHTML = formatter;\r\n                }\r\n                else {\r\n                    this._curTicket = NaN;\r\n                    if (serie.type === ecConfig.CHART_TYPE_RADAR && special) {\r\n                        this._tDom.innerHTML = this._itemFormatter.radar.call(\r\n                            this, serie, name, value, special\r\n                        );\r\n                    }\r\n                    // chord 处理暂时跟 force 一样\r\n                    // else if (serie.type === ecConfig.CHART_TYPE_CHORD) {\r\n                    //     this._tDom.innerHTML = this._itemFormatter.chord.call(\r\n                    //         this, serie, name, value, special, special2\r\n                    //     );\r\n                    // }\r\n                    else if (serie.type === ecConfig.CHART_TYPE_EVENTRIVER) {\r\n                        this._tDom.innerHTML = this._itemFormatter.eventRiver.call(\r\n                            this, serie, name, value, data\r\n                        );\r\n                    }\r\n                    else {\r\n                        this._tDom.innerHTML = ''\r\n                            + (serie.name != null ? (this._encodeHTML(serie.name) + '<br/>') : '')\r\n                            + (name === '' ? '' : (this._encodeHTML(name) + ' : '))\r\n                            + (value instanceof Array ? value : this.numAddCommas(value));\r\n                    }\r\n                }\r\n            }\r\n\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            if (this.deepQuery(queryTarget, 'tooltip.axisPointer.show') \r\n                && this.component.grid\r\n            ) {\r\n                this._styleAxisPointer(\r\n                    [serie],\r\n                    this.component.grid.getX(), y, \r\n                    this.component.grid.getXend(), y,\r\n                    0, x, y\r\n                );\r\n            }\r\n            else {\r\n                this._hide();\r\n            }\r\n            \r\n            // don't modify, just false, showContent == undefined == true\r\n            if (showContent === false || !this.option.tooltip.showContent) {\r\n                // 只用tooltip的行为，不显示主体\r\n                return;\r\n            }\r\n            \r\n            if (!this.hasAppend) {\r\n                this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                this.dom.firstChild.appendChild(this._tDom);\r\n                this.hasAppend = true;\r\n            }\r\n            \r\n            this._show(position, x + 20, y - 20, specialCssText);\r\n        },\r\n\r\n        _itemFormatter: {\r\n            radar: function(serie, name, value, indicator){\r\n                var html = '';\r\n                html += this._encodeHTML(name === '' ? (serie.name || '') : name);\r\n                html += html === '' ? '' : '<br />';\r\n                for (var i = 0 ; i < indicator.length; i ++) {\r\n                    html += this._encodeHTML(indicator[i].text) + ' : ' \r\n                            + this.numAddCommas(value[i]) + '<br />';\r\n                }\r\n                return html;\r\n            },\r\n            chord: function(serie, name, value, special, special2) {\r\n                if (special2 == null) {\r\n                    // 外环上\r\n                    return this._encodeHTML(name) + ' (' + this.numAddCommas(value) + ')';\r\n                }\r\n                else {\r\n                    var name1 = this._encodeHTML(name);\r\n                    var name2 = this._encodeHTML(special);\r\n                    // 内部弦上\r\n                    return ''\r\n                        + (serie.name != null ? (this._encodeHTML(serie.name) + '<br/>') : '')\r\n                        + name1 + ' -> ' + name2 \r\n                        + ' (' + this.numAddCommas(value) + ')'\r\n                        + '<br />'\r\n                        + name2 + ' -> ' + name1\r\n                        + ' (' + this.numAddCommas(special2) + ')';\r\n                }\r\n            },\r\n            eventRiver: function(serie, name, value, data) {\r\n                var html = '';\r\n                html += this._encodeHTML(serie.name === '' ? '' : (serie.name + ' : ') );\r\n                html += this._encodeHTML(name);\r\n                html += html === '' ? '' : '<br />';\r\n                data = data.evolution;\r\n                for (var i = 0, l = data.length; i < l; i++) {\r\n                    html += '<div style=\"padding-top:5px;\">';\r\n                    if (!data[i].detail) {\r\n                        continue;\r\n                    }\r\n                    if (data[i].detail.img) {\r\n                        html += '<img src=\"' + data[i].detail.img \r\n                                + '\" style=\"float:left;width:40px;height:40px;\">';\r\n                    }\r\n                    html += '<div style=\"margin-left:45px;\">' + data[i].time + '<br/>';\r\n                    html += '<a href=\"' + data[i].detail.link + '\" target=\"_blank\">';\r\n                    html += data[i].detail.text + '</a></div>';\r\n                    html += '</div>';\r\n                }\r\n                return html;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 设置坐标轴指示器样式 \r\n         */\r\n        _styleAxisPointer: function (seriesArray, xStart, yStart, xEnd, yEnd, gap, x, y) {\r\n            if (seriesArray.length > 0) {\r\n                var queryTarget;\r\n                var curType;\r\n                var axisPointer = this.option.tooltip.axisPointer;\r\n                var pointType = axisPointer.type;\r\n                var style = {\r\n                    line: {},\r\n                    cross: {},\r\n                    shadow: {}\r\n                };\r\n                for (var pType in style) {\r\n                    style[pType].color = axisPointer[pType + 'Style'].color;\r\n                    style[pType].width = axisPointer[pType + 'Style'].width;\r\n                    style[pType].type = axisPointer[pType + 'Style'].type;\r\n                }\r\n                for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                    //if (this.deepQuery([seriesArray[i], this.option], 'tooltip.trigger') === 'axis') {\r\n                        queryTarget = seriesArray[i];\r\n                        curType = this.query(queryTarget, 'tooltip.axisPointer.type');\r\n                        pointType = curType || pointType; \r\n                        if (curType) {\r\n                            style[curType].color = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.color'\r\n                            ) || style[curType].color;\r\n                            style[curType].width = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.width'\r\n                            ) || style[curType].width;\r\n                            style[curType].type = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.type'\r\n                            ) || style[curType].type;\r\n                        }\r\n                    //}\r\n                }\r\n                \r\n                if (pointType === 'line') {\r\n                    var lineWidth = style.line.width;\r\n                    var isVertical = xStart == xEnd;\r\n                    this._axisLineShape.style = {\r\n                        xStart: isVertical ? this.subPixelOptimize(xStart, lineWidth) : xStart,\r\n                        yStart: isVertical ? yStart : this.subPixelOptimize(yStart, lineWidth),\r\n                        xEnd: isVertical ? this.subPixelOptimize(xEnd, lineWidth) : xEnd,\r\n                        yEnd: isVertical ? yEnd : this.subPixelOptimize(yEnd, lineWidth),\r\n                        strokeColor: style.line.color,\r\n                        lineWidth: lineWidth,\r\n                        lineType: style.line.type\r\n                    };\r\n                    this._axisLineShape.invisible = false;\r\n                    this.zr.modShape(this._axisLineShape.id);\r\n                }\r\n                else if (pointType === 'cross') {\r\n                    var crossWidth = style.cross.width;\r\n                    this._axisCrossShape.style = {\r\n                        brushType: 'stroke',\r\n                        rect: this.component.grid.getArea(),\r\n                        x: this.subPixelOptimize(x, crossWidth),\r\n                        y: this.subPixelOptimize(y, crossWidth),\r\n                        text: ('( ' \r\n                               + this.component.xAxis.getAxis(0).getValueFromCoord(x)\r\n                               + ' , '\r\n                               + this.component.yAxis.getAxis(0).getValueFromCoord(y) \r\n                               + ' )'\r\n                              ).replace('  , ', ' ').replace(' ,  ', ' '),\r\n                        textPosition: 'specific',\r\n                        strokeColor: style.cross.color,\r\n                        lineWidth: crossWidth,\r\n                        lineType: style.cross.type\r\n                    };\r\n                    if (this.component.grid.getXend() - x > 100) {          // 右侧有空间\r\n                        this._axisCrossShape.style.textAlign = 'left';\r\n                        this._axisCrossShape.style.textX = x + 10;\r\n                    }\r\n                    else {\r\n                        this._axisCrossShape.style.textAlign = 'right';\r\n                        this._axisCrossShape.style.textX = x - 10;\r\n                    }\r\n                    if (y - this.component.grid.getY() > 50) {             // 上方有空间\r\n                        this._axisCrossShape.style.textBaseline = 'bottom';\r\n                        this._axisCrossShape.style.textY = y - 10;\r\n                    }\r\n                    else {\r\n                        this._axisCrossShape.style.textBaseline = 'top';\r\n                        this._axisCrossShape.style.textY = y + 10;\r\n                    }\r\n                    this._axisCrossShape.invisible = false;\r\n                    this.zr.modShape(this._axisCrossShape.id);\r\n                }\r\n                else if (pointType === 'shadow') {\r\n                    if (style.shadow.width == null \r\n                        || style.shadow.width === 'auto'\r\n                        || isNaN(style.shadow.width)\r\n                    ) {\r\n                        style.shadow.width = gap;\r\n                    }\r\n                    if (xStart === xEnd) {\r\n                        // 纵向\r\n                        if (Math.abs(this.component.grid.getX() - xStart) < 2) {\r\n                            // 最左边\r\n                            style.shadow.width /= 2;\r\n                            xStart = xEnd = xEnd + style.shadow.width / 2;\r\n                        }\r\n                        else if (Math.abs(this.component.grid.getXend() - xStart) < 2) {\r\n                            // 最右边\r\n                            style.shadow.width /= 2;\r\n                            xStart = xEnd = xEnd - style.shadow.width / 2;\r\n                        }\r\n                    }\r\n                    else if (yStart === yEnd) {\r\n                        // 横向\r\n                        if (Math.abs(this.component.grid.getY() - yStart) < 2) {\r\n                            // 最上边\r\n                            style.shadow.width /= 2;\r\n                            yStart = yEnd = yEnd + style.shadow.width / 2;\r\n                        }\r\n                        else if (Math.abs(this.component.grid.getYend() - yStart) < 2) {\r\n                            // 最右边\r\n                            style.shadow.width /= 2;\r\n                            yStart = yEnd = yEnd - style.shadow.width / 2;\r\n                        }\r\n                    }\r\n                    this._axisShadowShape.style = {\r\n                        xStart: xStart,\r\n                        yStart: yStart,\r\n                        xEnd: xEnd,\r\n                        yEnd: yEnd,\r\n                        strokeColor: style.shadow.color,\r\n                        lineWidth: style.shadow.width\r\n                    };\r\n                    this._axisShadowShape.invisible = false;\r\n                    this.zr.modShape(this._axisShadowShape.id);\r\n                }\r\n                this.zr.refreshNextFrame();\r\n            }\r\n        },\r\n\r\n        __onmousemove: function (param) {\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            if (this._mousein && this._enterable) {\r\n                return;\r\n            }\r\n            var target = param.target;\r\n            var mx = zrEvent.getX(param.event);\r\n            var my = zrEvent.getY(param.event);\r\n            if (!target) {\r\n                // 判断是否落到直角系里，axis触发的tooltip\r\n                this._curTarget = false;\r\n                this._event = param.event;\r\n                // this._event._target = this._event.target || this._event.toElement;\r\n                this._event.zrenderX = mx;\r\n                this._event.zrenderY = my;\r\n                if (this._needAxisTrigger \r\n                    && this.component.grid \r\n                    && zrArea.isInside(rectangleInstance, this.component.grid.getArea(), mx, my)\r\n                ) {\r\n                    this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n                }\r\n                else if (this._needAxisTrigger \r\n                        && this.component.polar \r\n                        && this.component.polar.isInside([mx, my]) != -1\r\n                ) {\r\n                    this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n                }\r\n                else {\r\n                    !this._event.connectTrigger && this.messageCenter.dispatch(\r\n                        ecConfig.EVENT.TOOLTIP_OUT_GRID,\r\n                        this._event,\r\n                        null,\r\n                        this.myChart\r\n                    );\r\n                    this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                }\r\n            }\r\n            else {\r\n                this._curTarget = target;\r\n                this._event = param.event;\r\n                // this._event._target = this._event.target || this._event.toElement;\r\n                this._event.zrenderX = mx;\r\n                this._event.zrenderY = my;\r\n                var polarIndex;\r\n                if (this._needAxisTrigger \r\n                    && this.component.polar \r\n                    && (polarIndex = this.component.polar.isInside([mx, my])) != -1\r\n                ) {\r\n                    // 看用这个polar的系列数据是否是axis触发，如果是设置_curTarget为nul\r\n                    var series = this.option.series;\r\n                    for (var i = 0, l = series.length; i < l; i++) {\r\n                        if (series[i].polarIndex === polarIndex\r\n                            && this.deepQuery(\r\n                                   [series[i], this.option], 'tooltip.trigger'\r\n                               ) === 'axis'\r\n                        ) {\r\n                            this._curTarget = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                   \r\n                }\r\n                this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * zrender事件响应：鼠标离开绘图区域\r\n         */\r\n        __onglobalout: function () {\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n        },\r\n        \r\n        /**\r\n         * 异步回调填充内容\r\n         */\r\n        __setContent: function (ticket, content) {\r\n            if (!this._tDom) {\r\n                return;\r\n            }\r\n            if (ticket === this._curTicket) {\r\n                this._tDom.innerHTML = content;\r\n            }\r\n            \r\n            setTimeout(this._refixed, 20);\r\n        },\r\n\r\n        ontooltipHover: function (param, tipShape) {\r\n            if (!this._lastTipShape // 不存在或者存在但dataIndex发生变化才需要重绘\r\n                || (this._lastTipShape && this._lastTipShape.dataIndex != param.dataIndex)\r\n            ) {\r\n                if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                    this.zr.delShape(this._lastTipShape.tipShape);\r\n                    this.shapeList.length = 2;\r\n                }\r\n                for (var i = 0, l = tipShape.length; i < l; i++) {\r\n                    tipShape[i].zlevel = this.getZlevelBase();\r\n                    tipShape[i].z = this.getZBase();\r\n                    \r\n                    tipShape[i].style = zrShapeBase.prototype.getHighlightStyle(\r\n                        tipShape[i].style,\r\n                        tipShape[i].highlightStyle\r\n                    );\r\n                    tipShape[i].draggable = false;\r\n                    tipShape[i].hoverable = false;\r\n                    tipShape[i].clickable = false;\r\n                    tipShape[i].ondragend = null;\r\n                    tipShape[i].ondragover = null;\r\n                    tipShape[i].ondrop = null;\r\n                    this.shapeList.push(tipShape[i]);\r\n                    this.zr.addShape(tipShape[i]);\r\n                }\r\n                this._lastTipShape = {\r\n                    dataIndex: param.dataIndex,\r\n                    tipShape: tipShape\r\n                };\r\n            }\r\n        },\r\n        \r\n        ondragend: function () {\r\n            this._hide();\r\n        },\r\n        \r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param) {\r\n            this._selectedMap = param.selected;\r\n        },\r\n        \r\n        _setSelectedMap: function () {\r\n            if (this.component.legend) {\r\n                this._selectedMap = zrUtil.clone(this.component.legend.getSelectedMap());\r\n            }\r\n            else {\r\n                this._selectedMap = {};\r\n            }\r\n        },\r\n        \r\n        _isSelected: function (itemName) {\r\n            if (this._selectedMap[itemName] != null) {\r\n                return this._selectedMap[itemName];\r\n            }\r\n            else {\r\n                return true; // 没在legend里定义的都为true啊~\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 模拟tooltip hover方法\r\n         * {object} params  参数\r\n         *          {seriesIndex: 0, seriesName:'', dataInex:0} line、bar、scatter、k、radar\r\n         *          {seriesIndex: 0, seriesName:'', name:''} map、pie、chord\r\n         */\r\n        showTip: function (params) {\r\n            if (!params) {\r\n                return;\r\n            }\r\n            \r\n            var seriesIndex;\r\n            var series = this.option.series;\r\n            if (params.seriesIndex != null) {\r\n                seriesIndex = params.seriesIndex;\r\n            }\r\n            else {\r\n                var seriesName = params.seriesName;\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (series[i].name === seriesName) {\r\n                        seriesIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            var serie = series[seriesIndex];\r\n            if (serie == null) {\r\n                return;\r\n            }\r\n            var chart = this.myChart.chart[serie.type];\r\n            var isAxisTrigger = this.deepQuery(\r\n                                    [serie, this.option], 'tooltip.trigger'\r\n                                ) === 'axis';\r\n            \r\n            if (!chart) {\r\n                return;\r\n            }\r\n            \r\n            if (isAxisTrigger) {\r\n                // axis trigger\r\n                var dataIndex = params.dataIndex;\r\n                switch (chart.type) {\r\n                    case ecConfig.CHART_TYPE_LINE :\r\n                    case ecConfig.CHART_TYPE_BAR :\r\n                    case ecConfig.CHART_TYPE_K :\r\n                    case ecConfig.CHART_TYPE_RADAR :\r\n                        if (this.component.polar == null \r\n                            || serie.data[0].value.length <= dataIndex\r\n                        ) {\r\n                            return;\r\n                        }\r\n                        var polarIndex = serie.polarIndex || 0;\r\n                        var vector = this.component.polar.getVector(\r\n                            polarIndex, dataIndex, 'max'\r\n                        );\r\n                        this._event = {\r\n                            zrenderX: vector[0],\r\n                            zrenderY: vector[1]\r\n                        };\r\n                        this._showPolarTrigger(\r\n                            polarIndex, \r\n                            dataIndex\r\n                        );\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                // item trigger\r\n                var shapeList = chart.shapeList;\r\n                var x;\r\n                var y;\r\n                switch (chart.type) {\r\n                    case ecConfig.CHART_TYPE_LINE :\r\n                    case ecConfig.CHART_TYPE_BAR :\r\n                    case ecConfig.CHART_TYPE_K :\r\n                    case ecConfig.CHART_TYPE_TREEMAP :\r\n                    case ecConfig.CHART_TYPE_SCATTER :\r\n                        var dataIndex = params.dataIndex;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i]._mark == null\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'dataIndex') == dataIndex\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = shapeList[i].style.x;\r\n                                y = chart.type != ecConfig.CHART_TYPE_K \r\n                                    ? shapeList[i].style.y : shapeList[i].style.y[0];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_RADAR :\r\n                        var dataIndex = params.dataIndex;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'polygon'\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'dataIndex') == dataIndex\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var vector = this.component.polar.getCenter(\r\n                                    serie.polarIndex || 0\r\n                                );\r\n                                x = vector[0];\r\n                                y = vector[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_PIE :\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'sector'\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var style = this._curTarget.style;\r\n                                var midAngle = (style.startAngle + style.endAngle) \r\n                                                / 2 * Math.PI / 180;\r\n                                x = this._curTarget.style.x + Math.cos(midAngle) * style.r / 1.5;\r\n                                y = this._curTarget.style.y - Math.sin(midAngle) * style.r / 1.5;\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_MAP :\r\n                        var name = params.name;\r\n                        var mapType = serie.mapType;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'text'\r\n                                && shapeList[i]._mapType === mapType\r\n                                && shapeList[i].style._name === name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = this._curTarget.style.x + this._curTarget.position[0];\r\n                                y = this._curTarget.style.y + this._curTarget.position[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_CHORD:\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'sector'\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var style = this._curTarget.style;\r\n                                var midAngle = (style.startAngle + style.endAngle) \r\n                                                / 2 * Math.PI / 180;\r\n                                x = this._curTarget.style.x + Math.cos(midAngle) * (style.r - 2);\r\n                                y = this._curTarget.style.y - Math.sin(midAngle) * (style.r - 2);\r\n                                this.zr.trigger(\r\n                                    zrConfig.EVENT.MOUSEMOVE,\r\n                                    {\r\n                                        zrenderX: x,\r\n                                        zrenderY: y\r\n                                    }\r\n                                );\r\n                                return;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_FORCE:\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'circle'\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = this._curTarget.position[0];\r\n                                y = this._curTarget.position[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                if (x != null && y != null) {\r\n                    this._event = {\r\n                        zrenderX: x,\r\n                        zrenderY: y\r\n                    };\r\n                    this.zr.addHoverShape(this._curTarget);\r\n                    this.zr.refreshHover();\r\n                    this._showItemTrigger();\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 关闭，公开接口 \r\n         */\r\n        hideTip: function () {\r\n            this._hide();\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            // this._selectedMap;\r\n            // this._defaultCssText;    // css样式缓存\r\n            // this._needAxisTrigger;   // 坐标轴触发\r\n            // this._curTarget;\r\n            // this._event;\r\n            // this._curTicket;         // 异步回调标识，用来区分多个请求\r\n            \r\n            // 缓存一些高宽数据\r\n            this._zrHeight = this.zr.getHeight();\r\n            this._zrWidth = this.zr.getWidth();\r\n            \r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n            }\r\n            this._lastTipShape = false;\r\n            this.shapeList.length = 2;\r\n            \r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n            this._lastItemTriggerId = -1;\r\n            \r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.option.tooltip = this.reformOption(this.option.tooltip);\r\n                \r\n                this.option.tooltip.textStyle = zrUtil.merge(\r\n                    this.option.tooltip.textStyle,\r\n                    this.ecTheme.textStyle\r\n                );\r\n                this._needAxisTrigger = false;\r\n                if (this.option.tooltip.trigger === 'axis') {\r\n                    this._needAxisTrigger = true;\r\n                }\r\n    \r\n                var series = this.option.series;\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (this.query(series[i], 'tooltip.trigger') === 'axis') {\r\n                        this._needAxisTrigger = true;\r\n                        break;\r\n                    }\r\n                }\r\n                // this._hidingTicket;\r\n                // this._showingTicket;\r\n                this._showDelay = this.option.tooltip.showDelay; // 显示延迟\r\n                this._hideDelay = this.option.tooltip.hideDelay; // 隐藏延迟\r\n                this._defaultCssText = this._style(this.option.tooltip);\r\n                \r\n                this._setSelectedMap();\r\n                this._axisLineWidth = this.option.tooltip.axisPointer.lineStyle.width;\r\n                this._enterable = this.option.tooltip.enterable;\r\n\r\n                if (! this._enterable && this._tDom.className.indexOf(zrConfig.elementClassName) < 0) {\r\n                    this._tDom.className += ' ' + zrConfig.elementClassName;\r\n                }\r\n            }\r\n            if (this.showing) {\r\n                var self = this;\r\n                setTimeout(function(){\r\n                    self.zr.trigger(zrConfig.EVENT.MOUSEMOVE, self.zr.handler._event);\r\n                },50);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        onbeforDispose: function () {\r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n            }\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            this.zr.un(zrConfig.EVENT.GLOBALOUT, this._onglobalout);\r\n            \r\n            if (this.hasAppend && !!this.dom.firstChild) {\r\n                this.dom.firstChild.removeChild(this._tDom);\r\n            }\r\n            this._tDom = null;\r\n        },\r\n        \r\n        /**\r\n         * html转码的方法\r\n         */\r\n        _encodeHTML: function (source) {\r\n            return String(source)\r\n                        .replace(/&/g, '&amp;')\r\n                        .replace(/</g, '&lt;')\r\n                        .replace(/>/g, '&gt;')\r\n                        .replace(/\"/g, '&quot;')\r\n                        .replace(/'/g, '&#39;');\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Tooltip, Base);\r\n    \r\n    require('../component').define('tooltip', Tooltip);\r\n\r\n    return Tooltip;\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/tooltip.js\n ** module id = 66\n ** module chunks = 0\n **/","/**\n * zrender\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * shape类：十字准星\n * 可配图形属性：\n   {\n       // 基础属性\n       shape  : 'cross',       // 必须，shape类标识，需要显式指定\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\n       invisible : {boolean},   // 默认为false，是否可见\n\n       // 样式属性，默认状态样式样式属性\n       style  : {\n           rect      : {Object},  // 必须，对角框\n           x         : {number},  // 必须，横坐标\n           y         : {number},  // 必须，纵坐标\n       },\n\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\n       highlightStyle : {\n           // 同style\n       }\n\n       // 交互属性，详见shape.Base\n\n       // 事件属性，详见shape.Base\n   }\n */\ndefine(function (require) {\n    var Base = require('zrender/shape/Base');\n    var LineShape = require('zrender/shape/Line');\n    var zrUtil = require('zrender/tool/util');\n\n    function Cross(options) {\n        Base.call(this, options);\n    }\n\n    Cross.prototype =  {\n        type : 'cross',\n\n        /**\n         * 创建矩形路径\n         * @param {Context2D} ctx Canvas 2D上下文\n         * @param {Object} style 样式\n         */\n        buildPath : function (ctx, style) {\n            var rect = style.rect;\n            style.xStart = rect.x;\n            style.xEnd = rect.x + rect.width;\n            style.yStart = style.yEnd = style.y;\n            LineShape.prototype.buildPath(ctx, style);\n            style.xStart = style.xEnd = style.x;\n            style.yStart = rect.y;\n            style.yEnd = rect.y + rect.height;\n            LineShape.prototype.buildPath(ctx, style);\n        },\n\n        /**\n         * 返回矩形区域，用于局部刷新和文字定位\n         * @param {Object} style\n         */\n        getRect : function (style) {\n            return style.rect;\n        },\n\n        isCover : require('./normalIsCover')\n    };\n\n    zrUtil.inherits(Cross, Base);\n\n    return Cross;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/Cross.js\n ** module id = 67\n ** module chunks = 0\n **/","/**\r\n * echarts组件：图例\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var TextShape = require('zrender/shape/Text');\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n    var SectorShape = require('zrender/shape/Sector');\r\n    //var BeziercurveShape = require('zrender/shape/Beziercurve');\r\n    var IconShape = require('../util/shape/Icon');\r\n    var CandleShape = require('../util/shape/Candle');\r\n    \r\n    var ecConfig = require('../config');\r\n     // 图例\r\n    ecConfig.legend = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 4,                       // 二级层叠\r\n        show: true,\r\n        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'center',               // 水平安放位置，默认为全图居中，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 图例边框颜色\r\n        borderWidth: 0,            // 图例边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 图例内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemWidth: 20,             // 图例图形宽度\r\n        itemHeight: 14,            // 图例图形高度\r\n        textStyle: {\r\n            color: '#333'          // 图例文字颜色\r\n        },\r\n        selectedMode: true         // 选择模式，默认开启图例开关\r\n        // selected: null,         // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\r\n        // data: [],               // 图例内容（详见legend.data，数组中每一项代表一个item\r\n    };\r\n\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrArea = require('zrender/tool/area');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Legend(ecTheme, messageCenter, zr, option, myChart) {\r\n        if (!this.query(option, 'legend.data')) {\r\n            console.error('option.legend.data has not been defined.');\r\n            return;\r\n        }\r\n        \r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        var self = this;\r\n        self._legendSelected = function (param) {\r\n            self.__legendSelected(param);\r\n        };\r\n        self._dispatchHoverLink = function(param) {\r\n            return self.__dispatchHoverLink(param);\r\n        };\r\n        \r\n        this._colorIndex = 0;\r\n        this._colorMap = {};\r\n        this._selectedMap = {};\r\n        this._hasDataMap = {};\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    Legend.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_LEGEND,\r\n        _buildShape: function () {\r\n            if (!this.legendOption.show) {\r\n                return;\r\n            }\r\n            // 图例元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n            this._buildBackground();\r\n            this._buildItem();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有图例元素\r\n         */\r\n        _buildItem: function () {\r\n            var data = this.legendOption.data;\r\n            var dataLength = data.length;\r\n            var itemName;\r\n            var itemType;\r\n            var itemShape;\r\n            var textShape;\r\n            var textStyle  = this.legendOption.textStyle;\r\n            var dataTextStyle;\r\n            var dataFont;\r\n            var formattedName;\r\n\r\n            var zrWidth = this.zr.getWidth();\r\n            var zrHeight = this.zr.getHeight();\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemWidth = this.legendOption.itemWidth;\r\n            var itemHeight = this.legendOption.itemHeight;\r\n            var itemGap = this.legendOption.itemGap;\r\n            var color;\r\n\r\n            if (this.legendOption.orient === 'vertical' && this.legendOption.x === 'right') {\r\n                lastX = this._itemGroupLocation.x\r\n                        + this._itemGroupLocation.width\r\n                        - itemWidth;\r\n            }\r\n\r\n            for (var i = 0; i < dataLength; i++) {\r\n                dataTextStyle = zrUtil.merge(\r\n                    data[i].textStyle || {},\r\n                    textStyle\r\n                );\r\n                dataFont = this.getFont(dataTextStyle);\r\n                \r\n                itemName = this._getName(data[i]);\r\n                formattedName = this._getFormatterName(itemName);\r\n                if (itemName === '') { // 别帮我代码优化\r\n                    if (this.legendOption.orient === 'horizontal') {\r\n                        lastX = this._itemGroupLocation.x;\r\n                        lastY += itemHeight + itemGap;\r\n                    }\r\n                    else {\r\n                        this.legendOption.x === 'right'\r\n                            ? lastX -= this._itemGroupLocation.maxWidth + itemGap\r\n                            : lastX += this._itemGroupLocation.maxWidth + itemGap;\r\n                        lastY = this._itemGroupLocation.y;\r\n                    }\r\n                    continue;\r\n                }\r\n                itemType = data[i].icon || this._getSomethingByName(itemName).type;\r\n                \r\n                color = this.getColor(itemName);\r\n\r\n                if (this.legendOption.orient === 'horizontal') {\r\n                    if (zrWidth - lastX < 200   // 最后200px做分行预判\r\n                        && (itemWidth + 5 + zrArea.getTextWidth(formattedName, dataFont)\r\n                            // 分行的最后一个不用算itemGap\r\n                            + (i === dataLength - 1 || data[i + 1] === '' ? 0 : itemGap)\r\n                           ) >= zrWidth - lastX\r\n                    ) {\r\n                        lastX = this._itemGroupLocation.x;\r\n                        lastY += itemHeight + itemGap;\r\n                    }\r\n                }\r\n                else {\r\n                    if (zrHeight - lastY < 200   // 最后200px做分行预判\r\n                        && (itemHeight\r\n                            // 分行的最后一个不用算itemGap\r\n                            + (i === dataLength - 1 || data[i + 1] === '' ? 0 : itemGap)\r\n                           ) \r\n                           >= zrHeight - lastY\r\n                    ) {\r\n                        this.legendOption.x === 'right'\r\n                        ? lastX -= this._itemGroupLocation.maxWidth + itemGap\r\n                        : lastX += this._itemGroupLocation.maxWidth + itemGap;\r\n                        lastY = this._itemGroupLocation.y;\r\n                    }\r\n                }\r\n\r\n                // 图形\r\n                itemShape = this._getItemShapeByType(\r\n                    lastX, lastY,\r\n                    itemWidth, itemHeight,\r\n                    (this._selectedMap[itemName] && this._hasDataMap[itemName] ? color : '#ccc'),\r\n                    itemType,\r\n                    color\r\n                );\r\n                itemShape._name = itemName;\r\n                itemShape = new IconShape(itemShape);\r\n\r\n                // 文字\r\n                textShape = {\r\n                    // shape: 'text',\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        x: lastX + itemWidth + 5,\r\n                        y: lastY + itemHeight / 2,\r\n                        color: this._selectedMap[itemName]\r\n                                ? (dataTextStyle.color === 'auto' ? color : dataTextStyle.color)\r\n                                : '#ccc',\r\n                        text: formattedName,\r\n                        textFont: dataFont,\r\n                        textBaseline: 'middle'\r\n                    },\r\n                    highlightStyle: {\r\n                        color: color,\r\n                        brushType: 'fill'\r\n                    },\r\n                    hoverable: !!this.legendOption.selectedMode,\r\n                    clickable: !!this.legendOption.selectedMode\r\n                };\r\n\r\n                if (this.legendOption.orient === 'vertical'\r\n                    && this.legendOption.x === 'right'\r\n                ) {\r\n                    textShape.style.x -= (itemWidth + 10);\r\n                    textShape.style.textAlign = 'right';\r\n                }\r\n\r\n                textShape._name = itemName;\r\n                textShape = new TextShape(textShape);\r\n                \r\n                if (this.legendOption.selectedMode) {\r\n                    itemShape.onclick = textShape.onclick = this._legendSelected;\r\n                    itemShape.onmouseover =  textShape.onmouseover = this._dispatchHoverLink;\r\n                    itemShape.hoverConnect = textShape.id;\r\n                    textShape.hoverConnect = itemShape.id;\r\n                }\r\n                this.shapeList.push(itemShape);\r\n                this.shapeList.push(textShape);\r\n\r\n                if (this.legendOption.orient === 'horizontal') {\r\n                    lastX += itemWidth + 5\r\n                             + zrArea.getTextWidth(formattedName, dataFont)\r\n                             + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemHeight + itemGap;\r\n                }\r\n            }\r\n        \r\n            if (this.legendOption.orient === 'horizontal'\r\n                && this.legendOption.x === 'center'\r\n                && lastY != this._itemGroupLocation.y\r\n            ) {\r\n                // 多行橫排居中优化\r\n                this._mLineOptimize();\r\n            }\r\n        },\r\n        \r\n        _getName: function(data) {\r\n            return typeof data.name != 'undefined' ? data.name : data;\r\n        },\r\n\r\n        _getFormatterName: function(itemName) {\r\n            var formatter = this.legendOption.formatter;\r\n            var formattedName;\r\n            if (typeof formatter === 'function') {\r\n                formattedName = formatter.call(this.myChart, itemName);\r\n            }\r\n            else if (typeof formatter === 'string') {\r\n                formattedName = formatter.replace('{name}', itemName);\r\n            }\r\n            else {\r\n                formattedName = itemName;\r\n            }\r\n            return formattedName;\r\n        },\r\n\r\n        _getFormatterNameFromData: function(data) {\r\n            var itemName = this._getName(data);\r\n            return this._getFormatterName(itemName);\r\n        },\r\n        \r\n        // 多行橫排居中优化\r\n        _mLineOptimize: function () {\r\n            var lineOffsetArray = []; // 每行宽度\r\n            var lastX = this._itemGroupLocation.x;\r\n            for (var i = 2, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].style.x === lastX) {\r\n                    lineOffsetArray.push(\r\n                        (\r\n                            this._itemGroupLocation.width \r\n                            - (\r\n                                this.shapeList[i - 1].style.x\r\n                                + zrArea.getTextWidth(\r\n                                      this.shapeList[i - 1].style.text,\r\n                                      this.shapeList[i - 1].style.textFont\r\n                                  )\r\n                                - lastX\r\n                            )\r\n                        ) / 2\r\n                    );\r\n                }\r\n                else if (i === l - 1) {\r\n                    lineOffsetArray.push(\r\n                        (\r\n                            this._itemGroupLocation.width \r\n                            - (\r\n                                this.shapeList[i].style.x\r\n                                + zrArea.getTextWidth(\r\n                                      this.shapeList[i].style.text,\r\n                                      this.shapeList[i].style.textFont\r\n                                  )\r\n                                - lastX\r\n                            )\r\n                        ) / 2\r\n                    );\r\n                }\r\n            }\r\n            var curLineIndex = -1;\r\n            for (var i = 1, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].style.x === lastX) {\r\n                    curLineIndex++;\r\n                }\r\n                if (lineOffsetArray[curLineIndex] === 0) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    this.shapeList[i].style.x += lineOffsetArray[curLineIndex];\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var padding = this.reformCssArray(this.legendOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: this.legendOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: this.legendOption.backgroundColor,\r\n                    strokeColor: this.legendOption.borderColor,\r\n                    lineWidth: this.legendOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算图例实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var data = this.legendOption.data;\r\n            var dataLength = data.length;\r\n            var itemGap = this.legendOption.itemGap;\r\n            var itemWidth = this.legendOption.itemWidth + 5; // 5px是图形和文字的间隔，不可配\r\n            var itemHeight = this.legendOption.itemHeight;\r\n            var textStyle  = this.legendOption.textStyle;\r\n            var font = this.getFont(textStyle);\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n            var padding = this.reformCssArray(this.legendOption.padding);\r\n            var zrWidth = this.zr.getWidth() - padding[1] - padding[3];\r\n            var zrHeight = this.zr.getHeight() - padding[0] - padding[2];\r\n            \r\n            var temp = 0; // 宽高计算，用于多行判断\r\n            var maxWidth = 0; // 垂直布局有用\r\n            if (this.legendOption.orient === 'horizontal') {\r\n                // 水平布局，计算总宽度\r\n                totalHeight = itemHeight;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    if (this._getName(data[i]) === '') {\r\n                        temp -= itemGap;\r\n                        totalWidth = Math.max(totalWidth, temp);\r\n                        totalHeight += itemHeight + itemGap;\r\n                        temp = 0;\r\n                        continue;\r\n                    }\r\n                    var tempTextWidth = zrArea.getTextWidth(\r\n                        this._getFormatterNameFromData(data[i]),\r\n                        data[i].textStyle \r\n                        ? this.getFont(zrUtil.merge(\r\n                            data[i].textStyle || {},\r\n                            textStyle\r\n                          ))\r\n                        : font\r\n                    );\r\n                    if (temp + itemWidth + tempTextWidth + itemGap > zrWidth) {\r\n                        // new line\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalWidth = Math.max(totalWidth, temp);\r\n                        totalHeight += itemHeight + itemGap;\r\n                        temp = 0;\r\n                    }\r\n                    else {\r\n                        temp += itemWidth + tempTextWidth + itemGap;\r\n                        totalWidth = Math.max(totalWidth, temp - itemGap);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    maxWidth = Math.max(\r\n                        maxWidth,\r\n                        zrArea.getTextWidth(\r\n                            this._getFormatterNameFromData(data[i]),\r\n                            data[i].textStyle \r\n                            ? this.getFont(zrUtil.merge(\r\n                                  data[i].textStyle || {},\r\n                                  textStyle\r\n                              ))\r\n                            : font\r\n                        )\r\n                    );\r\n                }\r\n                maxWidth += itemWidth;\r\n                totalWidth = maxWidth;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    if (this._getName(data[i]) === '') {\r\n                        totalWidth += maxWidth + itemGap;\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalHeight = Math.max(totalHeight, temp);\r\n                        temp = 0;\r\n                        continue;\r\n                    }\r\n                    if (temp + itemHeight + itemGap > zrHeight) {\r\n                        // new line\r\n                        totalWidth += maxWidth + itemGap;\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalHeight = Math.max(totalHeight, temp);\r\n                        temp = 0;\r\n                    }\r\n                    else {\r\n                        temp += itemHeight + itemGap;\r\n                        totalHeight = Math.max(totalHeight, temp - itemGap);\r\n                    }\r\n                }\r\n            }\r\n\r\n            zrWidth = this.zr.getWidth();\r\n            zrHeight = this.zr.getHeight();\r\n            var x;\r\n            switch (this.legendOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.legendOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - padding[3]\r\n                        - this.legendOption.borderWidth * 2;\r\n                    break;\r\n                default :\r\n                    x = this.parsePercent(this.legendOption.x, zrWidth);\r\n                    break;\r\n            }\r\n            \r\n            var y;\r\n            switch (this.legendOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.legendOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[0]\r\n                        - padding[2]\r\n                        - this.legendOption.borderWidth * 2;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.parsePercent(this.legendOption.y, zrHeight);\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight,\r\n                maxWidth: maxWidth\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 根据名称返回series数据或data\r\n         */\r\n        _getSomethingByName: function (name) {\r\n            var series = this.option.series;\r\n            var data;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].name === name) {\r\n                    // 系列名称优先\r\n                    return {\r\n                        type: series[i].type,\r\n                        series: series[i],\r\n                        seriesIndex: i,\r\n                        data: null,\r\n                        dataIndex: -1\r\n                    };\r\n                }\r\n\r\n                if (\r\n                    series[i].type === ecConfig.CHART_TYPE_PIE \r\n                    || series[i].type === ecConfig.CHART_TYPE_RADAR\r\n                    || series[i].type === ecConfig.CHART_TYPE_CHORD\r\n                    || series[i].type === ecConfig.CHART_TYPE_FORCE\r\n                    || series[i].type === ecConfig.CHART_TYPE_FUNNEL\r\n                    || series[i].type === ecConfig.CHART_TYPE_TREEMAP\r\n                ) {\r\n                    data = series[i].categories || series[i].data || series[i].nodes;\r\n\r\n                    for (var j = 0, k = data.length; j < k; j++) {\r\n                        if (data[j].name === name) {\r\n                            return {\r\n                                type: series[i].type,\r\n                                series: series[i],\r\n                                seriesIndex: i,\r\n                                data: data[j],\r\n                                dataIndex: j\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                type: 'bar',\r\n                series: null,\r\n                seriesIndex: -1,\r\n                data: null,\r\n                dataIndex: -1\r\n            };\r\n        },\r\n        \r\n        _getItemShapeByType: function (x, y, width, height, color, itemType, defaultColor) {\r\n            var highlightColor = color === '#ccc' ? defaultColor : color;\r\n            var itemShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    iconType: 'legendicon' + itemType,\r\n                    x: x,\r\n                    y: y,\r\n                    width: width,\r\n                    height: height,\r\n                    color: color,\r\n                    strokeColor: color,\r\n                    lineWidth: 2\r\n                },\r\n                highlightStyle: {\r\n                    color: highlightColor,\r\n                    strokeColor: highlightColor,\r\n                    lineWidth: 1\r\n                },\r\n                hoverable: this.legendOption.selectedMode,\r\n                clickable: this.legendOption.selectedMode\r\n            };\r\n            \r\n            var imageLocation;\r\n            if (itemType.match('image')) {\r\n                var imageLocation = itemType.replace(\r\n                    new RegExp('^image:\\\\/\\\\/'), ''\r\n                );\r\n                itemType = 'image';\r\n            }\r\n            // 特殊设置\r\n            switch (itemType) {\r\n                case 'line':\r\n                    itemShape.style.brushType = 'stroke';\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    break;\r\n                case 'radar':\r\n                case 'venn':\r\n                case 'tree':\r\n                case 'treemap':\r\n                case 'scatter':\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    break;\r\n                case 'k':\r\n                    itemShape.style.brushType = 'both';\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    itemShape.highlightStyle.color =\r\n                    itemShape.style.color = this.deepQuery(\r\n                        [this.ecTheme, ecConfig], 'k.itemStyle.normal.color'\r\n                    ) || '#fff';\r\n                    itemShape.style.strokeColor = color != '#ccc' \r\n                        ? (\r\n                            this.deepQuery(\r\n                                [this.ecTheme, ecConfig], 'k.itemStyle.normal.lineStyle.color'\r\n                            ) || '#ff3200'\r\n                        )\r\n                        : color;\r\n                    break;\r\n                case 'image':\r\n                    itemShape.style.iconType = 'image';\r\n                    itemShape.style.image = imageLocation;\r\n                    if (color === '#ccc') {\r\n                        itemShape.style.opacity = 0.5;\r\n                    }\r\n                    break;\r\n            }\r\n            return itemShape;\r\n        },\r\n\r\n        __legendSelected: function (param) {\r\n            var itemName = param.target._name;\r\n            if (this.legendOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            this._selectedMap[itemName] = !this._selectedMap[itemName];\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_SELECTED,\r\n                param.event,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: itemName\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 产生hover link事件 \r\n         */\r\n        __dispatchHoverLink : function(param) {\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_HOVERLINK,\r\n                param.event,\r\n                {\r\n                    target: param.target._name\r\n                },\r\n                this.myChart\r\n            );\r\n            return;\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption || this.option;\r\n                this.option.legend = this.reformOption(this.option.legend);\r\n                this.legendOption = this.option.legend;\r\n                \r\n                var data = this.legendOption.data || [];\r\n                var itemName;\r\n                var something;\r\n                var color;\r\n                var queryTarget;\r\n                if (this.legendOption.selected) {\r\n                    for (var k in this.legendOption.selected) {\r\n                        this._selectedMap[k] = typeof this._selectedMap[k] != 'undefined'\r\n                                               ? this._selectedMap[k]\r\n                                               : this.legendOption.selected[k];\r\n                    }\r\n                }\r\n                for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                    itemName = this._getName(data[i]);\r\n                    if (itemName === '') {\r\n                        continue;\r\n                    }\r\n                    something = this._getSomethingByName(itemName);\r\n                    if (!something.series) {\r\n                        this._hasDataMap[itemName] = false;\r\n                    } \r\n                    else {\r\n                        this._hasDataMap[itemName] = true;\r\n                        if (something.data\r\n                            && (something.type === ecConfig.CHART_TYPE_PIE\r\n                                || something.type === ecConfig.CHART_TYPE_FORCE\r\n                                || something.type === ecConfig.CHART_TYPE_FUNNEL)\r\n                        ) {\r\n                            queryTarget = [something.data, something.series];\r\n                        }\r\n                        else {\r\n                            queryTarget = [something.series];\r\n                        }\r\n                        \r\n                        color = this.getItemStyleColor(\r\n                            this.deepQuery(queryTarget, 'itemStyle.normal.color'),\r\n                            something.seriesIndex,\r\n                            something.dataIndex,\r\n                            something.data\r\n                        );\r\n                        if (color && something.type != ecConfig.CHART_TYPE_K) {\r\n                            this.setColor(itemName, color);\r\n                        }\r\n                        this._selectedMap[itemName] = \r\n                            this._selectedMap[itemName] != null\r\n                            ? this._selectedMap[itemName] : true; \r\n                    }\r\n                }\r\n            }\r\n            this.clear();\r\n            this._buildShape();\r\n        },\r\n        \r\n        getRelatedAmount: function(name) {\r\n            var amount = 0;\r\n            var series = this.option.series;\r\n            var data;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].name === name) {\r\n                    // 系列名称优先\r\n                    amount++;\r\n                }\r\n\r\n                if (\r\n                    series[i].type === ecConfig.CHART_TYPE_PIE \r\n                    || series[i].type === ecConfig.CHART_TYPE_RADAR\r\n                    || series[i].type === ecConfig.CHART_TYPE_CHORD\r\n                    || series[i].type === ecConfig.CHART_TYPE_FORCE\r\n                    || series[i].type === ecConfig.CHART_TYPE_FUNNEL\r\n                ) {\r\n                    data = series[i].type != ecConfig.CHART_TYPE_FORCE\r\n                           ? series[i].data         // 饼图、雷达图、和弦图得查找里面的数据名字\r\n                           : series[i].categories;  // 力导布局查找categories配置\r\n                    for (var j = 0, k = data.length; j < k; j++) {\r\n                        if (data[j].name === name && data[j].value != '-') {\r\n                            amount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return amount;\r\n        },\r\n\r\n        setColor: function (legendName, color) {\r\n            this._colorMap[legendName] = color;\r\n        },\r\n\r\n        getColor: function (legendName) {\r\n            if (!this._colorMap[legendName]) {\r\n                this._colorMap[legendName] = this.zr.getColor(this._colorIndex++);\r\n            }\r\n            return this._colorMap[legendName];\r\n        },\r\n        \r\n        hasColor: function (legendName) {\r\n            return this._colorMap[legendName] ? this._colorMap[legendName] : false;\r\n        },\r\n\r\n        add: function (name, color){\r\n            var data = this.legendOption.data;\r\n            for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                if (this._getName(data[i]) === name) {\r\n                    // 已有就不重复加了\r\n                    return;\r\n                }\r\n            }\r\n            this.legendOption.data.push(name);\r\n            this.setColor(name,color);\r\n            this._selectedMap[name] = true;\r\n            this._hasDataMap[name] = true;\r\n        },\r\n\r\n        del: function (name){\r\n            var data = this.legendOption.data;\r\n            for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                if (this._getName(data[i]) === name) {\r\n                    return this.legendOption.data.splice(i, 1);\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 特殊图形元素回调设置\r\n         * @param {Object} name\r\n         * @param {Object} itemShape\r\n         */\r\n        getItemShape: function (name) {\r\n            if (name == null) {\r\n                return;\r\n            }\r\n            var shape;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                shape = this.shapeList[i];\r\n                if (shape._name === name && shape.type != 'text') {\r\n                    return shape;\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 特殊图形元素回调设置\r\n         * @param {Object} name\r\n         * @param {Object} itemShape\r\n         */\r\n        setItemShape: function (name, itemShape) {\r\n            var shape;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                shape = this.shapeList[i];\r\n                if (shape._name === name && shape.type != 'text') {\r\n                    if (!this._selectedMap[name]) {\r\n                        itemShape.style.color = '#ccc';\r\n                        itemShape.style.strokeColor = '#ccc';\r\n                    }\r\n                    this.zr.modShape(shape.id, itemShape);\r\n                }\r\n            }\r\n        },\r\n\r\n        isSelected: function (itemName) {\r\n            if (typeof this._selectedMap[itemName] != 'undefined') {\r\n                return this._selectedMap[itemName];\r\n            }\r\n            else {\r\n                // 没在legend里定义的都为true啊~\r\n                return true;\r\n            }\r\n        },\r\n        \r\n        getSelectedMap: function () {\r\n            return this._selectedMap;\r\n        },\r\n        \r\n        setSelected: function(itemName, selectStatus) {\r\n            if (this.legendOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            this._selectedMap[itemName] = selectStatus;\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_SELECTED,\r\n                null,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: itemName\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param, status) {\r\n            var legendSelected = param.selected;\r\n            for (var itemName in legendSelected) {\r\n                if (this._selectedMap[itemName] != legendSelected[itemName]) {\r\n                    // 有一项不一致都需要重绘\r\n                    status.needRefresh = true;\r\n                }\r\n                this._selectedMap[itemName] = legendSelected[itemName];\r\n            }\r\n            return;\r\n        }\r\n    };\r\n    \r\n    var legendIcon = {\r\n        line: function (ctx, style) {\r\n            var dy = style.height / 2;\r\n            ctx.moveTo(style.x,     style.y + dy);\r\n            ctx.lineTo(style.x + style.width,style.y + dy);\r\n        },\r\n        \r\n        pie: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            SectorShape.prototype.buildPath(ctx, {\r\n                x: x + width / 2,\r\n                y: y + height + 2,\r\n                r: height,\r\n                r0: 6,\r\n                startAngle: 45,\r\n                endAngle: 135\r\n            });\r\n        },\r\n        \r\n        eventRiver: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            ctx.moveTo(x, y + height);\r\n            ctx.bezierCurveTo(\r\n                x + width, y + height, x, y + 4, x + width, y + 4\r\n            );\r\n            ctx.lineTo(x + width, y);\r\n            ctx.bezierCurveTo(\r\n                x, y, x + width, y + height - 4, x, y + height - 4\r\n            );\r\n            ctx.lineTo(x, y + height);\r\n        },\r\n        \r\n        k: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            CandleShape.prototype.buildPath(ctx, {\r\n                x: x + width / 2,\r\n                y: [y + 1, y + 1, y + height - 6, y + height],\r\n                width: width - 6\r\n            });\r\n        },\r\n        \r\n        bar: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y +1;\r\n            var width = style.width;\r\n            var height = style.height - 2;\r\n            var r = 3;\r\n            \r\n            ctx.moveTo(x + r, y);\r\n            ctx.lineTo(x + width - r, y);\r\n            ctx.quadraticCurveTo(\r\n                x + width, y, x + width, y + r\r\n            );\r\n            ctx.lineTo(x + width, y + height - r);\r\n            ctx.quadraticCurveTo(\r\n                x + width, y + height, x + width - r, y + height\r\n            );\r\n            ctx.lineTo(x + r, y + height);\r\n            ctx.quadraticCurveTo(\r\n                x, y + height, x, y + height - r\r\n            );\r\n            ctx.lineTo(x, y + r);\r\n            ctx.quadraticCurveTo(x, y, x + r, y);\r\n        },\r\n        \r\n        force: function (ctx, style) {\r\n            IconShape.prototype.iconLibrary.circle(ctx, style);\r\n        },\r\n        \r\n        radar: function (ctx, style) {\r\n            var n = 6;\r\n            var x = style.x + style.width / 2;\r\n            var y = style.y + style.height / 2;\r\n            var r = style.height / 2;\r\n\r\n            var dStep = 2 * Math.PI / n;\r\n            var deg = -Math.PI / 2;\r\n            var xStart = x + r * Math.cos(deg);\r\n            var yStart = y + r * Math.sin(deg);\r\n            \r\n            ctx.moveTo(xStart, yStart);\r\n            deg += dStep;\r\n            for (var i = 0, end = n - 1; i < end; i ++) {\r\n                ctx.lineTo(x + r * Math.cos(deg), y + r * Math.sin(deg));\r\n                deg += dStep;\r\n            }\r\n            ctx.lineTo(xStart, yStart);\r\n        }\r\n    };\r\n    legendIcon.chord = legendIcon.pie;\r\n    legendIcon.map = legendIcon.bar;\r\n    \r\n    for (var k in legendIcon) {\r\n        IconShape.prototype.iconLibrary['legendicon' + k] = legendIcon[k];\r\n    }\r\n    \r\n    zrUtil.inherits(Legend, Base);\r\n    \r\n    require('../component').define('legend', Legend);\r\n    \r\n    return Legend;\r\n});\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/legend.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * zrender\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * shape类：蜡烛\n * 可配图形属性：\n   {\n       // 基础属性\n       shape  : 'candle',       // 必须，shape类标识，需要显式指定\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\n       invisible : {boolean},   // 默认为false，是否可见\n\n       // 样式属性，默认状态样式样式属性\n       style  : {\n           x             : {number},  // 必须，横坐标\n           y             : {Array},   // 必须，纵坐标数组\n       },\n\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\n       highlightStyle : {\n           // 同style\n       }\n\n       // 交互属性，详见shape.Base\n\n       // 事件属性，详见shape.Base\n   }\n         例子：\n   {\n       shape  : 'candle',\n       id     : '123456',\n       zlevel : 1,\n       style  : {\n           x : 200,\n           y : [100,123,90,125],\n           width : 150,\n           color : '#eee',\n           text : 'Baidu'\n       },\n       myName : 'kener',  // 可自带任何有效自定义属性\n\n       clickable : true,\n       onClick : function (eventPacket) {\n           alert(eventPacket.target.myName);\n       }\n   }\n */\ndefine(function (require) {\n    var Base = require('zrender/shape/Base');\n    var zrUtil = require('zrender/tool/util');\n\n    function Candle(options) {\n        Base.call(this, options);\n    }\n\n    Candle.prototype =  {\n        type: 'candle',\n        _numberOrder : function (a, b) {\n            return b - a;\n        },\n\n        /**\n         * 创建矩形路径\n         * @param {Context2D} ctx Canvas 2D上下文\n         * @param {Object} style 样式\n         */\n        buildPath : function (ctx, style) {\n            var yList = zrUtil.clone(style.y).sort(this._numberOrder);\n\n            ctx.moveTo(style.x, yList[3]);\n            ctx.lineTo(style.x, yList[2]);\n            ctx.moveTo(style.x - style.width / 2, yList[2]);\n            ctx.rect(\n                style.x - style.width / 2,\n                yList[2],\n                style.width,\n                yList[1] - yList[2]\n            );\n            ctx.moveTo(style.x, yList[1]);\n            ctx.lineTo(style.x, yList[0]);\n        },\n\n        /**\n         * 返回矩形区域，用于局部刷新和文字定位\n         * @param {Object} style\n         */\n        getRect : function (style) {\n            if (!style.__rect) {\n                var lineWidth = 0;\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\n                    lineWidth = style.lineWidth || 1;\n                }\n\n                var yList = zrUtil.clone(style.y).sort(this._numberOrder);\n                style.__rect = {\n                    x : Math.round(style.x - style.width / 2 - lineWidth / 2),\n                    y : Math.round(yList[3] - lineWidth / 2),\n                    width : style.width + lineWidth,\n                    height : yList[0] - yList[3] + lineWidth\n                };\n            }\n\n            return style.__rect;\n        },\n\n\n        isCover : require('./normalIsCover')\n    };\n\n    zrUtil.inherits(Candle, Base);\n\n    return Candle;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/Candle.js\n ** module id = 69\n ** module chunks = 0\n **/","/**\n * 扇形\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @module zrender/shape/Sector\n * @example\n *     var Sector = require('zrender/shape/Sector');\n *     var shape = new Sector({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 60,\n *             r0: 30,\n *             startAngle: 0,\n *             endEngle: 180\n *         } \n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} ISectorStyle\n * @property {number} x 圆心x坐标\n * @property {number} y 圆心y坐标\n * @property {number} r 外圆半径\n * @property {number} [r0=0] 内圆半径，指定后将出现内弧，同时扇边长度为`r - r0`\n * @property {number} startAngle 起始角度，`[0, 360)`\n * @property {number} endAngle 结束角度，`(0, 360]`\n * @property {boolean} [clockWise=false] 是否是顺时针\n * @property {string} [brushType='fill']\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\n\ndefine(\n    function (require) {\n\n        var math = require('../tool/math');\n        var computeBoundingBox = require('../tool/computeBoundingBox');\n        var vec2 = require('../tool/vector');\n        var Base = require('./Base');\n        \n        var min0 = vec2.create();\n        var min1 = vec2.create();\n        var max0 = vec2.create();\n        var max1 = vec2.create();\n        /**\n         * @alias module:zrender/shape/Sector\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Sector = function (options) {\n            Base.call(this, options);\n            /**\n             * 扇形绘制样式\n             * @name module:zrender/shape/Sector#style\n             * @type {module:zrender/shape/Sector~ISectorStyle}\n             */\n            /**\n             * 扇形高亮绘制样式\n             * @name module:zrender/shape/Sector#highlightStyle\n             * @type {module:zrender/shape/Sector~ISectorStyle}\n             */\n        };\n\n        Sector.prototype = {\n            type: 'sector',\n\n            /**\n             * 创建扇形路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Sector~ISectorStyle} style\n             */\n            buildPath : function (ctx, style) {\n                var x = style.x;   // 圆心x\n                var y = style.y;   // 圆心y\n                var r0 = style.r0 || 0;     // 形内半径[0,r)\n                var r = style.r;            // 扇形外半径(0,r]\n                var startAngle = style.startAngle;          // 起始角度[0,360)\n                var endAngle = style.endAngle;              // 结束角度(0,360]\n                var clockWise = style.clockWise || false;\n\n                startAngle = math.degreeToRadian(startAngle);\n                endAngle = math.degreeToRadian(endAngle);\n\n                if (!clockWise) {\n                    // 扇形默认是逆时针方向，Y轴向上\n                    // 这个跟arc的标准不一样，为了兼容echarts\n                    startAngle = -startAngle;\n                    endAngle = -endAngle;\n                }\n\n                var unitX = math.cos(startAngle);\n                var unitY = math.sin(startAngle);\n                ctx.moveTo(\n                    unitX * r0 + x,\n                    unitY * r0 + y\n                );\n\n                ctx.lineTo(\n                    unitX * r + x,\n                    unitY * r + y\n                );\n\n                ctx.arc(x, y, r, startAngle, endAngle, !clockWise);\n\n                ctx.lineTo(\n                    math.cos(endAngle) * r0 + x,\n                    math.sin(endAngle) * r0 + y\n                );\n\n                if (r0 !== 0) {\n                    ctx.arc(x, y, r0, endAngle, startAngle, clockWise);\n                }\n\n                ctx.closePath();\n\n                return;\n            },\n\n            /**\n             * 返回扇形包围盒矩形\n             * @param {module:zrender/shape/Sector~ISectorStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var x = style.x;   // 圆心x\n                var y = style.y;   // 圆心y\n                var r0 = style.r0 || 0;     // 形内半径[0,r)\n                var r = style.r;            // 扇形外半径(0,r]\n                var startAngle = math.degreeToRadian(style.startAngle);\n                var endAngle = math.degreeToRadian(style.endAngle);\n                var clockWise = style.clockWise;\n\n                if (!clockWise) {\n                    startAngle = -startAngle;\n                    endAngle = -endAngle;\n                }\n\n                if (r0 > 1) {\n                    computeBoundingBox.arc(\n                        x, y, r0, startAngle, endAngle, !clockWise, min0, max0\n                    );   \n                } else {\n                    min0[0] = max0[0] = x;\n                    min0[1] = max0[1] = y;\n                }\n                computeBoundingBox.arc(\n                    x, y, r, startAngle, endAngle, !clockWise, min1, max1\n                );\n\n                vec2.min(min0, min0, min1);\n                vec2.max(max0, max0, max1);\n                style.__rect = {\n                    x: min0[0],\n                    y: min0[1],\n                    width: max0[0] - min0[0],\n                    height: max0[1] - min0[1]\n                };\n                return style.__rect;\n            }\n        };\n\n\n        require('../tool/util').inherits(Sector, Base);\n        return Sector;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Sector.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang(https://github.com/pissang)\n *         errorrik (errorrik@gmail.com)\n */\ndefine(\n    function (require) {\n        var vec2 = require('./vector');\n        var curve = require('./curve');\n\n        /**\n         * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n         * @module zrender/tool/computeBoundingBox\n         * @param {Array<Object>} points 顶点数组\n         * @param {number} min\n         * @param {number} max\n         */\n        function computeBoundingBox(points, min, max) {\n            if (points.length === 0) {\n                return;\n            }\n            var left = points[0][0];\n            var right = points[0][0];\n            var top = points[0][1];\n            var bottom = points[0][1];\n            \n            for (var i = 1; i < points.length; i++) {\n                var p = points[i];\n                if (p[0] < left) {\n                    left = p[0];\n                }\n                if (p[0] > right) {\n                    right = p[0];\n                }\n                if (p[1] < top) {\n                    top = p[1];\n                }\n                if (p[1] > bottom) {\n                    bottom = p[1];\n                }\n            }\n\n            min[0] = left;\n            min[1] = top;\n            max[0] = right;\n            max[1] = bottom;\n        }\n\n        /**\n         * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n         * @memberOf module:zrender/tool/computeBoundingBox\n         * @param {Array.<number>} p0\n         * @param {Array.<number>} p1\n         * @param {Array.<number>} p2\n         * @param {Array.<number>} p3\n         * @param {Array.<number>} min\n         * @param {Array.<number>} max\n         */\n        function computeCubeBezierBoundingBox(p0, p1, p2, p3, min, max) {\n            var xDim = [];\n            curve.cubicExtrema(p0[0], p1[0], p2[0], p3[0], xDim);\n            for (var i = 0; i < xDim.length; i++) {\n                xDim[i] = curve.cubicAt(p0[0], p1[0], p2[0], p3[0], xDim[i]);\n            }\n            var yDim = [];\n            curve.cubicExtrema(p0[1], p1[1], p2[1], p3[1], yDim);\n            for (var i = 0; i < yDim.length; i++) {\n                yDim[i] = curve.cubicAt(p0[1], p1[1], p2[1], p3[1], yDim[i]);\n            }\n\n            xDim.push(p0[0], p3[0]);\n            yDim.push(p0[1], p3[1]);\n\n            var left = Math.min.apply(null, xDim);\n            var right = Math.max.apply(null, xDim);\n            var top = Math.min.apply(null, yDim);\n            var bottom = Math.max.apply(null, yDim);\n\n            min[0] = left;\n            min[1] = top;\n            max[0] = right;\n            max[1] = bottom;\n        }\n\n        /**\n         * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n         * @memberOf module:zrender/tool/computeBoundingBox\n         * @param {Array.<number>} p0\n         * @param {Array.<number>} p1\n         * @param {Array.<number>} p2\n         * @param {Array.<number>} min\n         * @param {Array.<number>} max\n         */\n        function computeQuadraticBezierBoundingBox(p0, p1, p2, min, max) {\n            // Find extremities, where derivative in x dim or y dim is zero\n            var t1 = curve.quadraticExtremum(p0[0], p1[0], p2[0]);\n            var t2 = curve.quadraticExtremum(p0[1], p1[1], p2[1]);\n\n            t1 = Math.max(Math.min(t1, 1), 0);\n            t2 = Math.max(Math.min(t2, 1), 0);\n\n            var ct1 = 1 - t1;\n            var ct2 = 1 - t2;\n\n            var x1 = ct1 * ct1 * p0[0] \n                     + 2 * ct1 * t1 * p1[0] \n                     + t1 * t1 * p2[0];\n            var y1 = ct1 * ct1 * p0[1] \n                     + 2 * ct1 * t1 * p1[1] \n                     + t1 * t1 * p2[1];\n\n            var x2 = ct2 * ct2 * p0[0] \n                     + 2 * ct2 * t2 * p1[0] \n                     + t2 * t2 * p2[0];\n            var y2 = ct2 * ct2 * p0[1] \n                     + 2 * ct2 * t2 * p1[1] \n                     + t2 * t2 * p2[1];\n            min[0] = Math.min(p0[0], p2[0], x1, x2);\n            min[1] = Math.min(p0[1], p2[1], y1, y2);\n            max[0] = Math.max(p0[0], p2[0], x1, x2);\n            max[1] = Math.max(p0[1], p2[1], y1, y2);\n        }\n\n        var start = vec2.create();\n        var end = vec2.create();\n        var extremity = vec2.create();\n        /**\n         * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n         * @method\n         * @memberOf module:zrender/tool/computeBoundingBox\n         * @param {Array.<number>} center 圆弧中心点\n         * @param {number} radius 圆弧半径\n         * @param {number} startAngle 圆弧开始角度\n         * @param {number} endAngle 圆弧结束角度\n         * @param {number} anticlockwise 是否是顺时针\n         * @param {Array.<number>} min\n         * @param {Array.<number>} max\n         */\n        var computeArcBoundingBox = function (\n            x, y, r, startAngle, endAngle, anticlockwise, min, max\n        ) { \n            if (Math.abs(startAngle - endAngle) >= Math.PI * 2) {\n                // Is a circle\n                min[0] = x - r;\n                min[1] = y - r;\n                max[0] = x + r;\n                max[1] = y + r;\n                return;\n            }\n\n            start[0] = Math.cos(startAngle) * r + x;\n            start[1] = Math.sin(startAngle) * r + y;\n\n            end[0] = Math.cos(endAngle) * r + x;\n            end[1] = Math.sin(endAngle) * r + y;\n\n            vec2.min(min, start, end);\n            vec2.max(max, start, end);\n            \n            // Thresh to [0, Math.PI * 2]\n            startAngle = startAngle % (Math.PI * 2);\n            if (startAngle < 0) {\n                startAngle = startAngle + Math.PI * 2;\n            }\n            endAngle = endAngle % (Math.PI * 2);\n            if (endAngle < 0) {\n                endAngle = endAngle + Math.PI * 2;\n            }\n\n            if (startAngle > endAngle && !anticlockwise) {\n                endAngle += Math.PI * 2;\n            } else if (startAngle < endAngle && anticlockwise) {\n                startAngle += Math.PI * 2;\n            }\n            if (anticlockwise) {\n                var tmp = endAngle;\n                endAngle = startAngle;\n                startAngle = tmp;\n            }\n\n            // var number = 0;\n            // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n            for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n                if (angle > startAngle) {\n                    extremity[0] = Math.cos(angle) * r + x;\n                    extremity[1] = Math.sin(angle) * r + y;\n\n                    vec2.min(min, extremity, min);\n                    vec2.max(max, extremity, max);\n                }\n            }\n        };\n\n        computeBoundingBox.cubeBezier = computeCubeBezierBoundingBox;\n        computeBoundingBox.quadraticBezier = computeQuadraticBezierBoundingBox;\n        computeBoundingBox.arc = computeArcBoundingBox;\n\n        return computeBoundingBox;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/tool/computeBoundingBox.js\n ** module id = 71\n ** module chunks = 0\n **/","/**\n * echarts组件：时间轴组件\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function (require) {\n    var Base = require('./base');\n    \n    // 图形依赖\n    var RectangleShape = require('zrender/shape/Rectangle');\n    var IconShape = require('../util/shape/Icon');\n    var ChainShape = require('../util/shape/Chain');\n    \n    var ecConfig = require('../config');\n    ecConfig.timeline = {\n        zlevel: 0,                  // 一级层叠\n        z: 4,                       // 二级层叠\n        show: true,\n        type: 'time',  // 模式是时间类型，支持 number\n        notMerge: false,\n        realtime: true,\n        x: 80,\n        // y: {number},\n        x2: 80,\n        y2: 0,\n        // width: {totalWidth} - x - x2,\n        height: 50,\n        backgroundColor: 'rgba(0,0,0,0)',   // 时间轴背景颜色\n        borderColor: '#ccc',               // 时间轴边框颜色\n        borderWidth: 0,                    // 时间轴边框线宽，单位px，默认为0（无边框）\n        padding: 5,                        // 时间轴内边距，单位px，默认各方向内边距为5，\n        controlPosition: 'left',           // 'right' | 'none'\n        autoPlay: false,\n        loop: true,\n        playInterval: 2000,                // 播放时间间隔，单位ms\n        lineStyle: {\n            width: 1,\n            color: '#666',\n            type: 'dashed'\n        },\n        label: {                            // 文本标签\n            show: true,\n            interval: 'auto',\n            rotate: 0,\n            // formatter: null,\n            textStyle: {                    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                color: '#333'\n            }\n        },\n        checkpointStyle: {\n            symbol: 'auto',\n            symbolSize: 'auto',\n            color: 'auto',\n            borderColor: 'auto',\n            borderWidth: 'auto',\n            label: {                            // 文本标签\n                show: false,\n                textStyle: {                    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                    color: 'auto'\n                }\n            }\n        },\n        controlStyle: {\n            itemSize: 15,\n            itemGap: 5,\n            normal: { color: '#333'},\n            emphasis: { color: '#1e90ff'}\n        },\n        symbol: 'emptyDiamond',\n        symbolSize: 4,\n        currentIndex: 0\n        // data: []\n    };\n\n    var zrUtil = require('zrender/tool/util');\n    var zrArea = require('zrender/tool/area');\n    var zrEvent = require('zrender/tool/event');\n\n    /**\n     * 构造函数\n     * @param {Object} messageCenter echart消息中心\n     * @param {ZRender} zr zrender实例\n     * @param {Object} option 图表参数\n     */\n    function Timeline(ecTheme, messageCenter, zr, option, myChart) {\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\n\n        var self = this;\n        self._onclick = function(param) {\n            return self.__onclick(param);\n        };\n        self._ondrift = function (dx, dy) {\n            return self.__ondrift(this, dx, dy);\n        };\n        self._ondragend = function () {\n            return self.__ondragend();\n        };\n        self._setCurrentOption = function() {\n            var timelineOption = self.timelineOption;\n            self.currentIndex %= timelineOption.data.length;\n            // console.log(self.currentIndex);\n            var curOption = self.options[self.currentIndex] || {};\n            self.myChart._setOption(curOption, timelineOption.notMerge, true);\n            \n            self.messageCenter.dispatch(\n                ecConfig.EVENT.TIMELINE_CHANGED,\n                null,\n                {\n                    currentIndex: self.currentIndex,\n                    data: timelineOption.data[self.currentIndex].name != null\n                          ? timelineOption.data[self.currentIndex].name\n                          : timelineOption.data[self.currentIndex]\n                },\n                self.myChart\n            );\n        };\n        self._onFrame = function() {\n            self._setCurrentOption();\n            self._syncHandleShape();\n            \n            if (self.timelineOption.autoPlay) {\n                self.playTicket = setTimeout(\n                    function() {\n                        self.currentIndex += 1;\n                        if (!self.timelineOption.loop\n                            && self.currentIndex >= self.timelineOption.data.length\n                        ) {\n                            self.currentIndex = self.timelineOption.data.length - 1;\n                            self.stop();\n                            return;\n                        }\n                        self._onFrame();\n                    },\n                    self.timelineOption.playInterval\n                );\n            }\n        };\n\n        this.setTheme(false);\n        this.options = this.option.options;\n        this.currentIndex = this.timelineOption.currentIndex % this.timelineOption.data.length;\n        \n        if (!this.timelineOption.notMerge && this.currentIndex !== 0) {\n            /*\n            for (var i = 1, l = this.timelineOption.data.length; i < l; i++) {\n                this.options[i] = zrUtil.merge(\n                    this.options[i], this.options[i - 1]\n                );\n            }\n            */\n           this.options[this.currentIndex] = zrUtil.merge(\n               this.options[this.currentIndex], this.options[0]\n           );\n        }\n        \n        if (this.timelineOption.show) {\n            this._buildShape();\n            this._syncHandleShape();\n        }\n        \n        this._setCurrentOption();\n        \n        if (this.timelineOption.autoPlay) {\n            var self = this;\n            this.playTicket = setTimeout(\n                function() {\n                    self.play();\n                },\n                this.ecTheme.animationDuration != null\n                ? this.ecTheme.animationDuration\n                : ecConfig.animationDuration\n            );\n        }\n    }\n    \n    Timeline.prototype = {\n        type: ecConfig.COMPONENT_TYPE_TIMELINE,\n        _buildShape: function () {\n            // 位置参数，通过计算所得x, y, width, height\n            this._location = this._getLocation();\n            this._buildBackground();\n            this._buildControl();\n            this._chainPoint = this._getChainPoint();\n            if (this.timelineOption.label.show) {\n                // 标签显示的挑选间隔\n                var interval = this._getInterval();\n                for (var i = 0, len = this._chainPoint.length; i < len; i += interval) {\n                    this._chainPoint[i].showLabel = true;\n                }\n            }\n            this._buildChain();\n            this._buildHandle();\n\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\n                this.zr.addShape(this.shapeList[i]);\n            }\n        },\n\n        /**\n         * 根据选项计算实体的位置坐标\n         */\n        _getLocation: function () {\n            var timelineOption = this.timelineOption;\n            var padding = this.reformCssArray(this.timelineOption.padding);\n            \n            // 水平布局\n            var zrWidth = this.zr.getWidth();\n            var x = this.parsePercent(timelineOption.x, zrWidth);\n            var x2 = this.parsePercent(timelineOption.x2, zrWidth);\n            var width;\n            if (timelineOption.width == null) {\n                width = zrWidth - x - x2;\n                x2 = zrWidth - x2;\n            }\n            else {\n                width = this.parsePercent(timelineOption.width, zrWidth);\n                x2 = x + width;\n            }\n\n            var zrHeight = this.zr.getHeight();\n            var height = this.parsePercent(timelineOption.height, zrHeight);\n            var y;\n            var y2;\n            if (timelineOption.y != null) {\n                y = this.parsePercent(timelineOption.y, zrHeight);\n                y2 = y + height;\n            }\n            else {\n                y2 = zrHeight - this.parsePercent(timelineOption.y2, zrHeight);\n                y = y2 - height;\n            }\n\n            return {\n                x: x + padding[3],\n                y: y + padding[0],\n                x2: x2 - padding[1],\n                y2: y2 - padding[2],\n                width: width - padding[1] - padding[3],\n                height: height - padding[0] - padding[2]\n            };\n        },\n\n        _getReformedLabel: function (idx) {\n            var timelineOption = this.timelineOption;\n            var data = timelineOption.data[idx].name != null\n                       ? timelineOption.data[idx].name\n                       : timelineOption.data[idx];\n            var formatter = timelineOption.data[idx].formatter \n                            || timelineOption.label.formatter;\n            if (formatter) {\n                if (typeof formatter === 'function') {\n                    data = formatter.call(this.myChart, data);\n                }\n                else if (typeof formatter === 'string') {\n                    data = formatter.replace('{value}', data);\n                }\n            }\n            return data;\n        },\n        \n        /**\n         * 计算标签显示挑选间隔\n         */\n        _getInterval: function () {\n            var chainPoint = this._chainPoint;\n            var timelineOption = this.timelineOption;\n            var interval   = timelineOption.label.interval;\n            if (interval === 'auto') {\n                // 麻烦的自适应计算\n                var fontSize = timelineOption.label.textStyle.fontSize;\n                var data = timelineOption.data;\n                var dataLength = timelineOption.data.length;\n\n                // 横向\n                if (dataLength > 3) {\n                    var isEnough = false;\n                    var labelSpace;\n                    var labelSize;\n                    interval = 0;\n                    while (!isEnough && interval < dataLength) {\n                        interval++;\n                        isEnough = true;\n                        for (var i = interval; i < dataLength; i += interval) {\n                            labelSpace = chainPoint[i].x - chainPoint[i - interval].x;\n                            if (timelineOption.label.rotate !== 0) {\n                                // 有旋转\n                                labelSize = fontSize;\n                            }\n                            else if (data[i].textStyle) {\n                                labelSize = zrArea.getTextWidth(\n                                    chainPoint[i].name,\n                                    chainPoint[i].textFont\n                                );\n                            }\n                            else {\n                                // 不定义data级特殊文本样式，用fontSize优化getTextWidth\n                                var label = chainPoint[i].name + '';\n                                var wLen = (label.match(/\\w/g) || '').length;\n                                var oLen = label.length - wLen;\n                                labelSize = wLen * fontSize * 2 / 3 + oLen * fontSize;\n                            }\n\n                            if (labelSpace < labelSize) {\n                                // 放不下，中断循环让interval++\n                                isEnough = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    // 少于3个则全部显示\n                    interval = 1;\n                }\n            }\n            else {\n                // 用户自定义间隔\n                interval = interval - 0 + 1;\n            }\n\n            return interval;\n        },\n        \n        /**\n         * 根据选项计算时间链条上的坐标及symbolList\n         */\n        _getChainPoint: function() {\n            var timelineOption = this.timelineOption;\n            var symbol = timelineOption.symbol.toLowerCase();\n            var symbolSize = timelineOption.symbolSize;\n            var rotate = timelineOption.label.rotate;\n            var textStyle = timelineOption.label.textStyle;\n            var textFont = this.getFont(textStyle);\n            var dataTextStyle;\n            var data = timelineOption.data;\n            var x = this._location.x;\n            var y = this._location.y + this._location.height / 4 * 3;\n            var width = this._location.x2 - this._location.x;\n            var len = data.length;\n            \n            function _getName(i) {\n                return (data[i].name != null ? data[i].name : data[i] + '');\n            }\n            var xList = [];\n            if (len > 1) {\n                var boundaryGap = width / len;\n                boundaryGap = boundaryGap > 50 ? 50 : (boundaryGap < 20 ? 5 : boundaryGap);\n                width -= boundaryGap * 2;\n                if (timelineOption.type === 'number') {\n                    // 平均分布\n                    for (var i = 0; i < len; i++) {\n                        xList.push(x + boundaryGap + width / (len - 1) * i);\n                    }\n                }\n                else {\n                    // 时间比例\n                    xList[0] = new Date(_getName(0).replace(/-/g, '/'));\n                    xList[len - 1] = new Date(_getName(len - 1).replace(/-/g, '/')) - xList[0];\n                    for (var i = 1; i < len; i++) {\n                        xList[i] =  x + boundaryGap \n                                    + width \n                                      * (new Date(_getName(i).replace(/-/g, '/')) - xList[0]) \n                                      / xList[len - 1];\n                    }\n                    xList[0] = x + boundaryGap;\n                }\n            }\n            else {\n                xList.push(x + width / 2);\n            }\n            \n            var list = [];\n            var curSymbol;\n            var n;\n            var isEmpty;\n            var textAlign;\n            var rotation;\n            for (var i = 0; i < len; i++) {\n                x = xList[i];\n                curSymbol = (data[i].symbol && data[i].symbol.toLowerCase()) || symbol;\n                if (curSymbol.match('empty')) {\n                    curSymbol = curSymbol.replace('empty', '');\n                    isEmpty = true;\n                }\n                else {\n                    isEmpty = false;\n                }\n                if (curSymbol.match('star')) {\n                    n = (curSymbol.replace('star','') - 0) || 5;\n                    curSymbol = 'star';\n                }\n                \n                dataTextStyle = data[i].textStyle \n                                ? zrUtil.merge(data[i].textStyle || {}, textStyle)\n                                : textStyle;\n                \n                textAlign = dataTextStyle.align || 'center';\n                \n                if (rotate) {\n                    textAlign = rotate > 0 ? 'right' : 'left';\n                    rotation = [rotate * Math.PI / 180, x, y - 5];\n                }\n                else {\n                    rotation = false;\n                }\n                \n                list.push({\n                    x: x,\n                    n: n,\n                    isEmpty: isEmpty,\n                    symbol: curSymbol,\n                    symbolSize: data[i].symbolSize || symbolSize,\n                    color: data[i].color,\n                    borderColor: data[i].borderColor,\n                    borderWidth: data[i].borderWidth,\n                    name: this._getReformedLabel(i),\n                    textColor: dataTextStyle.color,\n                    textAlign: textAlign,\n                    textBaseline: dataTextStyle.baseline || 'middle',\n                    textX: x,\n                    textY: y - (rotate ? 5 : 0),\n                    textFont: data[i].textStyle ? this.getFont(dataTextStyle) : textFont,\n                    rotation: rotation,\n                    showLabel: false\n                });\n            }\n            \n            return list;\n        },\n        \n        _buildBackground: function () {\n            var timelineOption = this.timelineOption;\n            var padding = this.reformCssArray(this.timelineOption.padding);\n            var width = this._location.width;\n            var height = this._location.height;\n            \n            if (timelineOption.borderWidth !== 0 \n                || timelineOption.backgroundColor.replace(/\\s/g,'') != 'rgba(0,0,0,0)'\n            ) {\n                // 背景\n                this.shapeList.push(new RectangleShape({\n                    zlevel: this.getZlevelBase(),\n                    z: this.getZBase(),\n                    hoverable :false,\n                    style: {\n                        x: this._location.x - padding[3],\n                        y: this._location.y - padding[0],\n                        width: width + padding[1] + padding[3],\n                        height: height + padding[0] + padding[2],\n                        brushType: timelineOption.borderWidth === 0 ? 'fill' : 'both',\n                        color: timelineOption.backgroundColor,\n                        strokeColor: timelineOption.borderColor,\n                        lineWidth: timelineOption.borderWidth\n                    }\n                }));\n            }\n        },\n\n        _buildControl: function() {\n            var self = this;\n            var timelineOption = this.timelineOption;\n            var lineStyle = timelineOption.lineStyle;\n            var controlStyle = timelineOption.controlStyle;\n            if (timelineOption.controlPosition === 'none') {\n                return;\n            }\n            var iconSize = controlStyle.itemSize;\n            var iconGap = controlStyle.itemGap;\n            var x;\n            if (timelineOption.controlPosition === 'left') {\n                x = this._location.x;\n                this._location.x += (iconSize + iconGap) * 3;\n            }\n            else {\n                x = this._location.x2 - ((iconSize + iconGap) * 3 - iconGap);\n                this._location.x2 -= (iconSize + iconGap) * 3;\n            }\n            \n            var y = this._location.y;\n            var iconStyle = {\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase() + 1,\n                style: {\n                    iconType: 'timelineControl',\n                    symbol: 'last',\n                    x: x,\n                    y: y,\n                    width: iconSize,\n                    height: iconSize,\n                    brushType: 'stroke',\n                    color: controlStyle.normal.color,\n                    strokeColor: controlStyle.normal.color,\n                    lineWidth: lineStyle.width\n                },\n                highlightStyle: {\n                    color: controlStyle.emphasis.color,\n                    strokeColor: controlStyle.emphasis.color,\n                    lineWidth: lineStyle.width + 1\n                },\n                clickable: true\n            };\n            \n            this._ctrLastShape = new IconShape(iconStyle);\n            this._ctrLastShape.onclick = function() {\n                self.last();\n            };\n            this.shapeList.push(this._ctrLastShape);\n            \n            x += iconSize + iconGap;\n            this._ctrPlayShape = new IconShape(zrUtil.clone(iconStyle));\n            this._ctrPlayShape.style.brushType = 'fill';\n            this._ctrPlayShape.style.symbol = 'play';\n            this._ctrPlayShape.style.status = this.timelineOption.autoPlay ? 'playing' : 'stop';\n            this._ctrPlayShape.style.x = x;\n            this._ctrPlayShape.onclick = function() {\n                if (self._ctrPlayShape.style.status === 'stop') {\n                    self.play();\n                }\n                else {\n                    self.stop();\n                }\n            };\n            this.shapeList.push(this._ctrPlayShape);\n            \n            x += iconSize + iconGap;\n            this._ctrNextShape = new IconShape(zrUtil.clone(iconStyle));\n            this._ctrNextShape.style.symbol = 'next';\n            this._ctrNextShape.style.x = x;\n            this._ctrNextShape.onclick = function() {\n                self.next();\n            };\n            this.shapeList.push(this._ctrNextShape);\n        },\n        \n        /**\n         * 构建时间轴\n         */\n        _buildChain: function () {\n            var timelineOption = this.timelineOption;\n            var lineStyle = timelineOption.lineStyle;\n            this._timelineShae = {\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase(),\n                style: {\n                    x: this._location.x,\n                    y: this.subPixelOptimize(this._location.y, lineStyle.width),\n                    width: this._location.x2 - this._location.x,\n                    height: this._location.height,\n                    chainPoint: this._chainPoint,\n                    brushType:'both',\n                    strokeColor: lineStyle.color,\n                    lineWidth: lineStyle.width,\n                    lineType: lineStyle.type\n                },\n                hoverable: false,\n                clickable: true,\n                onclick: this._onclick\n            };\n\n            this._timelineShae = new ChainShape(this._timelineShae);\n            this.shapeList.push(this._timelineShae);\n        },\n\n        /**\n         * 构建拖拽手柄\n         */\n        _buildHandle: function () {\n            var curPoint = this._chainPoint[this.currentIndex];\n            var symbolSize = curPoint.symbolSize + 1;\n            symbolSize = symbolSize < 5 ? 5 : symbolSize;\n            \n            this._handleShape = {\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase() + 1,\n                hoverable: false,\n                draggable: true,\n                style: {\n                    iconType: 'diamond',\n                    n: curPoint.n,\n                    x: curPoint.x - symbolSize,\n                    y: this._location.y + this._location.height / 4 - symbolSize,\n                    width: symbolSize * 2,\n                    height: symbolSize * 2,\n                    brushType:'both',\n                    textPosition: 'specific',\n                    textX: curPoint.x,\n                    textY: this._location.y - this._location.height / 4,\n                    textAlign: 'center',\n                    textBaseline: 'middle'\n                },\n                highlightStyle: {},\n                ondrift: this._ondrift,\n                ondragend: this._ondragend\n            };\n            \n            this._handleShape = new IconShape(this._handleShape);\n            this.shapeList.push(this._handleShape);\n        },\n        \n        /**\n         * 同步拖拽图形样式 \n         */\n        _syncHandleShape: function() {\n            if (!this.timelineOption.show) {\n                return;\n            }\n            \n            var timelineOption = this.timelineOption;\n            var cpStyle = timelineOption.checkpointStyle;\n            var curPoint = this._chainPoint[this.currentIndex];\n\n            this._handleShape.style.text = cpStyle.label.show ? curPoint.name : '';\n            this._handleShape.style.textFont = curPoint.textFont;\n            \n            this._handleShape.style.n = curPoint.n;\n            if (cpStyle.symbol === 'auto') {\n                this._handleShape.style.iconType = curPoint.symbol != 'none' \n                                                   ? curPoint.symbol : 'diamond';\n            }\n            else {\n                this._handleShape.style.iconType = cpStyle.symbol;\n                if (cpStyle.symbol.match('star')) {\n                    this._handleShape.style.n = (cpStyle.symbol.replace('star','') - 0) || 5;\n                    this._handleShape.style.iconType = 'star';\n                }\n            }\n            \n            var symbolSize;\n            if (cpStyle.symbolSize === 'auto') {\n                symbolSize = curPoint.symbolSize + 2;\n                symbolSize = symbolSize < 5 ? 5 : symbolSize;\n            }\n            else {\n                symbolSize = cpStyle.symbolSize - 0;\n            }\n            \n            this._handleShape.style.color = cpStyle.color === 'auto'\n                                            ? (curPoint.color \n                                               ? curPoint.color \n                                               : timelineOption.controlStyle.emphasis.color\n                                              )\n                                            : cpStyle.color;\n            this._handleShape.style.textColor = cpStyle.label.textStyle.color === 'auto'\n                                                ? this._handleShape.style.color\n                                                : cpStyle.label.textStyle.color;\n            this._handleShape.highlightStyle.strokeColor = \n            this._handleShape.style.strokeColor = cpStyle.borderColor === 'auto'\n                                ? (curPoint.borderColor ? curPoint.borderColor : '#fff')\n                                : cpStyle.borderColor;\n            this._handleShape.style.lineWidth = cpStyle.borderWidth === 'auto'\n                                ? (curPoint.borderWidth ? curPoint.borderWidth : 0)\n                                : (cpStyle.borderWidth - 0);\n            this._handleShape.highlightStyle.lineWidth = this._handleShape.style.lineWidth + 1;\n            \n            this.zr.animate(this._handleShape.id, 'style')\n                .when(\n                    500,\n                    {\n                        x: curPoint.x - symbolSize,\n                        textX: curPoint.x,\n                        y: this._location.y + this._location.height / 4 - symbolSize,\n                        width: symbolSize * 2,\n                        height: symbolSize * 2\n                    }\n                )\n                .start('ExponentialOut');\n        },\n\n        _findChainIndex: function(x) {\n            var chainPoint = this._chainPoint;\n            var len = chainPoint.length;\n            if (x <= chainPoint[0].x) {\n                return 0;\n            }\n            else if (x >= chainPoint[len - 1].x) {\n                return len - 1;\n            }\n            for (var i = 0; i < len - 1; i++) {\n                if (x >= chainPoint[i].x && x <= chainPoint[i + 1].x) {\n                    // catch you！\n                    return (Math.abs(x - chainPoint[i].x) < Math.abs(x - chainPoint[i + 1].x))\n                           ? i : (i + 1);\n                }\n            }\n        },\n        \n        __onclick: function(param) {\n            var x = zrEvent.getX(param.event);\n            var newIndex =  this._findChainIndex(x);\n            if (newIndex === this.currentIndex) {\n                return true; // 啥事都没发生\n            }\n            \n            this.currentIndex = newIndex;\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\n            clearTimeout(this.playTicket);\n            this._onFrame();\n        },\n        \n        /**\n         * 拖拽范围控制\n         */\n        __ondrift: function (shape, dx) {\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\n            \n            var chainPoint = this._chainPoint;\n            var len = chainPoint.length;\n            var newIndex;\n            if (shape.style.x + dx <= chainPoint[0].x - chainPoint[0].symbolSize) {\n                shape.style.x = chainPoint[0].x - chainPoint[0].symbolSize;\n                newIndex = 0;\n            }\n            else if (shape.style.x + dx >= chainPoint[len - 1].x - chainPoint[len - 1].symbolSize) {\n                shape.style.x = chainPoint[len - 1].x - chainPoint[len - 1].symbolSize;\n                newIndex = len - 1;\n            }\n            else {\n                shape.style.x += dx;\n                newIndex = this._findChainIndex(shape.style.x);\n            }\n            var curPoint = chainPoint[newIndex];\n            var symbolSize = curPoint.symbolSize + 2;\n            shape.style.iconType = curPoint.symbol;\n            shape.style.n = curPoint.n;\n            shape.style.textX = shape.style.x + symbolSize / 2;\n            shape.style.y = this._location.y + this._location.height / 4 - symbolSize;\n            shape.style.width = symbolSize * 2;\n            shape.style.height = symbolSize * 2;\n            shape.style.text = curPoint.name;\n            \n            //console.log(newIndex)\n            if (newIndex === this.currentIndex) {\n                return true; // 啥事都没发生\n            }\n            \n            this.currentIndex = newIndex;\n            if (this.timelineOption.realtime) {\n                clearTimeout(this.playTicket);\n                var self = this;\n                this.playTicket = setTimeout(function() {\n                    self._setCurrentOption();\n                },200);\n            }\n\n            return true;\n        },\n        \n        __ondragend: function () {\n            this.isDragend = true;\n        },\n        \n        /**\n         * 数据项被拖拽出去\n         */\n        ondragend: function (param, status) {\n            if (!this.isDragend || !param.target) {\n                // 没有在当前实例上发生拖拽行为则直接返回\n                return;\n            }\n            !this.timelineOption.realtime && this._setCurrentOption();\n            \n            // 别status = {}赋值啊！！\n            status.dragOut = true;\n            status.dragIn = true;\n            status.needRefresh = false; // 会有消息触发fresh，不用再刷一遍\n            // 处理完拖拽事件后复位\n            this.isDragend = false;\n            this._syncHandleShape();\n            return;\n        },\n        \n        last: function () {\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\n            \n            this.currentIndex -= 1;\n            if (this.currentIndex < 0) {\n                this.currentIndex = this.timelineOption.data.length - 1;\n            }\n            this._onFrame();\n            \n            return this.currentIndex;\n        },\n        \n        next: function () {\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\n            \n            this.currentIndex += 1;\n            if (this.currentIndex >= this.timelineOption.data.length) {\n                this.currentIndex = 0;\n            }\n            this._onFrame();\n            \n            return this.currentIndex;\n        },\n        \n        play: function (targetIndex, autoPlay) {\n            if (this._ctrPlayShape && this._ctrPlayShape.style.status != 'playing') {\n                this._ctrPlayShape.style.status = 'playing';\n                this.zr.modShape(this._ctrPlayShape.id);\n                this.zr.refreshNextFrame();\n            }\n            \n            \n            this.timelineOption.autoPlay = autoPlay != null ? autoPlay : true;\n            \n            if (!this.timelineOption.autoPlay) {\n                clearTimeout(this.playTicket);\n            }\n            \n            this.currentIndex = targetIndex != null ? targetIndex : (this.currentIndex + 1);\n            if (this.currentIndex >= this.timelineOption.data.length) {\n                this.currentIndex = 0;\n            }\n            this._onFrame();\n            \n            return this.currentIndex;\n        },\n        \n        stop: function () {\n            if (this._ctrPlayShape && this._ctrPlayShape.style.status != 'stop') {\n                this._ctrPlayShape.style.status = 'stop';\n                this.zr.modShape(this._ctrPlayShape.id);\n                this.zr.refreshNextFrame();\n            }\n            \n            this.timelineOption.autoPlay = false;\n            \n            clearTimeout(this.playTicket);\n            \n            return this.currentIndex;\n        },\n        \n        /**\n         * 避免dataZoom带来两次refresh，不设refresh接口，resize重复一下buildshape逻辑 \n         */\n        resize: function () {\n            if (this.timelineOption.show) {\n                this.clear();\n                this._buildShape();\n                this._syncHandleShape();\n            }\n        },\n        \n        setTheme: function(needRefresh) {\n            this.timelineOption = this.reformOption(zrUtil.clone(this.option.timeline));\n            // 通用字体设置\n            this.timelineOption.label.textStyle = this.getTextStyle(\n                this.timelineOption.label.textStyle\n            );\n            this.timelineOption.checkpointStyle.label.textStyle = this.getTextStyle(\n                this.timelineOption.checkpointStyle.label.textStyle\n            );\n            if (!this.myChart.canvasSupported) {\n                // 不支持Canvas的强制关闭实时动画\n                this.timelineOption.realtime = false;\n            }\n            \n            if (this.timelineOption.show && needRefresh) {\n                this.clear();\n                this._buildShape();\n                this._syncHandleShape();\n            }\n        },\n        \n        /**\n         * 释放后实例不可用，重载基类方法\n         */\n        onbeforDispose: function () {\n            clearTimeout(this.playTicket);\n        }\n    };\n    \n    function timelineControl(ctx, style) {\n        var lineWidth = 2;//style.lineWidth;\n        var x = style.x + lineWidth;\n        var y = style.y + lineWidth + 2;\n        var width = style.width - lineWidth;\n        var height = style.height - lineWidth;\n        \n        \n        var symbol = style.symbol;\n        if (symbol === 'last') {\n            ctx.moveTo(x + width - 2, y + height / 3);\n            ctx.lineTo(x + width - 2, y);\n            ctx.lineTo(x + 2, y + height / 2);\n            ctx.lineTo(x + width - 2, y + height);\n            ctx.lineTo(x + width - 2, y + height / 3 * 2);\n            ctx.moveTo(x, y);\n            ctx.lineTo(x, y);\n        } \n        else if (symbol === 'next') {\n            ctx.moveTo(x + 2, y + height / 3);\n            ctx.lineTo(x + 2, y);\n            ctx.lineTo(x + width - 2, y + height / 2);\n            ctx.lineTo(x + 2, y + height);\n            ctx.lineTo(x + 2, y + height / 3 * 2);\n            ctx.moveTo(x, y);\n            ctx.lineTo(x, y);\n        }\n        else if (symbol === 'play') {\n            if (style.status === 'stop') {\n                ctx.moveTo(x + 2, y);\n                ctx.lineTo(x + width - 2, y + height / 2);\n                ctx.lineTo(x + 2, y + height);\n                ctx.lineTo(x + 2, y);\n            }\n            else {\n                var delta = style.brushType === 'both' ? 2 : 3;\n                ctx.rect(x + 2, y, delta, height);\n                ctx.rect(x + width - delta - 2, y, delta, height);\n            }\n        }\n        else if (symbol.match('image')) {\n            var imageLocation = '';\n            imageLocation = symbol.replace(\n                    new RegExp('^image:\\\\/\\\\/'), ''\n                );\n            symbol = IconShape.prototype.iconLibrary.image;\n            symbol(ctx, {\n                x: x,\n                y: y,\n                width: width,\n                height: height,\n                image: imageLocation\n            });\n        }\n    }\n    IconShape.prototype.iconLibrary['timelineControl'] = timelineControl;\n    \n    zrUtil.inherits(Timeline, Base);\n    \n    require('../component').define('timeline', Timeline);\n    \n    return Timeline;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/timeline.js\n ** module id = 72\n ** module chunks = 0\n **/","/**\n * zrender\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * shape类：时间轴线\n */\ndefine(function (require) {\n    var Base = require('zrender/shape/Base');\n    var IconShape = require('./Icon');\n\n    var dashedLineTo = require('zrender/shape/util/dashedLineTo');\n    var zrUtil = require('zrender/tool/util');\n    var matrix = require('zrender/tool/matrix');\n\n    function Chain(options) {\n        Base.call(this, options);\n    }\n\n    Chain.prototype =  {\n        type : 'chain',\n\n        /**\n         * 画刷\n         * @param ctx       画布句柄\n         * @param e         形状实体\n         * @param isHighlight   是否为高亮状态\n         * @param updateCallback 需要异步加载资源的shape可以通过这个callback(e)\n         *                       让painter更新视图，base.brush没用，需要的话重载brush\n         */\n        brush : function (ctx, isHighlight) {\n            var style = this.style;\n\n            if (isHighlight) {\n                // 根据style扩展默认高亮样式\n                style = this.getHighlightStyle(\n                    style,\n                    this.highlightStyle || {}\n                );\n            }\n\n            ctx.save();\n            this.setContext(ctx, style);\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            ctx.save();\n            ctx.beginPath();\n            this.buildLinePath(ctx, style);\n            ctx.stroke();\n            ctx.restore();\n            \n            this.brushSymbol(ctx, style);\n\n            ctx.restore();\n            return;\n        },\n\n        /**\n         * 创建线条路径\n         * @param {Context2D} ctx Canvas 2D上下文\n         * @param {Object} style 样式\n         */\n        buildLinePath : function (ctx, style) {\n            var x = style.x;\n            var y = style.y + 5;\n            var width = style.width;\n            var height = style.height / 2 - 10;\n\n            ctx.moveTo(x, y);\n            ctx.lineTo(x, y + height);\n            ctx.moveTo(x + width, y);\n            ctx.lineTo(x + width, y + height);\n\n            ctx.moveTo(x, y + height / 2);\n            if (!style.lineType || style.lineType == 'solid') {\n                ctx.lineTo(x + width, y + height / 2);\n            }\n            else if (style.lineType == 'dashed' || style.lineType == 'dotted') {\n                var dashLength = (style.lineWidth || 1)\n                             * (style.lineType == 'dashed' ? 5 : 1);\n                dashedLineTo(ctx, x, y + height / 2, x + width, y + height / 2, dashLength);\n            }\n        },\n\n        /**\n         * 标线始末标注\n         */\n        brushSymbol : function (ctx, style) {\n            var y = style.y + style.height / 4;\n            ctx.save();\n\n            var chainPoint = style.chainPoint;\n            var curPoint;\n            for (var idx = 0, l = chainPoint.length; idx < l; idx++) {\n                curPoint = chainPoint[idx];\n                if (curPoint.symbol != 'none') {\n                    ctx.beginPath();\n                    var symbolSize = curPoint.symbolSize;\n                    IconShape.prototype.buildPath(\n                        ctx,\n                        {\n                            iconType : curPoint.symbol,\n                            x : curPoint.x - symbolSize,\n                            y : y - symbolSize,\n                            width : symbolSize * 2,\n                            height : symbolSize * 2,\n                            n : curPoint.n\n                        }\n                    );\n                    ctx.fillStyle = curPoint.isEmpty ? '#fff' : style.strokeColor;\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.stroke();\n                }\n\n                if (curPoint.showLabel) {\n                    ctx.font = curPoint.textFont;\n                    ctx.fillStyle = curPoint.textColor;\n                    ctx.textAlign = curPoint.textAlign;\n                    ctx.textBaseline = curPoint.textBaseline;\n                    if (curPoint.rotation) {\n                        ctx.save();\n                        this._updateTextTransform(ctx, curPoint.rotation);\n                        ctx.fillText(curPoint.name, curPoint.textX, curPoint.textY);\n                        ctx.restore();\n                    }\n                    else {\n                        ctx.fillText(curPoint.name, curPoint.textX, curPoint.textY);\n                    }\n                }\n            }\n\n            ctx.restore();\n        },\n\n        _updateTextTransform : function (ctx, rotation) {\n            var _transform = matrix.create();\n            matrix.identity(_transform);\n\n            if (rotation[0] !== 0) {\n                var originX = rotation[1] || 0;\n                var originY = rotation[2] || 0;\n                if (originX || originY) {\n                    matrix.translate(\n                        _transform, _transform, [-originX, -originY]\n                    );\n                }\n                matrix.rotate(_transform, _transform, rotation[0]);\n                if (originX || originY) {\n                    matrix.translate(\n                        _transform, _transform, [originX, originY]\n                    );\n                }\n            }\n\n            // 保存这个变换矩阵\n            ctx.transform.apply(ctx, _transform);\n        },\n\n        isCover : function (x, y) {\n            var rect = this.style;\n            if (x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height)\n            ) {\n                // 矩形内\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n    };\n\n    zrUtil.inherits(Chain, Base);\n\n    return Chain;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/Chain.js\n ** module id = 73\n ** module chunks = 0\n **/","\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var util = require('../tool/util');\n        var zrColor = require('../tool/color');\n        var RectangleShape = require('../shape/Rectangle');\n\n        function Bar(options) {\n            Base.call(this, options);\n        }\n        util.inherits(Bar, Base);\n\n        \n        /**\n         * 进度条\n         * \n         * @param {Object} addShapeHandle\n         * @param {Object} refreshHandle\n         */\n        Bar.prototype._start = function (addShapeHandle, refreshHandle) {\n            // 特效默认配置\n            var options = util.merge(\n                this.options,\n                {\n                    textStyle : {\n                        color : '#888'\n                    },\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\n                    effectOption : {\n                        x : 0,\n                        y : this.canvasHeight / 2 - 30,\n                        width : this.canvasWidth,\n                        height : 5,\n                        brushType : 'fill',\n                        timeInterval : 100\n                    }\n                }\n            );\n\n            var textShape = this.createTextShape(options.textStyle);\n            var background = this.createBackgroundShape(options.backgroundColor);\n\n            var effectOption = options.effectOption;\n\n            // 初始化动画元素\n            var barShape = new RectangleShape({\n                highlightStyle : util.clone(effectOption)\n            });\n\n            barShape.highlightStyle.color =\n                effectOption.color\n                || zrColor.getLinearGradient(\n                    effectOption.x,\n                    effectOption.y,\n                    effectOption.x + effectOption.width,\n                    effectOption.y + effectOption.height,\n                    [ [ 0, '#ff6400' ], [ 0.5, '#ffe100' ], [ 1, '#b1ff00' ] ]\n                );\n\n            if (options.progress != null) {\n                // 指定进度\n                addShapeHandle(background);\n\n                barShape.highlightStyle.width =\n                    this.adjust(options.progress, [ 0, 1 ])\n                    * options.effectOption.width;\n                    \n                addShapeHandle(barShape);\n                addShapeHandle(textShape);\n\n                refreshHandle();\n                return;\n            }\n            else {\n                // 循环显示\n                barShape.highlightStyle.width = 0;\n                return setInterval(\n                    function () {\n                        addShapeHandle(background);\n\n                        if (barShape.highlightStyle.width < effectOption.width) {\n                            barShape.highlightStyle.width += 8;\n                        }\n                        else {\n                            barShape.highlightStyle.width = 0;\n                        }\n                        addShapeHandle(barShape);\n                        addShapeHandle(textShape);\n                        refreshHandle();\n                    },\n                    effectOption.timeInterval\n                );\n            }\n        };\n\n        return Bar;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/loadingEffect/Bar.js\n ** module id = 74\n ** module chunks = 0\n **/","\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var util = require('../tool/util');\n        var zrColor = require('../tool/color');\n        var CircleShape = require('../shape/Circle');\n\n        function Bubble(options) {\n            Base.call(this, options);\n        }\n        util.inherits(Bubble, Base);\n\n        /**\n         * 泡泡\n         *\n         * @param {Object} addShapeHandle\n         * @param {Object} refreshHandle\n         */\n        Bubble.prototype._start = function (addShapeHandle, refreshHandle) {\n            \n            // 特效默认配置\n            var options = util.merge(\n                this.options,\n                {\n                    textStyle : {\n                        color : '#888'\n                    },\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\n                    effect : {\n                        n : 50,\n                        lineWidth : 2,\n                        brushType : 'stroke',\n                        color : 'random',\n                        timeInterval : 100\n                    }\n                }\n            );\n\n            var textShape = this.createTextShape(options.textStyle);\n            var background = this.createBackgroundShape(options.backgroundColor);\n\n            var effectOption = options.effect;\n            var n = effectOption.n;\n            var brushType = effectOption.brushType;\n            var lineWidth = effectOption.lineWidth;\n\n            var shapeList = [];\n            var canvasWidth = this.canvasWidth;\n            var canvasHeight = this.canvasHeight;\n            \n            // 初始化动画元素\n            for (var i = 0; i < n; i++) {\n                var color = effectOption.color == 'random'\n                    ? zrColor.alpha(zrColor.random(), 0.3)\n                    : effectOption.color;\n\n                shapeList[i] = new CircleShape({\n                    highlightStyle : {\n                        x : Math.ceil(Math.random() * canvasWidth),\n                        y : Math.ceil(Math.random() * canvasHeight),\n                        r : Math.ceil(Math.random() * 40),\n                        brushType : brushType,\n                        color : color,\n                        strokeColor : color,\n                        lineWidth : lineWidth\n                    },\n                    animationY : Math.ceil(Math.random() * 20)\n                });\n            }\n            \n            return setInterval(\n                function () {\n                    addShapeHandle(background);\n                    \n                    for (var i = 0; i < n; i++) {\n                        var style = shapeList[i].highlightStyle;\n\n                        if (style.y - shapeList[i].animationY + style.r <= 0) {\n                            shapeList[i].highlightStyle.y = canvasHeight + style.r;\n                            shapeList[i].highlightStyle.x = Math.ceil(\n                                Math.random() * canvasWidth\n                            );\n                        }\n                        shapeList[i].highlightStyle.y -=\n                            shapeList[i].animationY;\n\n                        addShapeHandle(shapeList[i]);\n                    }\n\n                    addShapeHandle(textShape);\n                    refreshHandle();\n                },\n                effectOption.timeInterval\n            );\n        };\n\n        return Bubble;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/loadingEffect/Bubble.js\n ** module id = 75\n ** module chunks = 0\n **/","\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var util = require('../tool/util');\n        var zrColor = require('../tool/color');\n        var LineShape = require('../shape/Line');\n\n        function DynamicLine(options) {\n            Base.call(this, options);\n        }\n        util.inherits(DynamicLine, Base);\n\n\n        /**\n         * 动态线\n         * \n         * @param {Object} addShapeHandle\n         * @param {Object} refreshHandle\n         */\n        DynamicLine.prototype._start = function (addShapeHandle, refreshHandle) {\n            // 特效默认配置\n            var options = util.merge(\n                this.options,\n                {\n                    textStyle : {\n                        color : '#fff'\n                    },\n                    backgroundColor : 'rgba(0, 0, 0, 0.8)',\n                    effectOption : {\n                        n : 30,\n                        lineWidth : 1,\n                        color : 'random',\n                        timeInterval : 100\n                    }\n                }\n            );\n\n            var textShape = this.createTextShape(options.textStyle);\n            var background = this.createBackgroundShape(options.backgroundColor);\n\n            var effectOption = options.effectOption;\n            var n = effectOption.n;\n            var lineWidth = effectOption.lineWidth;\n\n            var shapeList = [];\n            var canvasWidth = this.canvasWidth;\n            var canvasHeight = this.canvasHeight;\n            \n            // 初始化动画元素\n            for (var i = 0; i < n; i++) {\n                var xStart = -Math.ceil(Math.random() * 1000);\n                var len = Math.ceil(Math.random() * 400);\n                var pos = Math.ceil(Math.random() * canvasHeight);\n\n                var color = effectOption.color == 'random'\n                    ? zrColor.random()\n                    : effectOption.color;\n                \n                shapeList[i] = new LineShape({\n                    highlightStyle : {\n                        xStart : xStart,\n                        yStart : pos,\n                        xEnd : xStart + len,\n                        yEnd : pos,\n                        strokeColor : color,\n                        lineWidth : lineWidth\n                    },\n                    animationX : Math.ceil(Math.random() * 100),\n                    len : len\n                });\n            }\n            \n            return setInterval(\n                function() {\n                    addShapeHandle(background);\n                    \n                    for (var i = 0; i < n; i++) {\n                        var style = shapeList[i].highlightStyle;\n\n                        if (style.xStart >= canvasWidth) {\n                            \n                            shapeList[i].len = Math.ceil(Math.random() * 400);\n                            style.xStart = -400;\n                            style.xEnd = -400 + shapeList[i].len;\n                            style.yStart = Math.ceil(Math.random() * canvasHeight);\n                            style.yEnd = style.yStart;\n                        }\n\n                        style.xStart += shapeList[i].animationX;\n                        style.xEnd += shapeList[i].animationX;\n\n                        addShapeHandle(shapeList[i]);\n                    }\n\n                    addShapeHandle(textShape);\n                    refreshHandle();\n                },\n                effectOption.timeInterval\n            );\n        };\n\n        return DynamicLine;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/loadingEffect/DynamicLine.js\n ** module id = 76\n ** module chunks = 0\n **/","\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var util = require('../tool/util');\n        var zrColor = require('../tool/color');\n        var RingShape = require('../shape/Ring');\n        var SectorShape = require('../shape/Sector');\n\n        function Ring(options) {\n            Base.call(this, options);\n        }\n        util.inherits(Ring, Base);\n\n\n        /**\n         * 圆环\n         * \n         * @param {Object} addShapeHandle\n         * @param {Object} refreshHandle\n         */\n        Ring.prototype._start = function (addShapeHandle, refreshHandle) {\n            \n            // 特效默认配置\n            var options = util.merge(\n                this.options,\n                {\n                    textStyle : {\n                        color : '#07a'\n                    },\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\n                    effect : {\n                        x : this.canvasWidth / 2,\n                        y : this.canvasHeight / 2,\n                        r0 : 60,\n                        r : 100,\n                        color : '#bbdcff',\n                        brushType: 'fill',\n                        textPosition : 'inside',\n                        textFont : 'normal 30px verdana',\n                        textColor : 'rgba(30, 144, 255, 0.6)',\n                        timeInterval : 100\n                    }\n                }\n            );\n\n            var effectOption = options.effect;\n\n            var textStyle = options.textStyle;\n            if (textStyle.x == null) {\n                textStyle.x = effectOption.x;\n            }\n            if (textStyle.y == null) {\n                textStyle.y = (effectOption.y + (effectOption.r0 + effectOption.r) / 2 - 5);\n            }\n            \n            var textShape = this.createTextShape(options.textStyle);\n            var background = this.createBackgroundShape(options.backgroundColor);\n\n            var x = effectOption.x;\n            var y = effectOption.y;\n            var r0 = effectOption.r0 + 6;\n            var r = effectOption.r - 6;\n            var color = effectOption.color;\n            var darkColor = zrColor.lift(color, 0.1);\n\n            var shapeRing = new RingShape({\n                highlightStyle : util.clone(effectOption)\n            });\n\n            // 初始化动画元素\n            var shapeList = [];\n            var clolrList = zrColor.getGradientColors(\n                [ '#ff6400', '#ffe100', '#97ff00' ], 25\n            );\n            var preAngle = 15;\n            var endAngle = 240;\n\n            for (var i = 0; i < 16; i++) {\n                shapeList.push(new SectorShape({\n                    highlightStyle  : {\n                        x : x,\n                        y : y,\n                        r0 : r0,\n                        r : r,\n                        startAngle : endAngle - preAngle,\n                        endAngle : endAngle,\n                        brushType: 'fill',\n                        color : darkColor\n                    },\n                    _color : zrColor.getLinearGradient(\n                        x + r0 * Math.cos(endAngle, true),\n                        y - r0 * Math.sin(endAngle, true),\n                        x + r0 * Math.cos(endAngle - preAngle, true),\n                        y - r0 * Math.sin(endAngle - preAngle, true),\n                        [\n                            [ 0, clolrList[i * 2] ],\n                            [ 1, clolrList[i * 2 + 1] ]\n                        ]\n                    )\n                }));\n                endAngle -= preAngle;\n            }\n            endAngle = 360;\n            for (var i = 0; i < 4; i++) {\n                shapeList.push(new SectorShape({\n                    highlightStyle  : {\n                        x : x,\n                        y : y,\n                        r0 : r0,\n                        r : r,\n                        startAngle : endAngle - preAngle,\n                        endAngle : endAngle,\n                        brushType: 'fill',\n                        color : darkColor\n                    },\n                    _color : zrColor.getLinearGradient(\n                        x + r0 * Math.cos(endAngle, true),\n                        y - r0 * Math.sin(endAngle, true),\n                        x + r0 * Math.cos(endAngle - preAngle, true),\n                        y - r0 * Math.sin(endAngle - preAngle, true),\n                        [\n                            [ 0, clolrList[i * 2 + 32] ],\n                            [ 1, clolrList[i * 2 + 33] ]\n                        ]\n                    )\n                }));\n                endAngle -= preAngle;\n            }\n\n            var n = 0;\n            if (options.progress != null) {\n                // 指定进度\n                addShapeHandle(background);\n\n                n = this.adjust(options.progress, [ 0, 1 ]).toFixed(2) * 100 / 5;\n                shapeRing.highlightStyle.text = n * 5 + '%';\n                addShapeHandle(shapeRing);\n\n                for (var i = 0; i < 20; i++) {\n                    shapeList[i].highlightStyle.color = i < n\n                        ? shapeList[i]._color : darkColor;\n                    addShapeHandle(shapeList[i]);\n                }\n\n                addShapeHandle(textShape);\n                refreshHandle();\n                return;\n            }\n\n            // 循环显示\n            return setInterval(\n                function() {\n                    addShapeHandle(background);\n\n                    n += n >= 20 ? -20 : 1;\n\n                    // shapeRing.highlightStyle.text = n * 5 + '%';\n                    addShapeHandle(shapeRing);\n\n                    for (var i = 0; i < 20; i++) {\n                        shapeList[i].highlightStyle.color = i < n\n                            ? shapeList[i]._color : darkColor;\n                        addShapeHandle(shapeList[i]);\n                    }\n\n                    addShapeHandle(textShape);\n                    refreshHandle();\n                },\n                effectOption.timeInterval\n            );\n        };\n\n        return Ring;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/loadingEffect/Ring.js\n ** module id = 77\n ** module chunks = 0\n **/","/**\n * 圆环\n * @module zrender/shape/Ring\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * @example\n *     var Ring = require('zrender/shape/Ring');\n *     var shape = new Ring({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r0: 30,\n *             r: 50\n *         }\n *     });\n *     zr.addShape(shape);\n */\n\n/**\n * @typedef {Object} IRingStyle\n * @property {number} x 圆心x坐标\n * @property {number} y 圆心y坐标\n * @property {number} r0 内圆半径\n * @property {number} r 外圆半径\n * @property {string} [color='#000000'] 填充颜色\n * @property {string} [strokeColor='#000000'] 描边颜色\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\n * @property {number} [lineWidth=1] 描边宽度\n * @property {number} [opacity=1] 绘制透明度\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\n * @property {string} [shadowColor='#000000'] 阴影颜色\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\n * @property {string} [text] 图形中的附加文本\n * @property {string} [textColor='#000000'] 文本颜色\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\n *                                可以是start, end, left, right, center\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\n */\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        \n        /**\n         * @alias module:zrender/shape/Ring\n         * @constructor\n         * @extends module:zrender/shape/Base\n         * @param {Object} options\n         */\n        var Ring = function (options) {\n            Base.call(this, options);\n            /**\n             * 圆环绘制样式\n             * @name module:zrender/shape/Ring#style\n             * @type {module:zrender/shape/Ring~IRingStyle}\n             */\n            /**\n             * 圆环高亮绘制样式\n             * @name module:zrender/shape/Ring#highlightStyle\n             * @type {module:zrender/shape/Ring~IRingStyle}\n             */\n        };\n\n        Ring.prototype = {\n            type: 'ring',\n\n            /**\n             * 创建圆环路径\n             * @param {CanvasRenderingContext2D} ctx\n             * @param {module:zrender/shape/Ring~IRingStyle} style\n             */\n            buildPath : function (ctx, style) {\n                // 非零环绕填充优化\n                ctx.arc(style.x, style.y, style.r, 0, Math.PI * 2, false);\n                ctx.moveTo(style.x + style.r0, style.y);\n                ctx.arc(style.x, style.y, style.r0, 0, Math.PI * 2, true);\n                return;\n            },\n\n            /**\n             * 计算返回圆环包围盒矩阵\n             * @param {module:zrender/shape/Ring~IRingStyle} style\n             * @return {module:zrender/shape/Base~IBoundingRect}\n             */\n            getRect : function (style) {\n                if (style.__rect) {\n                    return style.__rect;\n                }\n                \n                var lineWidth;\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\n                    lineWidth = style.lineWidth || 1;\n                }\n                else {\n                    lineWidth = 0;\n                }\n                style.__rect = {\n                    x : Math.round(style.x - style.r - lineWidth / 2),\n                    y : Math.round(style.y - style.r - lineWidth / 2),\n                    width : style.r * 2 + lineWidth,\n                    height : style.r * 2 + lineWidth\n                };\n                \n                return style.__rect;\n            }\n        };\n\n        require('../tool/util').inherits(Ring, Base);\n        return Ring;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/shape/Ring.js\n ** module id = 78\n ** module chunks = 0\n **/","\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var util = require('../tool/util');\n        var zrColor = require('../tool/color');\n        var zrArea = require('../tool/area');\n        var SectorShape = require('../shape/Sector');\n\n        function Spin(options) {\n            Base.call(this, options);\n        }\n        util.inherits(Spin, Base);\n\n        /**\n         * 旋转\n         * \n         * @param {Object} addShapeHandle\n         * @param {Object} refreshHandle\n         */\n        Spin.prototype._start = function (addShapeHandle, refreshHandle) {\n            var options = util.merge(\n                this.options,\n                {\n                    textStyle : {\n                        color : '#fff',\n                        textAlign : 'start'\n                    },\n                    backgroundColor : 'rgba(0, 0, 0, 0.8)'\n                }\n            );\n            var textShape = this.createTextShape(options.textStyle);\n            \n            var textGap = 10;\n            var textWidth = zrArea.getTextWidth(\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\n            );\n            var textHeight = zrArea.getTextHeight(\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\n            );\n            \n            // 特效默认配置\n            var effectOption =  util.merge(\n                this.options.effect || {},\n                {\n                    r0 : 9,\n                    r : 15,\n                    n : 18,\n                    color : '#fff',\n                    timeInterval : 100\n                }\n            );\n            \n            var location = this.getLocation(\n                this.options.textStyle,\n                textWidth + textGap + effectOption.r * 2,\n                Math.max(effectOption.r * 2, textHeight)\n            );\n            effectOption.x = location.x + effectOption.r;\n            effectOption.y = textShape.highlightStyle.y = location.y + location.height / 2;\n            textShape.highlightStyle.x = effectOption.x + effectOption.r + textGap;\n            \n            var background = this.createBackgroundShape(options.backgroundColor);\n            var n = effectOption.n;\n            var x = effectOption.x;\n            var y = effectOption.y;\n            var r0 = effectOption.r0;\n            var r = effectOption.r;\n            var color = effectOption.color;\n\n            // 初始化动画元素\n            var shapeList = [];\n            var preAngle = Math.round(180 / n);\n            for (var i = 0; i < n; i++) {\n                shapeList[i] = new SectorShape({\n                    highlightStyle  : {\n                        x : x,\n                        y : y,\n                        r0 : r0,\n                        r : r,\n                        startAngle : preAngle * i * 2,\n                        endAngle : preAngle * i * 2 + preAngle,\n                        color : zrColor.alpha(color, (i + 1) / n),\n                        brushType: 'fill'\n                    }\n                });\n            }\n\n            var pos = [ 0, x, y ];\n\n            return setInterval(\n                function() {\n                    addShapeHandle(background);\n                    pos[0] -= 0.3;\n                    for (var i = 0; i < n; i++) {\n                        shapeList[i].rotation = pos;\n                        addShapeHandle(shapeList[i]);\n                    }\n\n                    addShapeHandle(textShape);\n                    refreshHandle();\n                },\n                effectOption.timeInterval\n            );\n        };\n\n        return Spin;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/loadingEffect/Spin.js\n ** module id = 79\n ** module chunks = 0\n **/","\ndefine(\n    function (require) {\n        var Base = require('./Base');\n        var util = require('../tool/util');\n        var zrArea = require('../tool/area');\n        var RingShape = require('../shape/Ring');\n        var DropletShape = require('../shape/Droplet');\n        var CircleShape = require('../shape/Circle');\n\n        function Whirling(options) {\n            Base.call(this, options);\n        }\n        util.inherits(Whirling, Base);\n\n        /**\n         * 旋转水滴\n         * \n         * @param {Object} addShapeHandle\n         * @param {Object} refreshHandle\n         */\n        Whirling.prototype._start = function (addShapeHandle, refreshHandle) {\n            var options = util.merge(\n                this.options,\n                {\n                    textStyle : {\n                        color : '#888',\n                        textAlign : 'start'\n                    },\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)'\n                }\n            );\n            var textShape = this.createTextShape(options.textStyle);\n            \n            var textGap = 10;\n            var textWidth = zrArea.getTextWidth(\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\n            );\n            var textHeight = zrArea.getTextHeight(\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\n            );\n            \n            // 特效默认配置\n            var effectOption = util.merge(\n                this.options.effect || {},\n                {\n                    r : 18,\n                    colorIn : '#fff',\n                    colorOut : '#555',\n                    colorWhirl : '#6cf',\n                    timeInterval : 50\n                }\n            );\n            \n            var location = this.getLocation(\n                this.options.textStyle,\n                textWidth + textGap + effectOption.r * 2,\n                Math.max(effectOption.r * 2, textHeight)\n            );\n            effectOption.x = location.x + effectOption.r;\n            effectOption.y = textShape.highlightStyle.y = location.y + location.height / 2;\n            textShape.highlightStyle.x = effectOption.x + effectOption.r + textGap;\n            \n            var background = this.createBackgroundShape(options.backgroundColor);\n            // 初始化动画元素\n            var droplet = new DropletShape({\n                highlightStyle : {\n                    a : Math.round(effectOption.r / 2),\n                    b : Math.round(effectOption.r - effectOption.r / 6),\n                    brushType : 'fill',\n                    color : effectOption.colorWhirl\n                }\n            });\n            var circleIn = new CircleShape({\n                highlightStyle : {\n                    r : Math.round(effectOption.r / 6),\n                    brushType : 'fill',\n                    color : effectOption.colorIn\n                }\n            });\n            var circleOut = new RingShape({\n                highlightStyle : {\n                    r0 : Math.round(effectOption.r - effectOption.r / 3),\n                    r : effectOption.r,\n                    brushType : 'fill',\n                    color : effectOption.colorOut\n                }\n            });\n\n            var pos = [ 0, effectOption.x, effectOption.y ];\n\n            droplet.highlightStyle.x\n                = circleIn.highlightStyle.x\n                = circleOut.highlightStyle.x\n                = pos[1];\n            droplet.highlightStyle.y\n                = circleIn.highlightStyle.y\n                = circleOut.highlightStyle.y\n                = pos[2];\n\n            return setInterval(\n                function() {\n                    addShapeHandle(background);\n                    addShapeHandle(circleOut);\n                    pos[0] -= 0.3;\n                    droplet.rotation = pos;\n                    addShapeHandle(droplet);\n                    addShapeHandle(circleIn);\n                    addShapeHandle(textShape);\n                    refreshHandle();\n                },\n                effectOption.timeInterval\n            );\n        };\n\n        return Whirling;\n    }\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/src/loadingEffect/Whirling.js\n ** module id = 80\n ** module chunks = 0\n **/","define(function() {\n\nvar theme = {\n    // 默认色板\n    color: [\n        '#2ec7c9','#b6a2de','#5ab1ef','#ffb980','#d87a80',\n        '#8d98b3','#e5cf0d','#97b552','#95706d','#dc69aa',\n        '#07a2a4','#9a7fd1','#588dd5','#f5994e','#c05050',\n        '#59678c','#c9ab00','#7eb00a','#6f5553','#c14089'\n    ],\n\n    // 图表标题\n    title: {\n        textStyle: {\n            fontWeight: 'normal',\n            color: '#008acd'          // 主标题文字颜色\n        }\n    },\n    \n    // 值域\n    dataRange: {\n        itemWidth: 15,\n        color: ['#5ab1ef','#e0ffff']\n    },\n\n    // 工具箱\n    toolbox: {\n        color : ['#1e90ff', '#1e90ff', '#1e90ff', '#1e90ff'],\n        effectiveColor : '#ff4500'\n    },\n\n    // 提示框\n    tooltip: {\n        backgroundColor: 'rgba(50,50,50,0.5)',     // 提示背景颜色，默认为透明度为0.7的黑色\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'line',         // 默认为直线，可选为：'line' | 'shadow'\n            lineStyle : {          // 直线指示器样式设置\n                color: '#008acd'\n            },\n            crossStyle: {\n                color: '#008acd'\n            },\n            shadowStyle : {                     // 阴影指示器样式设置\n                color: 'rgba(200,200,200,0.2)'\n            }\n        }\n    },\n\n    // 区域缩放控制器\n    dataZoom: {\n        dataBackgroundColor: '#efefff',            // 数据背景颜色\n        fillerColor: 'rgba(182,162,222,0.2)',   // 填充颜色\n        handleColor: '#008acd'    // 手柄颜色\n    },\n\n    // 网格\n    grid: {\n        borderColor: '#eee'\n    },\n\n    // 类目轴\n    categoryAxis: {\n        axisLine: {            // 坐标轴线\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: '#008acd'\n            }\n        },\n        splitLine: {           // 分隔线\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\n                color: ['#eee']\n            }\n        }\n    },\n\n    // 数值型坐标轴默认参数\n    valueAxis: {\n        axisLine: {            // 坐标轴线\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: '#008acd'\n            }\n        },\n        splitArea : {\n            show : true,\n            areaStyle : {\n                color: ['rgba(250,250,250,0.1)','rgba(200,200,200,0.1)']\n            }\n        },\n        splitLine: {           // 分隔线\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\n                color: ['#eee']\n            }\n        }\n    },\n\n    polar : {\n        axisLine: {            // 坐标轴线\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: '#ddd'\n            }\n        },\n        splitArea : {\n            show : true,\n            areaStyle : {\n                color: ['rgba(250,250,250,0.2)','rgba(200,200,200,0.2)']\n            }\n        },\n        splitLine : {\n            lineStyle : {\n                color : '#ddd'\n            }\n        }\n    },\n\n    timeline : {\n        lineStyle : {\n            color : '#008acd'\n        },\n        controlStyle : {\n            normal : { color : '#008acd'},\n            emphasis : { color : '#008acd'}\n        },\n        symbol : 'emptyCircle',\n        symbolSize : 3\n    },\n\n    // 柱形图默认参数\n    bar: {\n        itemStyle: {\n            normal: {\n                barBorderRadius: 5\n            },\n            emphasis: {\n                barBorderRadius: 5\n            }\n        }\n    },\n\n    // 折线图默认参数\n    line: {\n        smooth : true,\n        symbol: 'emptyCircle',  // 拐点图形类型\n        symbolSize: 3           // 拐点图形大小\n    },\n    \n    // K线图默认参数\n    k: {\n        itemStyle: {\n            normal: {\n                color: '#d87a80',       // 阳线填充颜色\n                color0: '#2ec7c9',      // 阴线填充颜色\n                lineStyle: {\n                    color: '#d87a80',   // 阳线边框颜色\n                    color0: '#2ec7c9'   // 阴线边框颜色\n                }\n            }\n        }\n    },\n    \n    // 散点图默认参数\n    scatter: {\n        symbol: 'circle',    // 图形类型\n        symbolSize: 4        // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    },\n\n    // 雷达图默认参数\n    radar : {\n        symbol: 'emptyCircle',    // 图形类型\n        symbolSize:3\n        //symbol: null,         // 拐点图形类型\n        //symbolRotate : null,  // 图形旋转控制\n    },\n\n    map: {\n        itemStyle: {\n            normal: {\n                areaStyle: {\n                    color: '#ddd'\n                },\n                label: {\n                    textStyle: {\n                        color: '#d87a80'\n                    }\n                }\n            },\n            emphasis: {                 // 也是选中样式\n                areaStyle: {\n                    color: '#fe994e'\n                }\n            }\n        }\n    },\n    \n    force : {\n        itemStyle: {\n            normal: {\n                linkStyle : {\n                    color : '#1e90ff'\n                }\n            }\n        }\n    },\n\n    chord : {\n        itemStyle : {\n            normal : {\n                borderWidth: 1,\n                borderColor: 'rgba(128, 128, 128, 0.5)',\n                chordStyle : {\n                    lineStyle : {\n                        color : 'rgba(128, 128, 128, 0.5)'\n                    }\n                }\n            },\n            emphasis : {\n                borderWidth: 1,\n                borderColor: 'rgba(128, 128, 128, 0.5)',\n                chordStyle : {\n                    lineStyle : {\n                        color : 'rgba(128, 128, 128, 0.5)'\n                    }\n                }\n            }\n        }\n    },\n\n    gauge : {\n        axisLine: {            // 坐标轴线\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: [[0.2, '#2ec7c9'],[0.8, '#5ab1ef'],[1, '#d87a80']], \n                width: 10\n            }\n        },\n        axisTick: {            // 坐标轴小标记\n            splitNumber: 10,   // 每份split细分多少段\n            length :15,        // 属性length控制线长\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: 'auto'\n            }\n        },\n        splitLine: {           // 分隔线\n            length :22,         // 属性length控制线长\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\n                color: 'auto'\n            }\n        },\n        pointer : {\n            width : 5\n        }\n    },\n    \n    textStyle: {\n        fontFamily: '微软雅黑, Arial, Verdana, sans-serif'\n    }\n};\n\n    return theme;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/theme/macarons.js\n ** module id = 81\n ** module chunks = 0\n **/","define(function() {\n\nvar theme = {\n    // 默认色板\n    color: [\n        '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',\n        '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD',\n        '#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0'\n    ],\n\n    // 图表标题\n    title: {\n        textStyle: {\n            fontWeight: 'normal',\n            color: '#27727B'          // 主标题文字颜色\n        }\n    },\n\n    // 值域\n    dataRange: {\n        x:'right',\n        y:'center',\n        itemWidth: 5,\n        itemHeight:25,\n        color:['#C1232B','#FCCE10']\n    },\n\n    toolbox: {\n        color : [\n            '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',\n            '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD'\n        ],\n        effectiveColor : '#ff4500'\n    },\n\n    // 提示框\n    tooltip: {\n        backgroundColor: 'rgba(50,50,50,0.5)',     // 提示背景颜色，默认为透明度为0.7的黑色\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'line',         // 默认为直线，可选为：'line' | 'shadow'\n            lineStyle : {          // 直线指示器样式设置\n                color: '#27727B',\n                type: 'dashed'\n            },\n            crossStyle: {\n                color: '#27727B'\n            },\n            shadowStyle : {                     // 阴影指示器样式设置\n                color: 'rgba(200,200,200,0.3)'\n            }\n        }\n    },\n\n    // 区域缩放控制器\n    dataZoom: {\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',            // 数据背景颜色\n        fillerColor: 'rgba(181,195,52,0.2)',   // 填充颜色\n        handleColor: '#27727B'    // 手柄颜色\n    },\n\n    // 网格\n    grid: {\n        borderWidth:0\n    },\n\n    // 类目轴\n    categoryAxis: {\n        axisLine: {            // 坐标轴线\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: '#27727B'\n            }\n        },\n        splitLine: {           // 分隔线\n            show: false\n        }\n    },\n\n    // 数值型坐标轴默认参数\n    valueAxis: {\n        axisLine: {            // 坐标轴线\n            show: false\n        },\n        splitArea : {\n            show: false\n        },\n        splitLine: {           // 分隔线\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\n                color: ['#ccc'],\n                type: 'dashed'\n            }\n        }\n    },\n\n    polar : {\n        axisLine: {            // 坐标轴线\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: '#ddd'\n            }\n        },\n        splitArea : {\n            show : true,\n            areaStyle : {\n                color: ['rgba(250,250,250,0.2)','rgba(200,200,200,0.2)']\n            }\n        },\n        splitLine : {\n            lineStyle : {\n                color : '#ddd'\n            }\n        }\n    },\n\n    timeline : {\n        lineStyle : {\n            color : '#27727B'\n        },\n        controlStyle : {\n            normal : { color : '#27727B'},\n            emphasis : { color : '#27727B'}\n        },\n        symbol : 'emptyCircle',\n        symbolSize : 3\n    },\n\n    // 折线图默认参数\n    line: {\n        itemStyle: {\n            normal: {\n                borderWidth:2,\n                borderColor:'#fff',\n                lineStyle: {\n                    width: 3\n                }\n            },\n            emphasis: {\n                borderWidth:0\n            }\n        },\n        symbol: 'circle',  // 拐点图形类型\n        symbolSize: 3.5           // 拐点图形大小\n    },\n\n    // K线图默认参数\n    k: {\n        itemStyle: {\n            normal: {\n                color: '#C1232B',       // 阳线填充颜色\n                color0: '#B5C334',      // 阴线填充颜色\n                lineStyle: {\n                    width: 1,\n                    color: '#C1232B',   // 阳线边框颜色\n                    color0: '#B5C334'   // 阴线边框颜色\n                }\n            }\n        }\n    },\n\n    // 散点图默认参数\n    scatter: {\n        itemStyle: {\n            normal: {\n                borderWidth:1,\n                borderColor:'rgba(200,200,200,0.5)'\n            },\n            emphasis: {\n                borderWidth:0\n            }\n        },\n        symbol: 'star4',    // 图形类型\n        symbolSize: 4        // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    },\n\n    // 雷达图默认参数\n    radar : {\n        symbol: 'emptyCircle',    // 图形类型\n        symbolSize:3\n        //symbol: null,         // 拐点图形类型\n        //symbolRotate : null,  // 图形旋转控制\n    },\n\n    map: {\n        itemStyle: {\n            normal: {\n                areaStyle: {\n                    color: '#ddd'\n                },\n                label: {\n                    textStyle: {\n                        color: '#C1232B'\n                    }\n                }\n            },\n            emphasis: {                 // 也是选中样式\n                areaStyle: {\n                    color: '#fe994e'\n                },\n                label: {\n                    textStyle: {\n                        color: 'rgb(100,0,0)'\n                    }\n                }\n            }\n        }\n    },\n\n    force : {\n        itemStyle: {\n            normal: {\n                linkStyle : {\n                    color : '#27727B'\n                }\n            }\n        }\n    },\n\n    chord : {\n        itemStyle : {\n            normal : {\n                borderWidth: 1,\n                borderColor: 'rgba(128, 128, 128, 0.5)',\n                chordStyle : {\n                    lineStyle : {\n                        color : 'rgba(128, 128, 128, 0.5)'\n                    }\n                }\n            },\n            emphasis : {\n                borderWidth: 1,\n                borderColor: 'rgba(128, 128, 128, 0.5)',\n                chordStyle : {\n                    lineStyle : {\n                        color : 'rgba(128, 128, 128, 0.5)'\n                    }\n                }\n            }\n        }\n    },\n\n    gauge : {\n        center:['50%','80%'],\n        radius:'100%',\n        startAngle: 180,\n        endAngle : 0,\n        axisLine: {            // 坐标轴线\n            show: true,        // 默认显示，属性show控制显示与否\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: [[0.2, '#B5C334'],[0.8, '#27727B'],[1, '#C1232B']],\n                width: '40%'\n            }\n        },\n        axisTick: {            // 坐标轴小标记\n            splitNumber: 2,   // 每份split细分多少段\n            length: 5,        // 属性length控制线长\n            lineStyle: {       // 属性lineStyle控制线条样式\n                color: '#fff'\n            }\n        },\n        axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                color: '#fff',\n                fontWeight:'bolder'\n            }\n        },\n        splitLine: {           // 分隔线\n            length: '5%',         // 属性length控制线长\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\n                color: '#fff'\n            }\n        },\n        pointer : {\n            width : '40%',\n            length: '80%',\n            color: '#fff'\n        },\n        title : {\n          offsetCenter: [0, -20],       // x, y，单位px\n          textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            color: 'auto',\n            fontSize: 20\n          }\n        },\n        detail : {\n            offsetCenter: [0, 0],       // x, y，单位px\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                color: 'auto',\n                fontSize: 40\n            }\n        }\n    },\n\n    textStyle: {\n        fontFamily: '微软雅黑, Arial, Verdana, sans-serif'\n    }\n};\n\n    return theme;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/theme/infographic.js\n ** module id = 82\n ** module chunks = 0\n **/","/**\r\n * echarts图表类：折线图\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ChartBase = require('./base');\r\n    \r\n    // 图形依赖\r\n    var PolylineShape = require('zrender/shape/Polyline');\r\n    var IconShape = require('../util/shape/Icon');\r\n    var HalfSmoothPolygonShape = require('../util/shape/HalfSmoothPolygon');\r\n    // 组件依赖\r\n    require('../component/axis');\r\n    require('../component/grid');\r\n    require('../component/dataZoom');\r\n    \r\n    var ecConfig = require('../config');\r\n    // 折线图默认参数\r\n    ecConfig.line = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 2,                       // 二级层叠\r\n        clickable: true,\r\n        legendHoverLink: true,\r\n        // stack: null\r\n        xAxisIndex: 0,\r\n        yAxisIndex: 0,\r\n        // 'nearest', 'min', 'max', 'average'\r\n        dataFilter: 'nearest',\r\n        itemStyle: {\r\n            normal: {\r\n                // color: 各异,\r\n                label: {\r\n                    show: false\r\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n                    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\r\n                    //           'inside'|'left'|'right'|'top'|'bottom'\r\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                },\r\n                lineStyle: {\r\n                    width: 2,\r\n                    type: 'solid',\r\n                    shadowColor: 'rgba(0,0,0,0)', //默认透明\r\n                    shadowBlur: 0,\r\n                    shadowOffsetX: 0,\r\n                    shadowOffsetY: 0\r\n                }\r\n            },\r\n            emphasis: {\r\n                // color: 各异,\r\n                label: {\r\n                    show: false\r\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n                    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\r\n                    //           'inside'|'left'|'right'|'top'|'bottom'\r\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                }\r\n            }\r\n        },\r\n        // smooth: false,\r\n        // symbol: null,         // 拐点图形类型\r\n        symbolSize: 2,           // 拐点图形大小\r\n        // symbolRotate: null,   // 拐点图形旋转控制\r\n        showAllSymbol: false     // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\r\n    };\r\n\r\n    var ecData = require('../util/ecData');\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrColor = require('zrender/tool/color');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} series 数据\r\n     * @param {Object} component 组件\r\n     */\r\n    function Line(ecTheme, messageCenter, zr, option, myChart){\r\n        // 图表基类\r\n        ChartBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.refresh(option);\r\n    }\r\n    \r\n    Line.prototype = {\r\n        type: ecConfig.CHART_TYPE_LINE,\r\n        /**\r\n         * 绘制图形\r\n         */\r\n        _buildShape: function () {\r\n            this.finalPLMap = {}; // 完成的point list(PL)\r\n            this._buildPosition();\r\n        },\r\n\r\n        /**\r\n         * 构建类目轴为水平方向的折线图系列\r\n         */\r\n        _buildHorizontal: function (seriesArray, maxDataLength, locationMap, xMarkMap) {\r\n            var series = this.series;\r\n            // 确定类目轴和数值轴，同一方向随便找一个即可\r\n            var seriesIndex = locationMap[0][0];\r\n            var serie = series[seriesIndex];\r\n            var categoryAxis = this.component.xAxis.getAxis(serie.xAxisIndex || 0);\r\n            var valueAxis;  // 数值轴各异\r\n\r\n            var x;\r\n            var y;\r\n            var lastYP; // 正向堆积处理\r\n            var baseYP;\r\n            var lastYN; // 负向堆积处理\r\n            var baseYN;\r\n            //var this.finalPLMap = {}; // 完成的point list(PL)\r\n            var curPLMap = {};   // 正在记录的point list(PL)\r\n            var data;\r\n            var value;\r\n            for (var i = 0, l = maxDataLength; i < l; i++) {\r\n                if (categoryAxis.getNameByIndex(i) == null) {\r\n                    // 系列数据超出类目轴长度\r\n                    break;\r\n                }\r\n                x = categoryAxis.getCoordByIndex(i);\r\n                for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                    // 堆积数据用第一条valueAxis\r\n                    valueAxis = this.component.yAxis.getAxis(\r\n                        series[locationMap[j][0]].yAxisIndex || 0\r\n                    );\r\n                    baseYP = lastYP = baseYN = lastYN = valueAxis.getCoord(0);\r\n                    for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                        seriesIndex = locationMap[j][m];\r\n                        serie = series[seriesIndex];\r\n                        data = serie.data[i];\r\n                        value = this.getDataFromOption(data, '-');\r\n                        curPLMap[seriesIndex] = curPLMap[seriesIndex] || [];\r\n                        xMarkMap[seriesIndex] = xMarkMap[seriesIndex] \r\n                                                || {\r\n                                                    min: Number.POSITIVE_INFINITY,\r\n                                                    max: Number.NEGATIVE_INFINITY,\r\n                                                    sum: 0,\r\n                                                    counter: 0,\r\n                                                    average: 0\r\n                                                };\r\n                        if (value === '-') {\r\n                            // 空数据则把正在记录的curPLMap添加到finalPLMap中\r\n                            if (curPLMap[seriesIndex].length > 0) {\r\n                                this.finalPLMap[seriesIndex] =\r\n                                    this.finalPLMap[seriesIndex] || [];\r\n\r\n                                this.finalPLMap[seriesIndex].push(\r\n                                    curPLMap[seriesIndex]\r\n                                );\r\n\r\n                                curPLMap[seriesIndex] = [];\r\n                            }\r\n                            continue;\r\n                        }\r\n                        //y = valueAxis.getCoord(value);\r\n                        if (value >= 0) {\r\n                            // 正向堆积\r\n                            lastYP -= m > 0\r\n                                      ? valueAxis.getCoordSize(value)\r\n                                      : (baseYP - valueAxis.getCoord(value));\r\n                            y = lastYP;\r\n                        }\r\n                        else if (value < 0){\r\n                            // 负向堆积\r\n                            lastYN += m > 0 \r\n                                      ? valueAxis.getCoordSize(value)\r\n                                      : (valueAxis.getCoord(value) - baseYN);\r\n                            y = lastYN;\r\n                        }\r\n                        curPLMap[seriesIndex].push(\r\n                            [x, y, i, categoryAxis.getNameByIndex(i), x, baseYP]\r\n                        );\r\n                        \r\n                        if (xMarkMap[seriesIndex].min > value) {\r\n                            xMarkMap[seriesIndex].min = value;\r\n                            xMarkMap[seriesIndex].minY = y;\r\n                            xMarkMap[seriesIndex].minX = x;\r\n                        }\r\n                        if (xMarkMap[seriesIndex].max < value) {\r\n                            xMarkMap[seriesIndex].max = value;\r\n                            xMarkMap[seriesIndex].maxY = y;\r\n                            xMarkMap[seriesIndex].maxX = x;\r\n                        }\r\n                        xMarkMap[seriesIndex].sum += value;\r\n                        xMarkMap[seriesIndex].counter++;\r\n                    }\r\n                }\r\n                // 补充空数据的拖拽提示\r\n                lastYP = this.component.grid.getY();\r\n                var symbolSize;\r\n                for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                    for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                        seriesIndex = locationMap[j][m];\r\n                        serie = series[seriesIndex];\r\n                        data = serie.data[i];\r\n                        value = this.getDataFromOption(data, '-');\r\n                        if (value != '-') {\r\n                            // 只关心空数据\r\n                            continue;\r\n                        }\r\n                        if (this.deepQuery([data, serie, this.option], 'calculable')) {\r\n                            symbolSize = this.deepQuery(\r\n                                [data, serie],\r\n                                'symbolSize'\r\n                            );\r\n                            lastYP += symbolSize * 2 + 5;\r\n                            y = lastYP;\r\n                            this.shapeList.push(this._getCalculableItem(\r\n                                seriesIndex, i, categoryAxis.getNameByIndex(i),\r\n                                x, y, 'horizontal'\r\n                            ));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // 把剩余未完成的curPLMap全部添加到finalPLMap中\r\n            for (var sId in curPLMap) {\r\n                if (curPLMap[sId].length > 0) {\r\n                    this.finalPLMap[sId] = this.finalPLMap[sId] || [];\r\n                    this.finalPLMap[sId].push(curPLMap[sId]);\r\n                    curPLMap[sId] = [];\r\n                }\r\n            }\r\n            \r\n            this._calculMarkMapXY(xMarkMap, locationMap, 'y');\r\n            \r\n            this._buildBorkenLine(seriesArray, this.finalPLMap, categoryAxis, 'horizontal');\r\n        },\r\n\r\n        /**\r\n         * 构建类目轴为垂直方向的折线图系列\r\n         */\r\n        _buildVertical: function (seriesArray, maxDataLength, locationMap, xMarkMap) {\r\n            var series = this.series;\r\n            // 确定类目轴和数值轴，同一方向随便找一个即可\r\n            var seriesIndex = locationMap[0][0];\r\n            var serie = series[seriesIndex];\r\n            var categoryAxis = this.component.yAxis.getAxis(serie.yAxisIndex || 0);\r\n            var valueAxis;  // 数值轴各异\r\n\r\n            var x;\r\n            var y;\r\n            var lastXP; // 正向堆积处理\r\n            var baseXP;\r\n            var lastXN; // 负向堆积处理\r\n            var baseXN;\r\n            //var this.finalPLMap = {}; // 完成的point list(PL)\r\n            var curPLMap = {};   // 正在记录的point list(PL)\r\n            var data;\r\n            var value;\r\n            for (var i = 0, l = maxDataLength; i < l; i++) {\r\n                if (categoryAxis.getNameByIndex(i) == null) {\r\n                    // 系列数据超出类目轴长度\r\n                    break;\r\n                }\r\n                y = categoryAxis.getCoordByIndex(i);\r\n                for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                    // 堆积数据用第一条valueAxis\r\n                    valueAxis = this.component.xAxis.getAxis(\r\n                        series[locationMap[j][0]].xAxisIndex || 0\r\n                    );\r\n                    baseXP = lastXP = baseXN = lastXN = valueAxis.getCoord(0);\r\n                    for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                        seriesIndex = locationMap[j][m];\r\n                        serie = series[seriesIndex];\r\n                        data = serie.data[i];\r\n                        value = this.getDataFromOption(data, '-');\r\n                        curPLMap[seriesIndex] = curPLMap[seriesIndex] || [];\r\n                        xMarkMap[seriesIndex] = xMarkMap[seriesIndex] \r\n                                                || {\r\n                                                    min: Number.POSITIVE_INFINITY,\r\n                                                    max: Number.NEGATIVE_INFINITY,\r\n                                                    sum: 0,\r\n                                                    counter: 0,\r\n                                                    average: 0\r\n                                                };\r\n                        if (value === '-') {\r\n                            // 空数据则把正在记录的curPLMap添加到finalPLMap中\r\n                            if (curPLMap[seriesIndex].length > 0) {\r\n                                this.finalPLMap[seriesIndex] =\r\n                                    this.finalPLMap[seriesIndex] || [];\r\n\r\n                                this.finalPLMap[seriesIndex].push(\r\n                                    curPLMap[seriesIndex]\r\n                                );\r\n\r\n                                curPLMap[seriesIndex] = [];\r\n                            }\r\n                            continue;\r\n                        }\r\n                        //x = valueAxis.getCoord(value);\r\n                        if (value >= 0) {\r\n                            // 正向堆积\r\n                            lastXP += m > 0\r\n                                      ? valueAxis.getCoordSize(value)\r\n                                      : (valueAxis.getCoord(value) - baseXP);\r\n                            x = lastXP;\r\n                        }\r\n                        else if (value < 0){\r\n                            // 负向堆积\r\n                            lastXN -= m > 0\r\n                                      ? valueAxis.getCoordSize(value)\r\n                                      : (baseXN - valueAxis.getCoord(value));\r\n                            x = lastXN;\r\n                        }\r\n                        curPLMap[seriesIndex].push(\r\n                            [x, y, i, categoryAxis.getNameByIndex(i), baseXP, y]\r\n                        );\r\n                        \r\n                        if (xMarkMap[seriesIndex].min > value) {\r\n                            xMarkMap[seriesIndex].min = value;\r\n                            xMarkMap[seriesIndex].minX = x;\r\n                            xMarkMap[seriesIndex].minY = y;\r\n                        }\r\n                        if (xMarkMap[seriesIndex].max < value) {\r\n                            xMarkMap[seriesIndex].max = value;\r\n                            xMarkMap[seriesIndex].maxX = x;\r\n                            xMarkMap[seriesIndex].maxY = y;\r\n                        }\r\n                        xMarkMap[seriesIndex].sum += value;\r\n                        xMarkMap[seriesIndex].counter++;\r\n                    }\r\n                }\r\n                // 补充空数据的拖拽提示\r\n                lastXP = this.component.grid.getXend();\r\n                var symbolSize;\r\n                for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                    for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                        seriesIndex = locationMap[j][m];\r\n                        serie = series[seriesIndex];\r\n                        data = serie.data[i];\r\n                        value = this.getDataFromOption(data, '-');\r\n                        if (value != '-') {\r\n                            // 只关心空数据\r\n                            continue;\r\n                        }\r\n                        if (this.deepQuery([data, serie, this.option], 'calculable')) {\r\n                            symbolSize = this.deepQuery(\r\n                                [data, serie],\r\n                                'symbolSize'\r\n                            );\r\n                            lastXP -= symbolSize * 2 + 5;\r\n                            x = lastXP;\r\n                            this.shapeList.push(this._getCalculableItem(\r\n                                seriesIndex, i, categoryAxis.getNameByIndex(i),\r\n                                x, y, 'vertical'\r\n                            ));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 把剩余未完成的curPLMap全部添加到finalPLMap中\r\n            for (var sId in curPLMap) {\r\n                if (curPLMap[sId].length > 0) {\r\n                    this.finalPLMap[sId] = this.finalPLMap[sId] || [];\r\n                    this.finalPLMap[sId].push(curPLMap[sId]);\r\n                    curPLMap[sId] = [];\r\n                }\r\n            }\r\n            \r\n            this._calculMarkMapXY(xMarkMap, locationMap, 'x');\r\n            \r\n            this._buildBorkenLine(seriesArray, this.finalPLMap, categoryAxis, 'vertical');\r\n        },\r\n\r\n        /**\r\n         * 构建双数值轴折线图 \r\n         */\r\n        _buildOther: function(seriesArray, maxDataLength, locationMap, xMarkMap) {\r\n            var series = this.series;\r\n            var curPLMap = {};   // 正在记录的point list(PL)\r\n            var xAxis;\r\n            \r\n            for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                    var seriesIndex = locationMap[j][m];\r\n                    var serie = series[seriesIndex];\r\n                    xAxis = this.component.xAxis.getAxis(serie.xAxisIndex || 0);\r\n                    var yAxis = this.component.yAxis.getAxis(serie.yAxisIndex || 0);\r\n                    var baseY = yAxis.getCoord(0);\r\n                    \r\n                    curPLMap[seriesIndex] = curPLMap[seriesIndex] || [];\r\n                    xMarkMap[seriesIndex] = xMarkMap[seriesIndex] \r\n                                            || {\r\n                                                min0: Number.POSITIVE_INFINITY,\r\n                                                min1: Number.POSITIVE_INFINITY,\r\n                                                max0: Number.NEGATIVE_INFINITY,\r\n                                                max1: Number.NEGATIVE_INFINITY,\r\n                                                sum0: 0,\r\n                                                sum1: 0,\r\n                                                counter0: 0,\r\n                                                counter1: 0,\r\n                                                average0: 0,\r\n                                                average1: 0\r\n                                            };\r\n                    \r\n                    for (var i = 0, l = serie.data.length; i < l; i++) {\r\n                        var data = serie.data[i];\r\n                        var value = this.getDataFromOption(data, '-');\r\n                        if (!(value instanceof Array)) {\r\n                            continue;\r\n                        }\r\n                        \r\n                        var x = xAxis.getCoord(value[0]);\r\n                        var y = yAxis.getCoord(value[1]);\r\n                        curPLMap[seriesIndex].push(\r\n                            // x, y, dataIndex, name, 填充用\r\n                            [x, y, i, value[0], x, baseY]\r\n                        );\r\n                        \r\n                        if (xMarkMap[seriesIndex].min0 > value[0]) {\r\n                            xMarkMap[seriesIndex].min0 = value[0];\r\n                            xMarkMap[seriesIndex].minY0 = y;\r\n                            xMarkMap[seriesIndex].minX0 = x;\r\n                        }\r\n                        if (xMarkMap[seriesIndex].max0 < value[0]) {\r\n                            xMarkMap[seriesIndex].max0 = value[0];\r\n                            xMarkMap[seriesIndex].maxY0 = y;\r\n                            xMarkMap[seriesIndex].maxX0 = x;\r\n                        }\r\n                        xMarkMap[seriesIndex].sum0 += value[0];\r\n                        xMarkMap[seriesIndex].counter0++;\r\n                        \r\n                        if (xMarkMap[seriesIndex].min1 > value[1]) {\r\n                            xMarkMap[seriesIndex].min1 = value[1];\r\n                            xMarkMap[seriesIndex].minY1 = y;\r\n                            xMarkMap[seriesIndex].minX1 = x;\r\n                        }\r\n                        if (xMarkMap[seriesIndex].max1 < value[1]) {\r\n                            xMarkMap[seriesIndex].max1 = value[1];\r\n                            xMarkMap[seriesIndex].maxY1 = y;\r\n                            xMarkMap[seriesIndex].maxX1 = x;\r\n                        }\r\n                        xMarkMap[seriesIndex].sum1 += value[1];\r\n                        xMarkMap[seriesIndex].counter1++;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // 把剩余未完成的curPLMap全部添加到finalPLMap中\r\n            for (var sId in curPLMap) {\r\n                if (curPLMap[sId].length > 0) {\r\n                    this.finalPLMap[sId] = this.finalPLMap[sId] || [];\r\n                    this.finalPLMap[sId].push(curPLMap[sId]);\r\n                    curPLMap[sId] = [];\r\n                }\r\n            }\r\n            \r\n            this._calculMarkMapXY(xMarkMap, locationMap, 'xy');\r\n            \r\n            this._buildBorkenLine(seriesArray, this.finalPLMap, xAxis, 'other');\r\n        },\r\n        \r\n        /**\r\n         * 生成折线和折线上的拐点\r\n         */\r\n        _buildBorkenLine: function (seriesArray, pointList, categoryAxis, curOrient) {\r\n            var orient = curOrient == 'other' ? 'horizontal' : curOrient;\r\n            var series = this.series;\r\n            var data;\r\n            \r\n            // 堆积层叠需求，反顺序构建\r\n            for (var sIdx = seriesArray.length - 1; sIdx >= 0; sIdx--) {\r\n                var seriesIndex = seriesArray[sIdx];\r\n                var serie = series[seriesIndex];\r\n                var seriesPL = pointList[seriesIndex];\r\n                if (serie.type === this.type && seriesPL != null) {\r\n                    var bbox = this._getBbox(seriesIndex, orient);\r\n                    var defaultColor = this._sIndex2ColorMap[seriesIndex];\r\n                    // 折线相关，多级控制\r\n                    var lineWidth = this.query(\r\n                        serie, 'itemStyle.normal.lineStyle.width'\r\n                    );\r\n                    var lineType = this.query(\r\n                        serie, 'itemStyle.normal.lineStyle.type'\r\n                    );\r\n                    var lineColor = this.query(\r\n                        serie, 'itemStyle.normal.lineStyle.color'\r\n                    );\r\n                    var normalColor = this.getItemStyleColor(\r\n                        this.query(serie, 'itemStyle.normal.color'), seriesIndex, -1\r\n                    );\r\n\r\n                    // 填充相关\r\n                    var isFill = this.query(serie, 'itemStyle.normal.areaStyle') != null;\r\n                    var fillNormalColor = this.query(\r\n                        serie, 'itemStyle.normal.areaStyle.color'\r\n                    );\r\n\r\n                    for (var i = 0, l = seriesPL.length; i < l; i++) {\r\n                        var singlePL = seriesPL[i];\r\n                        var isLarge = curOrient != 'other' && this._isLarge(orient, singlePL);\r\n                        if (!isLarge) { // 非大数据模式才显示拐点symbol\r\n                            for (var j = 0, k = singlePL.length; j < k; j++) {\r\n                                data = serie.data[singlePL[j][2]];\r\n                                if (this.deepQuery([data, serie, this.option], 'calculable') // 可计算\r\n                                    || this.deepQuery([data, serie], 'showAllSymbol')        // 全显示\r\n                                    || (categoryAxis.type === 'categoryAxis'                 // 主轴非空\r\n                                        && categoryAxis.isMainAxis(singlePL[j][2])\r\n                                        && this.deepQuery([data, serie], 'symbol') != 'none'\r\n                                       )\r\n                                ) {\r\n                                    this.shapeList.push(this._getSymbol(\r\n                                        seriesIndex,\r\n                                        singlePL[j][2], // dataIndex\r\n                                        singlePL[j][3], // name\r\n                                        singlePL[j][0], // x\r\n                                        singlePL[j][1], // y\r\n                                        orient\r\n                                    ));\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            // 大数据模式截取pointList\r\n                            singlePL = this._getLargePointList(\r\n                                orient, singlePL, serie.dataFilter\r\n                            );\r\n                        }\r\n\r\n                        // 折线图\r\n                        var polylineShape = new PolylineShape({\r\n                            zlevel: serie.zlevel,\r\n                            z: serie.z,\r\n                            style: {\r\n                                miterLimit: lineWidth,\r\n                                pointList: singlePL,\r\n                                strokeColor: lineColor\r\n                                             || normalColor \r\n                                             || defaultColor,\r\n                                lineWidth: lineWidth,\r\n                                lineType: lineType,\r\n                                smooth: this._getSmooth(serie.smooth),\r\n                                smoothConstraint: bbox,\r\n                                shadowColor: this.query(\r\n                                  serie,\r\n                                  'itemStyle.normal.lineStyle.shadowColor'\r\n                                ),\r\n                                shadowBlur: this.query(\r\n                                  serie,\r\n                                  'itemStyle.normal.lineStyle.shadowBlur'\r\n                                ),\r\n                                shadowOffsetX: this.query(\r\n                                  serie,\r\n                                  'itemStyle.normal.lineStyle.shadowOffsetX'\r\n                                ),\r\n                                shadowOffsetY: this.query(\r\n                                  serie,\r\n                                  'itemStyle.normal.lineStyle.shadowOffsetY'\r\n                                )\r\n                            },\r\n                            hoverable: false,\r\n                            _main: true,\r\n                            _seriesIndex: seriesIndex,\r\n                            _orient: orient\r\n                        });\r\n                        \r\n                        ecData.pack(\r\n                            polylineShape,\r\n                            series[seriesIndex], seriesIndex,\r\n                            0, i, series[seriesIndex].name\r\n                        );\r\n                        \r\n                        this.shapeList.push(polylineShape);\r\n                        \r\n                        if (isFill) {\r\n                            var halfSmoothPolygonShape = new HalfSmoothPolygonShape({\r\n                                zlevel: serie.zlevel,\r\n                                z: serie.z,\r\n                                style: {\r\n                                    miterLimit: lineWidth,\r\n                                    pointList: zrUtil.clone(singlePL).concat([\r\n                                        [\r\n                                            singlePL[singlePL.length - 1][4],\r\n                                            singlePL[singlePL.length - 1][5]\r\n                                        ],\r\n                                        [\r\n                                            singlePL[0][4],\r\n                                            singlePL[0][5]\r\n                                        ]\r\n                                    ]),\r\n                                    brushType: 'fill',\r\n                                    smooth: this._getSmooth(serie.smooth),\r\n                                    smoothConstraint: bbox,\r\n                                    color: fillNormalColor\r\n                                           ? fillNormalColor\r\n                                           : zrColor.alpha(defaultColor,0.5)\r\n                                },\r\n                                highlightStyle: {\r\n                                    brushType: 'fill'\r\n                                },\r\n                                hoverable: false,\r\n                                _main: true,\r\n                                _seriesIndex: seriesIndex,\r\n                                _orient: orient\r\n                            });\r\n                            ecData.pack(\r\n                                halfSmoothPolygonShape,\r\n                                series[seriesIndex], seriesIndex,\r\n                                0, i, series[seriesIndex].name\r\n                            );\r\n                            this.shapeList.push(halfSmoothPolygonShape);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        _getBbox: function(seriesIndex, orient) {\r\n            var bbox = this.component.grid.getBbox();\r\n            var xMarkMap = this.xMarkMap[seriesIndex];\r\n            if (xMarkMap.minX0 != null) {\r\n                return [\r\n                    [\r\n                        Math.min(xMarkMap.minX0, xMarkMap.maxX0, xMarkMap.minX1, xMarkMap.maxX1),\r\n                        Math.min(xMarkMap.minY0, xMarkMap.maxY0, xMarkMap.minY1, xMarkMap.maxY1)\r\n                    ],\r\n                    [\r\n                        Math.max(xMarkMap.minX0, xMarkMap.maxX0, xMarkMap.minX1, xMarkMap.maxX1),\r\n                        Math.max(xMarkMap.minY0, xMarkMap.maxY0, xMarkMap.minY1, xMarkMap.maxY1)\r\n                    ]\r\n                ];\r\n            }\r\n            else if (orient === 'horizontal') {\r\n                bbox[0][1] = Math.min(xMarkMap.minY, xMarkMap.maxY);\r\n                bbox[1][1] = Math.max(xMarkMap.minY, xMarkMap.maxY);\r\n            }\r\n            else {\r\n                bbox[0][0] = Math.min(xMarkMap.minX, xMarkMap.maxX);\r\n                bbox[1][0] = Math.max(xMarkMap.minX, xMarkMap.maxX);\r\n            }\r\n            return bbox;\r\n        },\r\n        \r\n        _isLarge: function(orient, singlePL) {\r\n            if (singlePL.length < 2) {\r\n                return false;\r\n            }\r\n            else {\r\n                return orient === 'horizontal'\r\n                       ? (Math.abs(singlePL[0][0] - singlePL[1][0]) < 0.5)\r\n                       : (Math.abs(singlePL[0][1] - singlePL[1][1]) < 0.5);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 大规模pointList优化 \r\n         */\r\n        _getLargePointList: function(orient, singlePL, filter) {\r\n            var total;\r\n            if (orient === 'horizontal') {\r\n                total = this.component.grid.getWidth();\r\n            }\r\n            else {\r\n                total = this.component.grid.getHeight();\r\n            }\r\n            \r\n            var len = singlePL.length;\r\n            var newList = [];\r\n\r\n            if (typeof(filter) != 'function') {\r\n                switch (filter) {\r\n                    case 'min':\r\n                        filter = function (arr) {\r\n                            return Math.max.apply(null, arr);\r\n                        };\r\n                        break;\r\n                    case 'max':\r\n                        filter = function (arr) {\r\n                            return Math.min.apply(null, arr);\r\n                        };\r\n                        break;\r\n                    case 'average':\r\n                        filter = function (arr) {\r\n                            var total = 0;\r\n                            for (var i = 0; i < arr.length; i++) {\r\n                                total += arr[i];\r\n                            }\r\n                            return total / arr.length;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        filter = function (arr) {\r\n                            return arr[0];\r\n                        }\r\n                }\r\n            }\r\n\r\n            var windowData = [];\r\n            for (var i = 0; i < total; i++) {\r\n                var idx0 = Math.floor(len / total * i);\r\n                var idx1 = Math.min(Math.floor(len / total * (i + 1)), len);\r\n                if (idx1 <= idx0) {\r\n                    continue;\r\n                }\r\n\r\n                for (var j = idx0; j < idx1; j++) {\r\n                    windowData[j - idx0] = orient === 'horizontal'\r\n                        ? singlePL[j][1] : singlePL[j][0];\r\n                }\r\n\r\n                windowData.length = idx1 - idx0;\r\n                var filteredVal = filter(windowData);\r\n                var nearestIdx = -1;\r\n                var minDist = Infinity;\r\n                // 寻找值最相似的点，使用其其它属性\r\n                for (var j = idx0; j < idx1; j++) {\r\n                    var val = orient === 'horizontal'\r\n                        ? singlePL[j][1] : singlePL[j][0];\r\n                    var dist = Math.abs(val - filteredVal);\r\n                    if (dist < minDist) {\r\n                        nearestIdx = j;\r\n                        minDist = dist;\r\n                    }\r\n                }\r\n\r\n                var newItem = singlePL[nearestIdx].slice();\r\n                if (orient === 'horizontal') {\r\n                    newItem[1] = filteredVal;\r\n                }\r\n                else {\r\n                    newItem[0] = filteredVal;\r\n                }\r\n                newList.push(newItem);\r\n            }\r\n            return newList;\r\n        },\r\n\r\n        _getSmooth: function (isSmooth/*, pointList, orient*/) {\r\n            if (isSmooth) {\r\n                /* 不科学啊，发现0.3通用了\r\n                var delta;\r\n                if (orient === 'horizontal') {\r\n                    delta = Math.abs(pointList[0][0] - pointList[1][0]);\r\n                }\r\n                else {\r\n                    delta = Math.abs(pointList[0][1] - pointList[1][1]);\r\n                }\r\n                */\r\n                return 0.3;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 生成空数据所需的可计算提示图形\r\n         */\r\n        _getCalculableItem: function (seriesIndex, dataIndex, name, x, y, orient) {\r\n            var series = this.series;\r\n            var color = series[seriesIndex].calculableHolderColor\r\n                        || this.ecTheme.calculableHolderColor\r\n                        || ecConfig.calculableHolderColor;\r\n\r\n            var itemShape = this._getSymbol(\r\n                seriesIndex, dataIndex, name,\r\n                x, y, orient\r\n            );\r\n            itemShape.style.color = color;\r\n            itemShape.style.strokeColor = color;\r\n            itemShape.rotation = [0,0];\r\n            itemShape.hoverable = false;\r\n            itemShape.draggable = false;\r\n            itemShape.style.text = undefined;\r\n\r\n            return itemShape;\r\n        },\r\n\r\n        /**\r\n         * 生成折线图上的拐点图形\r\n         */\r\n        _getSymbol: function (seriesIndex, dataIndex, name, x, y, orient) {\r\n            var series = this.series;\r\n            var serie = series[seriesIndex];\r\n            var data = serie.data[dataIndex];\r\n            \r\n            var itemShape = this.getSymbolShape(\r\n                serie, seriesIndex, data, dataIndex, name, \r\n                x, y,\r\n                this._sIndex2ShapeMap[seriesIndex], \r\n                this._sIndex2ColorMap[seriesIndex],\r\n                '#fff',\r\n                orient === 'vertical' ? 'horizontal' : 'vertical' // 翻转\r\n            );\r\n            itemShape.zlevel = serie.zlevel;\r\n            itemShape.z = serie.z + 1;\r\n            \r\n            if (this.deepQuery([data, serie, this.option], 'calculable')) {\r\n                this.setCalculable(itemShape);\r\n                itemShape.draggable = true;\r\n            }\r\n            \r\n            return itemShape;\r\n        },\r\n\r\n        // 位置转换\r\n        getMarkCoord: function (seriesIndex, mpData) {\r\n            var serie = this.series[seriesIndex];\r\n            var xMarkMap = this.xMarkMap[seriesIndex];\r\n            var xAxis = this.component.xAxis.getAxis(serie.xAxisIndex);\r\n            var yAxis = this.component.yAxis.getAxis(serie.yAxisIndex);\r\n            \r\n            if (mpData.type\r\n                && (mpData.type === 'max' || mpData.type === 'min' || mpData.type === 'average')\r\n            ) {\r\n                // 特殊值内置支持\r\n                var valueIndex = mpData.valueIndex != null \r\n                                 ? mpData.valueIndex \r\n                                 : xMarkMap.maxX0 != null \r\n                                   ? '1' : '';\r\n                return [\r\n                    xMarkMap[mpData.type + 'X' + valueIndex],\r\n                    xMarkMap[mpData.type + 'Y' + valueIndex],\r\n                    xMarkMap[mpData.type + 'Line' + valueIndex],\r\n                    xMarkMap[mpData.type + valueIndex]\r\n                ];\r\n            }\r\n            \r\n            return [\r\n                typeof mpData.xAxis != 'string' && xAxis.getCoordByIndex\r\n                    ? xAxis.getCoordByIndex(mpData.xAxis || 0)\r\n                    : xAxis.getCoord(mpData.xAxis || 0),\r\n                \r\n                typeof mpData.yAxis != 'string' && yAxis.getCoordByIndex\r\n                    ? yAxis.getCoordByIndex(mpData.yAxis || 0)\r\n                    : yAxis.getCoord(mpData.yAxis || 0)\r\n            ];\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.series = newOption.series;\r\n            }\r\n            \r\n            this.backupShapeList();\r\n            this._buildShape();\r\n        },\r\n        \r\n        ontooltipHover: function (param, tipShape) {\r\n            var seriesIndex = param.seriesIndex;\r\n            var dataIndex = param.dataIndex;\r\n            var seriesPL;\r\n            var singlePL;\r\n            var len = seriesIndex.length;\r\n            while (len--) {\r\n                seriesPL = this.finalPLMap[seriesIndex[len]];\r\n                if (seriesPL) {\r\n                    for (var i = 0, l = seriesPL.length; i < l; i++) {\r\n                        singlePL = seriesPL[i];\r\n                        for (var j = 0, k = singlePL.length; j < k; j++) {\r\n                            if (dataIndex === singlePL[j][2]) {\r\n                                tipShape.push(this._getSymbol(\r\n                                    seriesIndex[len],   // seriesIndex\r\n                                    singlePL[j][2],     // dataIndex\r\n                                    singlePL[j][3],     // name\r\n                                    singlePL[j][0],     // x\r\n                                    singlePL[j][1],     // y\r\n                                    'horizontal'\r\n                                ));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 动态数据增加动画 \r\n         */\r\n        addDataAnimation: function (params, done) {\r\n            var series = this.series;\r\n            var aniMap = {}; // seriesIndex索引参数\r\n            for (var i = 0, l = params.length; i < l; i++) {\r\n                aniMap[params[i][0]] = params[i];\r\n            }\r\n            var x;\r\n            var dx;\r\n            var y;\r\n            var dy;\r\n            var seriesIndex;\r\n            var pointList;\r\n            var isHorizontal; // 是否横向布局， isHorizontal;\r\n\r\n            var aniCount = 0;\r\n            function animationDone() {\r\n                aniCount--;\r\n                if (aniCount === 0) {\r\n                    done && done();\r\n                }\r\n            }\r\n            function animationDuring(target) {\r\n                // 强制更新曲线控制点\r\n                target.style.controlPointList = null;\r\n            }\r\n\r\n            for (var i = this.shapeList.length - 1; i >= 0; i--) {\r\n                seriesIndex = this.shapeList[i]._seriesIndex;\r\n                if (aniMap[seriesIndex] && !aniMap[seriesIndex][3]) {\r\n                    // 有数据删除才有移动的动画\r\n                    if (this.shapeList[i]._main && this.shapeList[i].style.pointList.length > 1) {\r\n                        pointList = this.shapeList[i].style.pointList;\r\n                        // 主线动画\r\n                        dx = Math.abs(pointList[0][0] - pointList[1][0]);\r\n                        dy = Math.abs(pointList[0][1] - pointList[1][1]);\r\n                        isHorizontal = this.shapeList[i]._orient === 'horizontal';\r\n                            \r\n                        if (aniMap[seriesIndex][2]) {\r\n                            // 队头加入删除末尾\r\n                            if (this.shapeList[i].type === 'half-smooth-polygon') {\r\n                                //区域图\r\n                                var len = pointList.length;\r\n                                this.shapeList[i].style.pointList[len - 3] = pointList[len - 2];\r\n                                this.shapeList[i].style.pointList[len - 3][isHorizontal ? 0 : 1]\r\n                                    = pointList[len - 4][isHorizontal ? 0 : 1];\r\n                                this.shapeList[i].style.pointList[len - 2] = pointList[len - 1];\r\n                            }\r\n                            this.shapeList[i].style.pointList.pop();\r\n                            isHorizontal ? (x = dx, y = 0) : (x = 0, y = -dy);\r\n                        }\r\n                        else {\r\n                            // 队尾加入删除头部\r\n                            this.shapeList[i].style.pointList.shift();\r\n                            if (this.shapeList[i].type === 'half-smooth-polygon') {\r\n                                //区域图\r\n                                var targetPoint =this.shapeList[i].style.pointList.pop();\r\n                                isHorizontal\r\n                                ? (targetPoint[0] = pointList[0][0])\r\n                                : (targetPoint[1] = pointList[0][1]);\r\n                                this.shapeList[i].style.pointList.push(targetPoint);\r\n                            }\r\n                            isHorizontal ? (x = -dx, y = 0) : (x = 0, y = dy);\r\n                        }\r\n                        this.shapeList[i].style.controlPointList = null;\r\n                        \r\n                        this.zr.modShape(this.shapeList[i]);\r\n                    }\r\n                    else {\r\n                        // 拐点动画\r\n                        if (aniMap[seriesIndex][2] \r\n                            && this.shapeList[i]._dataIndex \r\n                                === series[seriesIndex].data.length - 1\r\n                        ) {\r\n                            // 队头加入删除末尾\r\n                            this.zr.delShape(this.shapeList[i].id);\r\n                            continue;\r\n                        }\r\n                        else if (!aniMap[seriesIndex][2] \r\n                                 && this.shapeList[i]._dataIndex === 0\r\n                        ) {\r\n                            // 队尾加入删除头部\r\n                            this.zr.delShape(this.shapeList[i].id);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    this.shapeList[i].position = [0, 0];\r\n\r\n                    aniCount++;\r\n                    this.zr.animate(this.shapeList[i].id, '')\r\n                        .when(\r\n                            this.query(this.option, 'animationDurationUpdate'),\r\n                            { position: [ x, y ] }\r\n                        )\r\n                        .during(animationDuring)\r\n                        .done(animationDone)\r\n                        .start();\r\n                }\r\n            }\r\n\r\n            // 没有动画\r\n            if (!aniCount) {\r\n                done && done();\r\n            }\r\n        }\r\n    };\r\n\r\n    function legendLineIcon(ctx, style, refreshNextFrame) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        \r\n        var dy = height / 2;\r\n        \r\n        if (style.symbol.match('empty')) {\r\n            ctx.fillStyle = '#fff';\r\n        }\r\n        style.brushType = 'both';\r\n        \r\n        var symbol = style.symbol.replace('empty', '').toLowerCase();\r\n        if (symbol.match('star')) {\r\n            dy = (symbol.replace('star','') - 0) || 5;\r\n            y -= 1;\r\n            symbol = 'star';\r\n        } \r\n        else if (symbol === 'rectangle' || symbol === 'arrow') {\r\n            x += (width - height) / 2;\r\n            width = height;\r\n        }\r\n        \r\n        var imageLocation = '';\r\n        if (symbol.match('image')) {\r\n            imageLocation = symbol.replace(\r\n                    new RegExp('^image:\\\\/\\\\/'), ''\r\n                );\r\n            symbol = 'image';\r\n            x += Math.round((width - height) / 2) - 1;\r\n            width = height = height + 2;\r\n        }\r\n        symbol = IconShape.prototype.iconLibrary[symbol];\r\n        \r\n        if (symbol) {\r\n            var x2 = style.x;\r\n            var y2 = style.y;\r\n            ctx.moveTo(x2, y2 + dy);\r\n            ctx.lineTo(x2 + 5, y2 + dy);\r\n            ctx.moveTo(x2 + style.width - 5, y2 + dy);\r\n            ctx.lineTo(x2 + style.width, y2 + dy);\r\n            var self = this;\r\n            symbol(\r\n                ctx,\r\n                {\r\n                    x: x + 4,\r\n                    y: y + 4,\r\n                    width: width - 8,\r\n                    height: height - 8,\r\n                    n: dy,\r\n                    image: imageLocation\r\n                },\r\n                function () {\r\n                    self.modSelf();\r\n                    refreshNextFrame();\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            ctx.moveTo(x, y + dy);\r\n            ctx.lineTo(x + width, y + dy);\r\n        }\r\n    }\r\n    IconShape.prototype.iconLibrary['legendLineIcon'] = legendLineIcon;\r\n    \r\n    zrUtil.inherits(Line, ChartBase);\r\n    \r\n    // 图表注册\r\n    require('../chart').define('line', Line);\r\n    \r\n    return Line;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/chart/line.js\n ** module id = 83\n ** module chunks = 0\n **/","/**\n * echarts组件：数据区域缩放\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function (require) {\n    var Base = require('./base');\n\n    // 图形依赖\n    var RectangleShape = require('zrender/shape/Rectangle');\n    var PolygonShape = require('zrender/shape/Polygon');\n    var IconShape = require('../util/shape/Icon');\n\n    var ecConfig = require('../config');\n    // 区域缩放控制器\n    ecConfig.dataZoom = {\n        zlevel: 0,                  // 一级层叠\n        z: 4,                       // 二级层叠\n        show: false,\n        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：\n                                   // 'horizontal' ¦ 'vertical'\n        // x: {number},            // 水平安放位置，默认为根据grid参数适配，可选为：\n                                   // {number}（x坐标，单位px）\n        // y: {number},            // 垂直安放位置，默认为根据grid参数适配，可选为：\n                                   // {number}（y坐标，单位px）\n        // width: {number},        // 指定宽度，横向布局时默认为根据grid参数适配\n        // height: {number},       // 指定高度，纵向布局时默认为根据grid参数适配\n        backgroundColor: 'rgba(0,0,0,0)',       // 背景颜色\n        dataBackgroundColor: '#eee',            // 数据背景颜色\n        fillerColor: 'rgba(144,197,237,0.2)',   // 填充颜色\n        handleColor: 'rgba(70,130,180,0.8)',    // 手柄颜色\n        handleSize: 8,\n        showDetail: true,\n        // xAxisIndex: [],         // 默认控制所有横向类目\n        // yAxisIndex: [],         // 默认控制所有横向类目\n        // start: 0,               // 默认为0\n        // end: 100,               // 默认为全部 100%\n        realtime: true\n        // zoomLock: false         // 是否锁定选择区域大小\n    };\n\n    var ecDate = require('../util/date');\n    var zrUtil = require('zrender/tool/util');\n\n    /**\n     * 构造函数\n     * @param {Object} messageCenter echart消息中心\n     * @param {ZRender} zr zrender实例\n     * @param {Object} option 图表参数\n     * @param {Object} component 组件\n     */\n    function DataZoom(ecTheme, messageCenter, zr, option, myChart) {\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\n\n        var self = this;\n        self._ondrift = function (dx, dy) {\n            return self.__ondrift(this, dx, dy);\n        };\n        self._ondragend = function () {\n            return self.__ondragend();\n        };\n\n        this._fillerSize = 30;       // 控件大小，水平布局为高，纵向布局为宽\n        // this._fillerShae;            // 填充\n        // this._startShape;            // 起始手柄\n        // this._endShape;              // 结束手柄\n        // this._startFrameShape;       // 起始特效边框\n        // this._endFrameShape;         // 结束特效边框\n        // this._syncTicket;\n        this._isSilence = false;\n        this._zoom = {};\n        // this._originalData;\n\n        this.option.dataZoom = this.reformOption(this.option.dataZoom);\n        this.zoomOption = this.option.dataZoom;\n        this._handleSize = this.zoomOption.handleSize;\n        if (!this.myChart.canvasSupported) {\n            // 不支持Canvas的强制关闭实时动画\n            this.zoomOption.realtime = false;\n        }\n\n        // 位置参数，通过计算所得x, y, width, height\n        this._location = this._getLocation();\n        // 缩放参数\n        this._zoom =  this._getZoom();\n        this._backupData();\n\n        if (this.option.dataZoom.show) {\n            this._buildShape();\n        }\n        this._syncData();\n    }\n\n    DataZoom.prototype = {\n        type : ecConfig.COMPONENT_TYPE_DATAZOOM,\n        _buildShape : function () {\n            this._buildBackground();\n            this._buildFiller();\n            this._buildHandle();\n            this._buildFrame();\n\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\n                this.zr.addShape(this.shapeList[i]);\n            }\n            this._syncFrameShape();\n        },\n\n        /**\n         * 根据选项计算实体的位置坐标\n         */\n        _getLocation : function () {\n            var x;\n            var y;\n            var width;\n            var height;\n            var grid = this.component.grid;\n\n            // 不指定则根据grid适配\n            if (this.zoomOption.orient == 'horizontal') {\n                // 水平布局\n                width = this.zoomOption.width || grid.getWidth();\n                height = this.zoomOption.height || this._fillerSize;\n                x = this.zoomOption.x != null ? this.zoomOption.x : grid.getX();\n                y = this.zoomOption.y != null ? this.zoomOption.y : (this.zr.getHeight() - height - 2);\n            }\n            else {\n                // 垂直布局\n                width = this.zoomOption.width || this._fillerSize;\n                height = this.zoomOption.height || grid.getHeight();\n                x = this.zoomOption.x != null ? this.zoomOption.x : 2;\n                y = this.zoomOption.y != null ? this.zoomOption.y : grid.getY();\n            }\n\n            return {\n                x : x,\n                y : y,\n                width : width,\n                height : height\n            };\n        },\n\n        /**\n         * 计算缩放参数\n         * 修正单坐标轴只传对象为数组。\n         */\n        _getZoom : function () {\n            var series = this.option.series;\n            var xAxis = this.option.xAxis;\n            if (xAxis && !(xAxis instanceof Array)) {\n                xAxis = [xAxis];\n                this.option.xAxis = xAxis;\n            }\n            var yAxis = this.option.yAxis;\n            if (yAxis && !(yAxis instanceof Array)) {\n                yAxis = [yAxis];\n                this.option.yAxis = yAxis;\n            }\n\n            var zoomSeriesIndex = [];\n            var xAxisIndex;\n            var yAxisIndex;\n\n            var zOptIdx = this.zoomOption.xAxisIndex;\n            if (xAxis && zOptIdx == null) {\n                xAxisIndex = [];\n                for (var i = 0, l = xAxis.length; i < l; i++) {\n                    // 横纵默认为类目轴\n                    if (xAxis[i].type == 'category' || xAxis[i].type == null) {\n                        xAxisIndex.push(i);\n                    }\n                }\n            }\n            else {\n                if (zOptIdx instanceof Array) {\n                    xAxisIndex = zOptIdx;\n                }\n                else if (zOptIdx != null) {\n                    xAxisIndex = [zOptIdx];\n                }\n                else {\n                    xAxisIndex = [];\n                }\n            }\n\n            zOptIdx = this.zoomOption.yAxisIndex;\n            if (yAxis && zOptIdx == null) {\n                yAxisIndex = [];\n                for (var i = 0, l = yAxis.length; i < l; i++) {\n                    if (yAxis[i].type == 'category') {\n                        yAxisIndex.push(i);\n                    }\n                }\n            }\n            else {\n                if (zOptIdx instanceof Array) {\n                    yAxisIndex = zOptIdx;\n                }\n                else if (zOptIdx != null) {\n                    yAxisIndex = [zOptIdx];\n                }\n                else {\n                    yAxisIndex = [];\n                }\n            }\n\n            // 找到缩放控制的所有series\n            var serie;\n            for (var i = 0, l = series.length; i < l; i++) {\n                serie = series[i];\n                if (serie.type != ecConfig.CHART_TYPE_LINE\n                    && serie.type != ecConfig.CHART_TYPE_BAR\n                    && serie.type != ecConfig.CHART_TYPE_SCATTER\n                    && serie.type != ecConfig.CHART_TYPE_K\n                ) {\n                    continue;\n                }\n                for (var j = 0, k = xAxisIndex.length; j < k; j++) {\n                    if (xAxisIndex[j] == (serie.xAxisIndex || 0)) {\n                        zoomSeriesIndex.push(i);\n                        break;\n                    }\n                }\n                for (var j = 0, k = yAxisIndex.length; j < k; j++) {\n                    if (yAxisIndex[j] == (serie.yAxisIndex || 0)) {\n                        zoomSeriesIndex.push(i);\n                        break;\n                    }\n                }\n                // 不指定接管坐标轴，则散点图、双数值轴折线图柱形图都被纳入接管范围\n                if (this.zoomOption.xAxisIndex == null\n                    && this.zoomOption.yAxisIndex == null\n                    && serie.data\n                    && this.getDataFromOption(serie.data[0]) instanceof Array\n                    && (serie.type == ecConfig.CHART_TYPE_SCATTER\n                        || serie.type == ecConfig.CHART_TYPE_LINE\n                        || serie.type == ecConfig.CHART_TYPE_BAR)\n                ) {\n                    zoomSeriesIndex.push(i);\n                }\n            }\n\n            var start = this._zoom.start != null\n                        ? this._zoom.start\n                        : (this.zoomOption.start != null ? this.zoomOption.start : 0);\n            var end = this._zoom.end != null\n                      ? this._zoom.end\n                      : (this.zoomOption.end != null ? this.zoomOption.end : 100);\n\n            if (start > end) {\n                // 大小颠倒自动翻转\n                start = start + end;\n                end = start - end;\n                start = start - end;\n            }\n            var size = Math.round(\n                (end - start) / 100\n                * (\n                    this.zoomOption.orient == 'horizontal'\n                    ? this._location.width : this._location.height\n                )\n            );\n            return {\n                start : start,\n                end : end,\n                start2 : 0,\n                end2 : 100,\n                size : size,\n                xAxisIndex : xAxisIndex,\n                yAxisIndex : yAxisIndex,\n                seriesIndex : zoomSeriesIndex,\n                scatterMap : this._zoom.scatterMap || {}\n            };\n        },\n\n        _backupData : function () {\n            this._originalData = {\n                xAxis : {},\n                yAxis : {},\n                series : {}\n            };\n            var xAxis = this.option.xAxis;\n            var xAxisIndex = this._zoom.xAxisIndex;\n            for (var i = 0, l = xAxisIndex.length; i < l; i++) {\n                this._originalData.xAxis[xAxisIndex[i]] = xAxis[xAxisIndex[i]].data;\n            }\n\n            var yAxis = this.option.yAxis;\n            var yAxisIndex = this._zoom.yAxisIndex;\n            for (var i = 0, l = yAxisIndex.length; i < l; i++) {\n                this._originalData.yAxis[yAxisIndex[i]] = yAxis[yAxisIndex[i]].data;\n            }\n\n            var series = this.option.series;\n            var seriesIndex = this._zoom.seriesIndex;\n            var serie;\n            for (var i = 0, l = seriesIndex.length; i < l; i++) {\n                serie = series[seriesIndex[i]];\n                this._originalData.series[seriesIndex[i]] = serie.data;\n                if (serie.data\n                    && this.getDataFromOption(serie.data[0]) instanceof Array\n                    && (serie.type == ecConfig.CHART_TYPE_SCATTER\n                        || serie.type == ecConfig.CHART_TYPE_LINE\n                        || serie.type == ecConfig.CHART_TYPE_BAR)\n                ) {\n                    this._backupScale();\n                    this._calculScatterMap(seriesIndex[i]);\n                }\n            }\n        },\n\n        // 不止是scatter，双数值轴也使用此方法\n        _calculScatterMap : function (seriesIndex) {\n            this._zoom.scatterMap = this._zoom.scatterMap || {};\n            this._zoom.scatterMap[seriesIndex] = this._zoom.scatterMap[seriesIndex] || {};\n            var componentLibrary = require('../component');\n            // x轴极值\n            var Axis = componentLibrary.get('axis');\n            var axisOption = zrUtil.clone(this.option.xAxis);\n            if (axisOption[0].type == 'category') {\n                axisOption[0].type = 'value';\n            }\n            // axisOption[0].scale = true;\n            // axisOption[0].boundary = [0, 0];\n            if (axisOption[1] && axisOption[1].type == 'category') {\n                axisOption[1].type = 'value';\n            }\n\n            var vAxis = new Axis(\n                this.ecTheme,\n                null,   // messageCenter\n                false,  // this.zr\n                {\n                    xAxis: axisOption,\n                    series : this.option.series\n                },\n                this,\n                'xAxis'\n            );\n            var axisIndex = this.option.series[seriesIndex].xAxisIndex || 0;\n            this._zoom.scatterMap[seriesIndex].x = vAxis.getAxis(axisIndex).getExtremum();\n            vAxis.dispose();\n\n            // y轴极值\n            axisOption = zrUtil.clone(this.option.yAxis);\n            if (axisOption[0].type == 'category') {\n                axisOption[0].type = 'value';\n            }\n            // axisOption[0].scale = true;\n            // axisOption[1].boundary = [0, 0];\n            if (axisOption[1] && axisOption[1].type == 'category') {\n                axisOption[1].type = 'value';\n            }\n            vAxis = new Axis(\n                this.ecTheme,\n                null,   // messageCenter\n                false,  // this.zr\n                {\n                    yAxis: axisOption,\n                    series : this.option.series\n                },\n                this,\n                'yAxis'\n            );\n            axisIndex = this.option.series[seriesIndex].yAxisIndex || 0;\n            this._zoom.scatterMap[seriesIndex].y = vAxis.getAxis(axisIndex).getExtremum();\n            vAxis.dispose();\n            // console.log(this._zoom.scatterMap);\n        },\n\n        _buildBackground : function () {\n            var width = this._location.width;\n            var height = this._location.height;\n\n            // 背景\n            this.shapeList.push(new RectangleShape({\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase(),\n                hoverable :false,\n                style : {\n                    x : this._location.x,\n                    y : this._location.y,\n                    width : width,\n                    height : height,\n                    color : this.zoomOption.backgroundColor\n                }\n            }));\n\n            // 数据阴影\n            var maxLength = 0;\n            var xAxis = this._originalData.xAxis;\n            var xAxisIndex = this._zoom.xAxisIndex;\n            for (var i = 0, l = xAxisIndex.length; i < l; i++) {\n                maxLength = Math.max(\n                    maxLength, xAxis[xAxisIndex[i]].length\n                );\n            }\n            var yAxis = this._originalData.yAxis;\n            var yAxisIndex = this._zoom.yAxisIndex;\n            for (var i = 0, l = yAxisIndex.length; i < l; i++) {\n                maxLength = Math.max(\n                    maxLength, yAxis[yAxisIndex[i]].length\n                );\n            }\n\n            var seriesIndex = this._zoom.seriesIndex[0];\n            var data = this._originalData.series[seriesIndex];\n            var maxValue = Number.MIN_VALUE;\n            var minValue = Number.MAX_VALUE;\n            var value;\n            for (var i = 0, l = data.length; i < l; i++) {\n                value = this.getDataFromOption(data[i], 0);\n                if (this.option.series[seriesIndex].type == ecConfig.CHART_TYPE_K) {\n                    value = value[1];   // 收盘价\n                }\n                if (isNaN(value)) {\n                    value = 0;\n                }\n                maxValue = Math.max(maxValue, value);\n                minValue = Math.min(minValue, value);\n            }\n            var valueRange = maxValue - minValue;\n\n            var pointList = [];\n            var x = width / (maxLength - (maxLength > 1 ? 1 : 0));\n            var y = height / (maxLength - (maxLength > 1 ? 1 : 0));\n            var step = 1;\n            if (this.zoomOption.orient == 'horizontal' && x < 1) {\n                step = Math.floor(maxLength * 3 / width);\n            }\n            else if (this.zoomOption.orient == 'vertical' && y < 1){\n                step = Math.floor(maxLength * 3 / height);\n            }\n\n            for (var i = 0, l = maxLength; i < l; i += step) {\n                value = this.getDataFromOption(data[i], 0);\n                if (this.option.series[seriesIndex].type == ecConfig.CHART_TYPE_K) {\n                    value = value[1];   // 收盘价\n                }\n                if (isNaN(value)) {\n                    value = 0;\n                }\n                if (this.zoomOption.orient == 'horizontal') {\n                    pointList.push([\n                        this._location.x + x * i,\n                        this._location.y + height - 1 - Math.round(\n                            (value - minValue) / valueRange * (height - 10)\n                        )\n                    ]);\n                }\n                else {\n                    pointList.push([\n                        this._location.x + 1 + Math.round(\n                            (value - minValue) / valueRange * (width - 10)\n                        ),\n                        this._location.y + y * (l - i - 1)\n                    ]);\n                }\n            }\n            if (this.zoomOption.orient == 'horizontal') {\n                pointList.push([\n                    this._location.x + width,\n                    this._location.y + height\n                ]);\n                pointList.push([\n                    this._location.x, this._location.y + height\n                ]);\n            }\n            else {\n                pointList.push([\n                    this._location.x, this._location.y\n                ]);\n                pointList.push([\n                    this._location.x, this._location.y + height\n                ]);\n            }\n\n            this.shapeList.push(new PolygonShape({\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase(),\n                style : {\n                    pointList : pointList,\n                    color : this.zoomOption.dataBackgroundColor\n                },\n                hoverable : false\n            }));\n        },\n\n        /**\n         * 构建填充物\n         */\n        _buildFiller : function () {\n            this._fillerShae = {\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase(),\n                draggable : true,\n                ondrift : this._ondrift,\n                ondragend : this._ondragend,\n                _type : 'filler'\n            };\n\n            if (this.zoomOption.orient == 'horizontal') {\n                // 横向\n                this._fillerShae.style = {\n                    x : this._location.x\n                        + Math.round(this._zoom.start / 100 * this._location.width)\n                        + this._handleSize,\n                    y : this._location.y,\n                    width : this._zoom.size - this._handleSize * 2,\n                    height : this._location.height,\n                    color : this.zoomOption.fillerColor,\n                    // strokeColor : '#fff', // this.zoomOption.handleColor,\n                    // lineWidth: 2,\n                    text : ':::',\n                    textPosition : 'inside'\n                };\n            }\n            else {\n                // 纵向\n                this._fillerShae.style ={\n                    x : this._location.x,\n                    y : this._location.y\n                        + Math.round(this._zoom.start / 100 * this._location.height)\n                        + this._handleSize,\n                    width :  this._location.width,\n                    height : this._zoom.size - this._handleSize * 2,\n                    color : this.zoomOption.fillerColor,\n                    // strokeColor : '#fff', // this.zoomOption.handleColor,\n                    // lineWidth: 2,\n                    text : '::',\n                    textPosition : 'inside'\n                };\n            }\n\n            this._fillerShae.highlightStyle = {\n                brushType: 'fill',\n                color : 'rgba(0,0,0,0)'\n                /*\n                color : require('zrender/tool/color').alpha(\n                            this._fillerShae.style.color, 0\n                        )\n                */\n            };\n            this._fillerShae = new RectangleShape(this._fillerShae);\n            this.shapeList.push(this._fillerShae);\n        },\n\n        /**\n         * 构建拖拽手柄\n         */\n        _buildHandle : function () {\n            var detail = this.zoomOption.showDetail ? this._getDetail() : {start: '',end: ''};\n            this._startShape = {\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase(),\n                draggable : true,\n                style : {\n                    iconType: 'rectangle',\n                    x: this._location.x,\n                    y: this._location.y,\n                    width: this._handleSize,\n                    height: this._handleSize,\n                    color: this.zoomOption.handleColor,\n                    text: '=',\n                    textPosition: 'inside'\n                },\n                highlightStyle: {\n                    text: detail.start,\n                    brushType: 'fill',\n                    textPosition: 'left'\n                },\n                ondrift: this._ondrift,\n                ondragend: this._ondragend\n            };\n\n            if (this.zoomOption.orient == 'horizontal') {\n                this._startShape.style.height = this._location.height;\n                this._endShape = zrUtil.clone(this._startShape);\n\n                this._startShape.style.x = this._fillerShae.style.x - this._handleSize,\n                this._endShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width;\n                this._endShape.highlightStyle.text = detail.end;\n                this._endShape.highlightStyle.textPosition = 'right';\n            }\n            else {\n                this._startShape.style.width = this._location.width;\n                this._endShape = zrUtil.clone(this._startShape);\n\n                this._startShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height;\n                this._startShape.highlightStyle.textPosition = 'bottom';\n\n                this._endShape.style.y = this._fillerShae.style.y - this._handleSize;\n                this._endShape.highlightStyle.text = detail.end;\n                this._endShape.highlightStyle.textPosition = 'top';\n            }\n            this._startShape = new IconShape(this._startShape);\n            this._endShape = new IconShape(this._endShape);\n            this.shapeList.push(this._startShape);\n            this.shapeList.push(this._endShape);\n        },\n\n        /**\n         * 构建特效边框\n         */\n        _buildFrame : function () {\n            // 特效框线，亚像素优化\n            var x = this.subPixelOptimize(this._location.x, 1);\n            var y = this.subPixelOptimize(this._location.y, 1);\n            this._startFrameShape = {\n                zlevel: this.getZlevelBase(),\n                z: this.getZBase(),\n                hoverable :false,\n                style : {\n                    x : x,\n                    y : y,\n                    width : this._location.width - (x > this._location.x ? 1 : 0),\n                    height : this._location.height - (y > this._location.y ? 1 : 0),\n                    lineWidth: 1,\n                    brushType: 'stroke',\n                    strokeColor : this.zoomOption.handleColor\n                }\n            };\n            this._endFrameShape = zrUtil.clone(this._startFrameShape);\n\n            this._startFrameShape = new RectangleShape(this._startFrameShape);\n            this._endFrameShape = new RectangleShape(this._endFrameShape);\n            this.shapeList.push(this._startFrameShape);\n            this.shapeList.push(this._endFrameShape);\n            return;\n        },\n\n        _syncHandleShape : function () {\n            if (this.zoomOption.orient == 'horizontal') {\n                this._startShape.style.x = this._fillerShae.style.x - this._handleSize;\n                this._endShape.style.x = this._fillerShae.style.x + this._fillerShae.style.width;\n\n                this._zoom.start = (\n                    this._startShape.style.x - this._location.x\n                ) / this._location.width * 100;\n                this._zoom.end = (\n                    this._endShape.style.x + this._handleSize - this._location.x\n                ) / this._location.width * 100;\n            }\n            else {\n                this._startShape.style.y = this._fillerShae.style.y + this._fillerShae.style.height;\n                this._endShape.style.y = this._fillerShae.style.y - this._handleSize;\n\n                this._zoom.start = (\n                    this._location.y + this._location.height\n                    - this._startShape.style.y\n                ) / this._location.height * 100;\n                this._zoom.end = (\n                    this._location.y + this._location.height\n                    - this._endShape.style.y - this._handleSize\n                ) / this._location.height * 100;\n            }\n            this.zr.modShape(this._startShape.id);\n            this.zr.modShape(this._endShape.id);\n\n            // 同步边框\n            this._syncFrameShape();\n\n            this.zr.refreshNextFrame();\n        },\n\n        _syncFillerShape : function () {\n            var a;\n            var b;\n            if (this.zoomOption.orient == 'horizontal') {\n                a = this._startShape.style.x;\n                b = this._endShape.style.x;\n                this._fillerShae.style.x = Math.min(a, b) + this._handleSize;\n                this._fillerShae.style.width = Math.abs(a - b) - this._handleSize;\n                this._zoom.start = (\n                    Math.min(a, b) - this._location.x\n                ) / this._location.width * 100;\n                this._zoom.end = (\n                    Math.max(a, b) + this._handleSize - this._location.x\n                ) / this._location.width * 100;\n            }\n            else {\n                a = this._startShape.style.y;\n                b = this._endShape.style.y;\n                this._fillerShae.style.y = Math.min(a, b) + this._handleSize;\n                this._fillerShae.style.height = Math.abs(a - b) - this._handleSize;\n                this._zoom.start = (\n                    this._location.y + this._location.height - Math.max(a, b)\n                ) / this._location.height * 100;\n                this._zoom.end = (\n                    this._location.y + this._location.height - Math.min(a, b) - this._handleSize\n                ) / this._location.height * 100;\n            }\n\n            this.zr.modShape(this._fillerShae.id);\n\n            // 同步边框\n            this._syncFrameShape();\n\n            this.zr.refreshNextFrame();\n        },\n\n        _syncFrameShape : function () {\n            if (this.zoomOption.orient == 'horizontal') {\n                this._startFrameShape.style.width =\n                    this._fillerShae.style.x - this._location.x;\n                this._endFrameShape.style.x =\n                    this._fillerShae.style.x + this._fillerShae.style.width;\n                this._endFrameShape.style.width =\n                    this._location.x + this._location.width - this._endFrameShape.style.x;\n            }\n            else {\n                this._startFrameShape.style.y =\n                    this._fillerShae.style.y + this._fillerShae.style.height;\n                this._startFrameShape.style.height =\n                    this._location.y + this._location.height - this._startFrameShape.style.y;\n                this._endFrameShape.style.height =\n                    this._fillerShae.style.y - this._location.y;\n            }\n\n            this.zr.modShape(this._startFrameShape.id);\n            this.zr.modShape(this._endFrameShape.id);\n        },\n\n        _syncShape : function () {\n            if (!this.zoomOption.show) {\n                // 没有伸缩控件\n                return;\n            }\n            if (this.zoomOption.orient == 'horizontal') {\n                this._startShape.style.x = this._location.x\n                                           + this._zoom.start / 100 * this._location.width;\n                this._endShape.style.x   = this._location.x\n                                           + this._zoom.end / 100 * this._location.width\n                                           - this._handleSize;\n\n                this._fillerShae.style.x     = this._startShape.style.x + this._handleSize;\n                this._fillerShae.style.width = this._endShape.style.x\n                                               - this._startShape.style.x\n                                               - this._handleSize;\n            }\n            else {\n                this._startShape.style.y = this._location.y + this._location.height\n                                           - this._zoom.start / 100 * this._location.height;\n                this._endShape.style.y   = this._location.y + this._location.height\n                                           - this._zoom.end / 100 * this._location.height\n                                           - this._handleSize;\n\n                this._fillerShae.style.y      = this._endShape.style.y + this._handleSize;\n                this._fillerShae.style.height = this._startShape.style.y\n                                                - this._endShape.style.y\n                                                - this._handleSize;\n            }\n\n            this.zr.modShape(this._startShape.id);\n            this.zr.modShape(this._endShape.id);\n            this.zr.modShape(this._fillerShae.id);\n            // 同步边框\n            this._syncFrameShape();\n            this.zr.refresh();\n        },\n\n         _syncData : function (dispatchNow) {\n            var target;\n            var start;\n            var end;\n            var length;\n            var data;\n\n            for (var key in this._originalData) {\n                target = this._originalData[key];\n                for (var idx in target) {\n                    data = target[idx];\n                    if (data == null) {\n                        continue;\n                    }\n                    length = data.length;\n                    start = Math.floor(this._zoom.start / 100 * length);\n                    end = Math.ceil(this._zoom.end / 100 * length);\n\n                    if (!(this.getDataFromOption(data[0]) instanceof Array)\n                        || this.option[key][idx].type == ecConfig.CHART_TYPE_K\n                    ) {\n                        this.option[key][idx].data = data.slice(start, end);\n                    }\n                    else {\n                        // 散点图，双数值轴折线图柱形图特殊处理\n                        // axis.data[0]不会是Array，所以axis的情况不会走进这个分支\n                        this._setScale();\n                        this.option[key][idx].data = this._synScatterData(idx, data);\n                    }\n                }\n            }\n\n            if (!this._isSilence && (this.zoomOption.realtime || dispatchNow)) {\n                this.messageCenter.dispatch(\n                    ecConfig.EVENT.DATA_ZOOM,\n                    null,\n                    {zoom: this._zoom},\n                    this.myChart\n                );\n            }\n\n            //this.zoomOption.start = this._zoom.start;\n            //this.zoomOption.end = this._zoom.end;\n        },\n\n        _synScatterData : function (seriesIndex, data) {\n            if (this._zoom.start === 0\n                && this._zoom.end == 100\n                && this._zoom.start2 === 0\n                && this._zoom.end2 == 100\n            ) {\n                return data;\n            }\n            var newData = [];\n            var scale = this._zoom.scatterMap[seriesIndex];\n            var total;\n            var xStart;\n            var xEnd;\n            var yStart;\n            var yEnd;\n\n            if (this.zoomOption.orient == 'horizontal') {\n                total = scale.x.max - scale.x.min;\n                xStart = this._zoom.start / 100 * total + scale.x.min;\n                xEnd = this._zoom.end / 100 * total + scale.x.min;\n\n                total = scale.y.max - scale.y.min;\n                yStart = this._zoom.start2 / 100 * total + scale.y.min;\n                yEnd = this._zoom.end2 / 100 * total + scale.y.min;\n            }\n            else {\n                total = scale.x.max - scale.x.min;\n                xStart = this._zoom.start2 / 100 * total + scale.x.min;\n                xEnd = this._zoom.end2 / 100 * total + scale.x.min;\n\n                total = scale.y.max - scale.y.min;\n                yStart = this._zoom.start / 100 * total + scale.y.min;\n                yEnd = this._zoom.end / 100 * total + scale.y.min;\n            }\n\n            var dataMappingMethods;\n            if (dataMappingMethods = scale.x.dataMappingMethods) {\n                xStart = dataMappingMethods.coord2Value(xStart);\n                xEnd = dataMappingMethods.coord2Value(xEnd);\n            }\n            if (dataMappingMethods = scale.y.dataMappingMethods) {\n                yStart = dataMappingMethods.coord2Value(yStart);\n                yEnd = dataMappingMethods.coord2Value(yEnd);\n            }\n\n            // console.log(xStart,xEnd,yStart,yEnd);\n\n            var value;\n            for (var i = 0, l = data.length; i < l; i++) {\n                value = data[i].value || data[i];\n                if (value[0] >= xStart\n                    && value[0] <= xEnd\n                    && value[1] >= yStart\n                    && value[1] <= yEnd\n                ) {\n                    newData.push(data[i]);\n                }\n            }\n\n            return newData;\n        },\n\n        /**\n         * 发生缩放后修改axis的scale\n         */\n        _setScale: function() {\n            var needScale = this._zoom.start !== 0\n                            || this._zoom.end !== 100\n                            || this._zoom.start2 !== 0\n                            || this._zoom.end2 !== 100;\n            var axis = {\n                xAxis : this.option.xAxis,\n                yAxis : this.option.yAxis\n            };\n            for (var key in axis) {\n                for (var i = 0, l = axis[key].length; i < l; i++) {\n                    axis[key][i].scale = needScale || axis[key][i]._scale;\n                }\n            }\n        },\n\n        /**\n         * 备份可能存在的scale设置\n         */\n        _backupScale: function() {\n            var axis = {\n                xAxis : this.option.xAxis,\n                yAxis : this.option.yAxis\n            };\n            for (var key in axis) {\n                for (var i = 0, l = axis[key].length; i < l; i++) {\n                    axis[key][i]._scale = axis[key][i].scale;\n                }\n            }\n        },\n\n        /**\n         * 获取当前定位\n         */\n        _getDetail : function () {\n            var key = ['xAxis', 'yAxis'];\n            for (var i = 0, l = key.length; i < l; i++) {\n                var target = this._originalData[key[i]];\n                for (var idx in target) {\n                    var data = target[idx];\n                    if (data == null) {\n                        continue;\n                    }\n                    var length = data.length;\n                    var start = Math.floor(this._zoom.start / 100 * length);\n                    var end = Math.ceil(this._zoom.end / 100 * length);\n                    end -= end > 0 ? 1 : 0;\n                    return {\n                        start : this.getDataFromOption(data[start]),\n                        end : this.getDataFromOption(data[end])\n                    };\n                }\n            }\n\n            key = this.zoomOption.orient == 'horizontal' ? 'xAxis' : 'yAxis';\n            var seriesIndex = this._zoom.seriesIndex[0];\n            var axisIndex = this.option.series[seriesIndex][key + 'Index'] || 0;\n            var axisType = this.option[key][axisIndex].type;\n            var min = this._zoom.scatterMap[seriesIndex][key.charAt(0)].min;\n            var max = this._zoom.scatterMap[seriesIndex][key.charAt(0)].max;\n            var gap = max - min;\n\n            if (axisType == 'value') {\n                return {\n                    start : min + gap * this._zoom.start / 100,\n                    end : min + gap * this._zoom.end / 100\n                };\n            }\n            else if (axisType == 'time') {\n                // 最优解\n                max = min + gap * this._zoom.end / 100;\n                min = min + gap * this._zoom.start / 100;\n                var formatter = ecDate.getAutoFormatter(min, max).formatter;\n                return {\n                    start : ecDate.format(formatter, min),\n                    end : ecDate.format(formatter, max)\n                };\n            }\n\n            return {\n                start : '',\n                end : ''\n            };\n        },\n\n        /**\n         * 拖拽范围控制\n         */\n        __ondrift : function (shape, dx, dy) {\n            if (this.zoomOption.zoomLock) {\n                // zoomLock时把handle转成filler的拖拽\n                shape = this._fillerShae;\n            }\n\n            var detailSize = shape._type == 'filler' ? this._handleSize : 0;\n            if (this.zoomOption.orient == 'horizontal') {\n                if (shape.style.x + dx - detailSize <= this._location.x) {\n                    shape.style.x = this._location.x + detailSize;\n                }\n                else if (shape.style.x + dx + shape.style.width + detailSize\n                         >= this._location.x + this._location.width\n                ) {\n                    shape.style.x = this._location.x + this._location.width\n                                - shape.style.width - detailSize;\n                }\n                else {\n                    shape.style.x += dx;\n                }\n            }\n            else {\n                if (shape.style.y + dy - detailSize <= this._location.y) {\n                    shape.style.y = this._location.y + detailSize;\n                }\n                else if (shape.style.y + dy + shape.style.height + detailSize\n                         >= this._location.y + this._location.height\n                ) {\n                    shape.style.y = this._location.y + this._location.height\n                                - shape.style.height - detailSize;\n                }\n                else {\n                    shape.style.y += dy;\n                }\n            }\n\n            if (shape._type == 'filler') {\n                this._syncHandleShape();\n            }\n            else {\n                this._syncFillerShape();\n            }\n\n            if (this.zoomOption.realtime) {\n                this._syncData();\n            }\n\n            if (this.zoomOption.showDetail) {\n                var detail = this._getDetail();\n                this._startShape.style.text = this._startShape.highlightStyle.text = detail.start;\n                this._endShape.style.text = this._endShape.highlightStyle.text = detail.end;\n                this._startShape.style.textPosition = this._startShape.highlightStyle.textPosition;\n                this._endShape.style.textPosition = this._endShape.highlightStyle.textPosition;\n            }\n            return true;\n        },\n\n        __ondragend : function () {\n            if (this.zoomOption.showDetail) {\n                this._startShape.style.text = this._endShape.style.text = '=';\n                this._startShape.style.textPosition = this._endShape.style.textPosition = 'inside';\n                this.zr.modShape(this._startShape.id);\n                this.zr.modShape(this._endShape.id);\n                this.zr.refreshNextFrame();\n            }\n            this.isDragend = true;\n        },\n\n        /**\n         * 数据项被拖拽出去\n         */\n        ondragend : function (param, status) {\n            if (!this.isDragend || !param.target) {\n                // 没有在当前实例上发生拖拽行为则直接返回\n                return;\n            }\n\n            !this.zoomOption.realtime && this._syncData();\n\n            // 别status = {}赋值啊！！\n            status.dragOut = true;\n            status.dragIn = true;\n            if (!this._isSilence && !this.zoomOption.realtime) {\n                this.messageCenter.dispatch(\n                    ecConfig.EVENT.DATA_ZOOM,\n                    null,\n                    {zoom: this._zoom},\n                    this.myChart\n                );\n            }\n            status.needRefresh = false; // 会有消息触发fresh，不用再刷一遍\n            // 处理完拖拽事件后复位\n            this.isDragend = false;\n\n            return;\n        },\n\n        ondataZoom : function (param, status) {\n            status.needRefresh = true;\n            return;\n        },\n\n        absoluteZoom : function (param) {\n            this._zoom.start = param.start;\n            this._zoom.end = param.end;\n            this._zoom.start2 = param.start2;\n            this._zoom.end2 = param.end2;\n            this._syncShape();\n            this._syncData(true);\n            return;\n        },\n\n        rectZoom : function (param) {\n            if (!param) {\n                // 重置拖拽\n                //this.zoomOption.start =\n                //this.zoomOption.start2 =\n                this._zoom.start = this._zoom.start2 = 0;\n\n                //this.zoomOption.end =\n                //this.zoomOption.end2 =\n                this._zoom.end = this._zoom.end2 = 100;\n\n                this._syncShape();\n                this._syncData(true);\n                return this._zoom;\n            }\n            var gridArea = this.component.grid.getArea();\n            var rect = {\n                x : param.x,\n                y : param.y,\n                width : param.width,\n                height : param.height\n            };\n            // 修正方向框选\n            if (rect.width < 0) {\n                rect.x += rect.width;\n                rect.width = -rect.width;\n            }\n            if (rect.height < 0) {\n                rect.y += rect.height;\n                rect.height = -rect.height;\n            }\n            // console.log(rect,this._zoom);\n\n            // 剔除无效缩放\n            if (rect.x > gridArea.x + gridArea.width || rect.y > gridArea.y + gridArea.height) {\n                return false; // 无效缩放\n            }\n\n            // 修正框选超出\n            if (rect.x < gridArea.x) {\n                rect.x = gridArea.x;\n            }\n            if (rect.x + rect.width > gridArea.x + gridArea.width) {\n                rect.width = gridArea.x + gridArea.width - rect.x;\n            }\n            if (rect.y + rect.height > gridArea.y + gridArea.height) {\n                rect.height = gridArea.y + gridArea.height - rect.y;\n            }\n\n            var total;\n            var sdx = (rect.x - gridArea.x) / gridArea.width;\n            var edx = 1 - (rect.x + rect.width - gridArea.x) / gridArea.width;\n            var sdy = 1 - (rect.y + rect.height - gridArea.y) / gridArea.height;\n            var edy = (rect.y - gridArea.y) / gridArea.height;\n            // console.log('this',sdy,edy,this._zoom.start,this._zoom.end)\n            if (this.zoomOption.orient == 'horizontal') {\n                total = this._zoom.end - this._zoom.start;\n                this._zoom.start += total * sdx;\n                this._zoom.end -= total * edx;\n\n                total = this._zoom.end2 - this._zoom.start2;\n                this._zoom.start2 += total * sdy;\n                this._zoom.end2 -= total * edy;\n            }\n            else {\n                total = this._zoom.end - this._zoom.start;\n                this._zoom.start += total * sdy;\n                this._zoom.end -= total * edy;\n\n                total = this._zoom.end2 - this._zoom.start2;\n                this._zoom.start2 += total * sdx;\n                this._zoom.end2 -= total * edx;\n            }\n            //console.log(this._zoom.start,this._zoom.end,this._zoom.start2,this._zoom.end2)\n            //this.zoomOption.start = this._zoom.start;\n            //this.zoomOption.end = this._zoom.end;\n            //this.zoomOption.start2 = this._zoom.start2;\n            //this.zoomOption.end2 = this._zoom.end2;\n            //console.log(rect,gridArea,this._zoom,total)\n            this._syncShape();\n            this._syncData(true);\n            return this._zoom;\n        },\n\n        syncBackupData : function (curOption) {\n            var start;\n            var target = this._originalData['series'];\n            var curSeries = curOption.series;\n            var curData;\n            for (var i = 0, l = curSeries.length; i < l; i++) {\n                curData = curSeries[i].data || curSeries[i].eventList;\n                if (target[i]) {\n                    // dataZoom接管的\n                    start = Math.floor(this._zoom.start / 100 * target[i].length);\n                }\n                else {\n                    // 非dataZoom接管\n                    start = 0;\n                }\n                for (var j = 0, k = curData.length; j < k; j++) {\n                    //optionBackup.series[i].data[j + start] = curData[j];\n                    if (target[i]) {\n                        // 同步内部备份\n                        target[i][j + start] = curData[j];\n                    }\n                }\n            }\n        },\n\n        syncOption : function(magicOption) {\n            this.silence(true);\n            this.option = magicOption;\n            this.option.dataZoom = this.reformOption(this.option.dataZoom);\n            this.zoomOption = this.option.dataZoom;\n            if (!this.myChart.canvasSupported) {\n                // 不支持Canvas的强制关闭实时动画\n                this.zoomOption.realtime = false;\n            }\n\n            this.clear();\n            // 位置参数，通过计算所得x, y, width, height\n            this._location = this._getLocation();\n            // 缩放参数\n            this._zoom =  this._getZoom();\n\n            this._backupData();\n            if (this.option.dataZoom && this.option.dataZoom.show) {\n                this._buildShape();\n            }\n            this._syncData();\n\n            this.silence(false);\n        },\n\n        silence : function (s) {\n            this._isSilence = s;\n        },\n\n        getRealDataIndex : function (sIdx, dIdx) {\n            if (!this._originalData || (this._zoom.start === 0 && this._zoom.end == 100)) {\n                return dIdx;\n            }\n            var sreies = this._originalData.series;\n            if (sreies[sIdx]) {\n                return Math.floor(this._zoom.start / 100 * sreies[sIdx].length) + dIdx;\n            }\n            return -1;\n        },\n\n        /**\n         * 避免dataZoom带来两次refresh，不设refresh接口，resize重复一下buildshape逻辑\n         */\n        resize : function () {\n            this.clear();\n\n            // 位置参数，通过计算所得x, y, width, height\n            this._location = this._getLocation();\n            // 缩放参数\n            this._zoom =  this._getZoom();\n\n            if (this.option.dataZoom.show) {\n                this._buildShape();\n            }\n        }\n    };\n\n    zrUtil.inherits(DataZoom, Base);\n\n    require('../component').define('dataZoom', DataZoom);\n\n    return DataZoom;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/dataZoom.js\n ** module id = 84\n ** module chunks = 0\n **/","/**\n * echarts日期运算格式化相关\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n */\ndefine(function() {\n    var _timeGap = [\n        {formatter: 'hh : mm : ss', value: 1000},               // 1s\n        {formatter: 'hh : mm : ss', value: 1000 * 5},           // 5s\n        {formatter: 'hh : mm : ss', value: 1000 * 10},          // 10s\n        {formatter: 'hh : mm : ss', value: 1000 * 15},          // 15s\n        {formatter: 'hh : mm : ss', value: 1000 * 30},          // 30s\n        {formatter: 'hh : mm\\nMM - dd', value: 60000},          // 1m\n        {formatter: 'hh : mm\\nMM - dd', value: 60000 * 5},      // 5m\n        {formatter: 'hh : mm\\nMM - dd', value: 60000 * 10},     // 10m\n        {formatter: 'hh : mm\\nMM - dd', value: 60000 * 15},     // 15m\n        {formatter: 'hh : mm\\nMM - dd', value: 60000 * 30},     // 30m\n        {formatter: 'hh : mm\\nMM - dd', value: 3600000},        // 1h\n        {formatter: 'hh : mm\\nMM - dd', value: 3600000 * 2},    // 2h\n        {formatter: 'hh : mm\\nMM - dd', value: 3600000 * 6},    // 6h\n        {formatter: 'hh : mm\\nMM - dd', value: 3600000 * 12},   // 12h\n        {formatter: 'MM - dd\\nyyyy', value: 3600000 * 24},      // 1d\n        {formatter: 'week', value: 3600000 * 24 * 7},           // 7d\n        {formatter: 'month', value: 3600000 * 24 * 31},         // 1M\n        {formatter: 'quarter', value: 3600000 * 24 * 380 / 4},  // 3M\n        {formatter: 'half-year', value: 3600000 * 24 * 380 / 2},// 6M\n        {formatter: 'year', value: 3600000 * 24 * 380}          // 1Y\n    ];\n    \n    /**\n     * 获取最佳formatter\n     * @params {number} min 最小值\n     * @params {number} max 最大值\n     * @params {=number} splitNumber 分隔段数\n     */\n    function getAutoFormatter(min, max, splitNumber) {\n        splitNumber = splitNumber > 1 ? splitNumber : 2;\n        // 最优解\n        var curValue;\n        var totalGap;\n        // 目标\n        var formatter;\n        var gapValue;\n        for (var i = 0, l = _timeGap.length; i < l; i++) {\n            curValue = _timeGap[i].value;\n            totalGap = Math.ceil(max / curValue) * curValue \n                       - Math.floor(min / curValue) * curValue;\n            if (Math.round(totalGap / curValue) <= splitNumber * 1.2) {\n                formatter =  _timeGap[i].formatter;\n                gapValue = _timeGap[i].value;\n                // console.log(formatter, gapValue,i);\n                break;\n            }\n        }\n        \n        if (formatter == null) {\n            formatter = 'year';\n            curValue = 3600000 * 24 * 367;\n            totalGap = Math.ceil(max / curValue) * curValue \n                       - Math.floor(min / curValue) * curValue;\n            gapValue = Math.round(totalGap / (splitNumber - 1) / curValue) * curValue;\n        }\n        \n        return {\n            formatter: formatter,\n            gapValue: gapValue\n        };\n    }\n    \n    /**\n     * 一位数字补0 \n     */\n    function s2d (v) {\n        return v < 10 ? ('0' + v) : v;\n    }\n    \n    /**\n     * 百分比计算\n     */\n    function format(formatter, value) {\n        if (formatter == 'week' \n            || formatter == 'month' \n            || formatter == 'quarter' \n            || formatter == 'half-year'\n            || formatter == 'year'\n        ) {\n            formatter = 'MM - dd\\nyyyy';\n        }\n            \n        var date = getNewDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n        \n        formatter = formatter.replace('MM', s2d(M));\n        formatter = formatter.toLowerCase();\n        formatter = formatter.replace('yyyy', y);\n        formatter = formatter.replace('yy', y % 100);\n        formatter = formatter.replace('dd', s2d(d));\n        formatter = formatter.replace('d', d);\n        formatter = formatter.replace('hh', s2d(h));\n        formatter = formatter.replace('h', h);\n        formatter = formatter.replace('mm', s2d(m));\n        formatter = formatter.replace('m', m);\n        formatter = formatter.replace('ss', s2d(s));\n        formatter = formatter.replace('s', s);\n\n        return formatter;\n    }\n    \n    function nextMonday(value) {\n        value = getNewDate(value);\n        value.setDate(value.getDate() + 8 - value.getDay());\n        return value;\n    }\n    \n    function nextNthPerNmonth(value, nth, nmon) {\n        value = getNewDate(value);\n        value.setMonth(Math.ceil((value.getMonth() + 1) / nmon) * nmon);\n        value.setDate(nth);\n        return value;\n    }\n    \n    function nextNthOnMonth(value, nth) {\n        return nextNthPerNmonth(value, nth, 1);\n    }\n    \n    function nextNthOnQuarterYear(value, nth) {\n        return nextNthPerNmonth(value, nth, 3);\n    }\n    \n    function nextNthOnHalfYear(value, nth) {\n        return nextNthPerNmonth(value, nth, 6);\n    }\n    \n    function nextNthOnYear(value, nth) {\n        return nextNthPerNmonth(value, nth, 12);\n    }\n    \n    function getNewDate(value) {\n        return value instanceof Date\n               ? value\n               : new Date(typeof value == 'string' ? value.replace(/-/g, '/') : value);\n    }\n    \n    return {\n        getAutoFormatter: getAutoFormatter,\n        getNewDate: getNewDate,\n        format: format,\n        nextMonday: nextMonday,\n        nextNthPerNmonth: nextNthPerNmonth,\n        nextNthOnMonth: nextNthOnMonth,\n        nextNthOnQuarterYear: nextNthOnQuarterYear,\n        nextNthOnHalfYear: nextNthOnHalfYear,\n        nextNthOnYear : nextNthOnYear\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/date.js\n ** module id = 85\n ** module chunks = 0\n **/","/**\n * zrender\n *\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * shape类：支持半平滑的polygon，折线面积图使用\n * 可配图形属性：\n   {\n       // 基础属性\n       shape  : 'halfSmoothPolygon',      // 必须，shape类标识，需要显式指定\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\n       invisible : {boolean},   // 默认为false，是否可见\n\n       // 样式属性，默认状态样式样式属性\n       style  : {\n           pointList     : {Array},   // 必须，多边形各个顶角坐标\n       },\n\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\n       highlightStyle : {\n           // 同style\n       }\n\n       // 交互属性，详见shape.Base\n\n       // 事件属性，详见shape.Base\n   }\n         例子：\n   {\n       shape  : 'halfSmoothPolygon',\n       id     : '123456',\n       zlevel : 1,\n       style  : {\n           pointList : [[10, 10], [300, 20], [298, 400], [50, 450]]\n           color : '#eee',\n           text : 'Baidu'\n       },\n       myName : 'kener',  // 可自带任何有效自定义属性\n\n       clickable : true,\n       onClick : function (eventPacket) {\n           alert(eventPacket.target.myName);\n       }\n   }\n */\ndefine(function (require) {\n    var Base = require('zrender/shape/Base');\n    var smoothBezier = require('zrender/shape/util/smoothBezier');\n    var zrUtil = require('zrender/tool/util');\n    \n    function HalfSmoothPolygon(options) {\n        Base.call(this, options);\n    }\n\n    HalfSmoothPolygon.prototype = {\n        type : 'half-smooth-polygon',\n        /**\n         * 创建多边形路径\n         * @param {Context2D} ctx Canvas 2D上下文\n         * @param {Object} style 样式\n         */\n        buildPath : function (ctx, style) {\n            var pointList = style.pointList;\n            if (pointList.length < 2) {\n                // 少于2个点就不画了~\n                return;\n            }\n            if (style.smooth) {\n                var controlPoints = smoothBezier(\n                    pointList.slice(0, -2), style.smooth, false, style.smoothConstraint\n                );\n\n                ctx.moveTo(pointList[0][0], pointList[0][1]);\n                var cp1;\n                var cp2;\n                var p;\n                var l = pointList.length;\n                for (var i = 0; i < l - 3; i++) {\n                    cp1 = controlPoints[i * 2];\n                    cp2 = controlPoints[i * 2 + 1];\n                    p = pointList[i + 1];\n                    ctx.bezierCurveTo(\n                        cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                    );\n                }\n                ctx.lineTo(pointList[l - 2][0], pointList[l - 2][1]);\n                ctx.lineTo(pointList[l - 1][0], pointList[l - 1][1]);\n                ctx.lineTo(pointList[0][0], pointList[0][1]);\n            } \n            else {\n                require('zrender/shape/Polygon').prototype.buildPath(\n                    ctx, style\n                );\n            }\n            return;\n        }\n    };\n\n    zrUtil.inherits(HalfSmoothPolygon, Base);\n    \n    return HalfSmoothPolygon;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/shape/HalfSmoothPolygon.js\n ** module id = 86\n ** module chunks = 0\n **/","/**\n * echarts组件类： 坐标轴\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *\n * 直角坐标系中坐标轴数组，数组中每一项代表一条横轴（纵轴）坐标轴。\n * 标准（1.0）中规定最多同时存在2条横轴和2条纵轴\n *    单条横轴时可指定安放于grid的底部（默认）或顶部，2条同时存在时则默认第一条安放于底部，第二天安放于顶部\n *    单条纵轴时可指定安放于grid的左侧（默认）或右侧，2条同时存在时则默认第一条安放于左侧，第二天安放于右侧。\n * 坐标轴有两种类型，类目型和数值型（区别详见axis）：\n *    横轴通常为类目型，但条形图时则横轴为数值型，散点图时则横纵均为数值型\n *    纵轴通常为数值型，但条形图时则纵轴为类目型。\n *\n */\ndefine(function (require) {\n    var Base = require('./base');\n\n    var LineShape = require('zrender/shape/Line');\n\n    var ecConfig = require('../config');\n    var ecData = require('../util/ecData');\n    var zrUtil = require('zrender/tool/util');\n    var zrColor = require('zrender/tool/color');\n\n    /**\n     * 构造函数\n     * @param {Object} messageCenter echart消息中心\n     * @param {ZRender} zr zrender实例\n     * @param {Object} option 图表选项\n     *     @param {string=} option.xAxis.type 坐标轴类型，横轴默认为类目型'category'\n     *     @param {string=} option.yAxis.type 坐标轴类型，纵轴默认为类目型'value'\n     * @param {Object} component 组件\n     * @param {string} axisType 横走or纵轴\n     */\n    function Axis(ecTheme, messageCenter, zr, option, myChart, axisType) {\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\n\n        this.axisType = axisType;\n        this._axisList = [];\n\n        this.refresh(option);\n    }\n\n    Axis.prototype = {\n        type: ecConfig.COMPONENT_TYPE_AXIS,\n        axisBase: {\n            // 轴线\n            _buildAxisLine: function () {\n                var lineWidth = this.option.axisLine.lineStyle.width;\n                var halfLineWidth = lineWidth / 2;\n                var axShape = {\n                    _axisShape: 'axisLine',\n                    zlevel: this.getZlevelBase(),\n                    z: this.getZBase() + 3,\n                    hoverable: false\n                };\n                var grid = this.grid;\n                switch (this.option.position) {\n                    case 'left' :\n                        axShape.style = {\n                            xStart: grid.getX() - halfLineWidth,\n                            yStart: grid.getYend(),\n                            xEnd: grid.getX() - halfLineWidth,\n                            yEnd: grid.getY(),\n                            lineCap: 'round'\n                        };\n                        break;\n                    case 'right' :\n                        axShape.style = {\n                            xStart: grid.getXend() + halfLineWidth,\n                            yStart: grid.getYend(),\n                            xEnd: grid.getXend() + halfLineWidth,\n                            yEnd: grid.getY(),\n                            lineCap: 'round'\n                        };\n                        break;\n                    case 'bottom' :\n                        axShape.style = {\n                            xStart: grid.getX(),\n                            yStart: grid.getYend() + halfLineWidth,\n                            xEnd: grid.getXend(),\n                            yEnd: grid.getYend() + halfLineWidth,\n                            lineCap: 'round'\n                        };\n                        break;\n                    case 'top' :\n                        axShape.style = {\n                            xStart: grid.getX(),\n                            yStart: grid.getY() - halfLineWidth,\n                            xEnd: grid.getXend(),\n                            yEnd: grid.getY() - halfLineWidth,\n                            lineCap: 'round'\n                        };\n                        break;\n                }\n                var style = axShape.style;\n                if (this.option.name !== '') { // 别帮我代码规范\n                    style.text = this.option.name;\n                    style.textPosition = this.option.nameLocation;\n                    style.textFont = this.getFont(this.option.nameTextStyle);\n                    if (this.option.nameTextStyle.align) {\n                        style.textAlign = this.option.nameTextStyle.align;\n                    }\n                    if (this.option.nameTextStyle.baseline) {\n                        style.textBaseline = this.option.nameTextStyle.baseline;\n                    }\n                    if (this.option.nameTextStyle.color) {\n                        style.textColor = this.option.nameTextStyle.color;\n                    }\n                }\n                style.strokeColor = this.option.axisLine.lineStyle.color;\n\n                style.lineWidth = lineWidth;\n                // 亚像素优化\n                if (this.isHorizontal()) {\n                    // 横向布局，优化y\n                    style.yStart\n                        = style.yEnd\n                        = this.subPixelOptimize(style.yEnd, lineWidth);\n                }\n                else {\n                    // 纵向布局，优化x\n                    style.xStart\n                        = style.xEnd\n                        = this.subPixelOptimize(style.xEnd, lineWidth);\n                }\n\n                style.lineType = this.option.axisLine.lineStyle.type;\n\n                axShape = new LineShape(axShape);\n                this.shapeList.push(axShape);\n            },\n\n            _axisLabelClickable: function(clickable, axShape) {\n                if (clickable) {\n                    ecData.pack(\n                        axShape, undefined, -1, undefined, -1, axShape.style.text\n                    );\n                    axShape.hoverable = true;\n                    axShape.clickable = true;\n                    axShape.highlightStyle = {\n                        color: zrColor.lift(axShape.style.color, 1),\n                        brushType: 'fill'\n                    };\n                    return axShape;\n                }\n                else {\n                    return axShape;\n                }\n            },\n\n            refixAxisShape: function(zeroX, zeroY) {\n                if (!this.option.axisLine.onZero) {\n                    return;\n                }\n                var tickLength;\n                if (this.isHorizontal() && zeroY != null) {\n                    // 横向布局调整纵向y\n                    for (var i = 0, l = this.shapeList.length; i < l; i++) {\n                        if (this.shapeList[i]._axisShape === 'axisLine') {\n                            this.shapeList[i].style.yStart\n                                = this.shapeList[i].style.yEnd\n                                = this.subPixelOptimize(\n                                    zeroY, this.shapeList[i].stylelineWidth\n                                );\n                            this.zr.modShape(this.shapeList[i].id);\n                        }\n                        else if (this.shapeList[i]._axisShape === 'axisTick') {\n                            tickLength = this.shapeList[i].style.yEnd\n                                         - this.shapeList[i].style.yStart;\n                            this.shapeList[i].style.yStart = zeroY - tickLength;\n                            this.shapeList[i].style.yEnd = zeroY;\n                            this.zr.modShape(this.shapeList[i].id);\n                        }\n                    }\n                }\n                if (!this.isHorizontal() && zeroX != null) {\n                    // 纵向布局调整横向x\n                    for (var i = 0, l = this.shapeList.length; i < l; i++) {\n                        if (this.shapeList[i]._axisShape === 'axisLine') {\n                            this.shapeList[i].style.xStart\n                                = this.shapeList[i].style.xEnd\n                                = this.subPixelOptimize(\n                                    zeroX, this.shapeList[i].stylelineWidth\n                                );\n                            this.zr.modShape(this.shapeList[i].id);\n                        }\n                        else if (this.shapeList[i]._axisShape === 'axisTick') {\n                            tickLength = this.shapeList[i].style.xEnd\n                                         - this.shapeList[i].style.xStart;\n                            this.shapeList[i].style.xStart = zeroX;\n                            this.shapeList[i].style.xEnd = zeroX + tickLength;\n                            this.zr.modShape(this.shapeList[i].id);\n                        }\n                    }\n                }\n            },\n\n            getPosition: function () {\n                return this.option.position;\n            },\n\n            isHorizontal: function() {\n                return this.option.position === 'bottom' || this.option.position === 'top';\n            }\n        },\n        /**\n         * 参数修正&默认值赋值，重载基类方法\n         * @param {Object} opt 参数\n         */\n        reformOption: function (opt) {\n            // 不写或传了个空数值默认为数值轴\n            if (!opt || (opt instanceof Array && opt.length === 0)) {\n                opt = [ { type: ecConfig.COMPONENT_TYPE_AXIS_VALUE } ];\n            }\n            else if (!(opt instanceof Array)){\n                opt = [opt];\n            }\n\n            // 最多两条，其他参数忽略\n            if (opt.length > 2) {\n                opt = [opt[0], opt[1]];\n            }\n\n            if (this.axisType === 'xAxis') {\n                // 横轴位置默认配置\n                if (!opt[0].position            // 没配置或配置错\n                    || (opt[0].position != 'bottom' && opt[0].position != 'top')\n                ) {\n                    opt[0].position = 'bottom';\n                }\n                if (opt.length > 1) {\n                    opt[1].position = opt[0].position === 'bottom' ? 'top' : 'bottom';\n                }\n\n                for (var i = 0, l = opt.length; i < l; i++) {\n                    // 坐标轴类型，横轴默认为类目型'category'\n                    opt[i].type = opt[i].type || 'category';\n                    // 标识轴类型&索引\n                    opt[i].xAxisIndex = i;\n                    opt[i].yAxisIndex = -1;\n                }\n            }\n            else {\n                // 纵轴位置默认配置\n                if (!opt[0].position            // 没配置或配置错\n                    || (opt[0].position != 'left'  && opt[0].position != 'right')\n                ) {\n                    opt[0].position = 'left';\n                }\n\n                if (opt.length > 1) {\n                    opt[1].position = opt[0].position === 'left' ? 'right' : 'left';\n                }\n\n                for (var i = 0, l = opt.length; i < l; i++) {\n                    // 坐标轴类型，纵轴默认为数值型'value'\n                    opt[i].type = opt[i].type || 'value';\n                    // 标识轴类型&索引\n                    opt[i].xAxisIndex = -1;\n                    opt[i].yAxisIndex = i;\n                }\n            }\n\n            return opt;\n        },\n\n        /**\n         * 刷新\n         */\n        refresh: function (newOption) {\n            var axisOption;\n            if (newOption) {\n                this.option = newOption;\n                if (this.axisType === 'xAxis') {\n                    this.option.xAxis = this.reformOption(newOption.xAxis);\n                    axisOption = this.option.xAxis;\n                }\n                else {\n                    this.option.yAxis = this.reformOption(newOption.yAxis);\n                    axisOption = this.option.yAxis;\n                }\n                this.series = newOption.series;\n            }\n\n            var CategoryAxis = require('./categoryAxis');\n            var ValueAxis = require('./valueAxis');\n            var len = Math.max((axisOption && axisOption.length || 0), this._axisList.length);\n            for (var i = 0; i < len; i++) {\n                if (this._axisList[i]   // 已有实例\n                    && newOption        // 非空刷新\n                    && (!axisOption[i] || this._axisList[i].type != axisOption[i].type) // 类型不匹配\n                ) {\n                    this._axisList[i].dispose && this._axisList[i].dispose();\n                    this._axisList[i] = false;\n                }\n\n                if (this._axisList[i]) {\n                    this._axisList[i].refresh && this._axisList[i].refresh(\n                        axisOption ? axisOption[i] : false,\n                        this.series\n                    );\n                }\n                else if (axisOption && axisOption[i]) {\n                    this._axisList[i] = axisOption[i].type === 'category'\n                        ? new CategoryAxis(\n                               this.ecTheme, this.messageCenter, this.zr,\n                               axisOption[i], this.myChart, this.axisBase\n                           )\n                        : new ValueAxis(\n                               this.ecTheme, this.messageCenter, this.zr,\n                               axisOption[i], this.myChart, this.axisBase,\n                               this.series\n                        );\n                }\n            }\n        },\n\n        /**\n         * 根据值换算位置\n         * @param {number} idx 坐标轴索引0~1\n         */\n        getAxis: function (idx) {\n            return this._axisList[idx];\n        },\n\n        getAxisCount: function () {\n            return this._axisList.length;\n        },\n\n        clear: function () {\n            for (var i = 0, l = this._axisList.length; i < l; i++) {\n                this._axisList[i].dispose && this._axisList[i].dispose();\n            }\n            this._axisList = [];\n        }\n    };\n\n    zrUtil.inherits(Axis, Base);\n\n    require('../component').define('axis', Axis);\n\n    return Axis;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/axis.js\n ** module id = 87\n ** module chunks = 0\n **/","/**\r\n * echarts组件： 类目轴\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var TextShape = require('zrender/shape/Text');\r\n    var LineShape = require('zrender/shape/Line');\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n    \r\n    var ecConfig = require('../config');\r\n    // 类目轴\r\n    ecConfig.categoryAxis =  {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 0,                       // 二级层叠\r\n        show: true,\r\n        position: 'bottom',    // 位置\r\n        name: '',              // 坐标轴名字，默认为空\r\n        nameLocation: 'end',   // 坐标轴名字位置，支持'start' | 'end'\r\n        nameTextStyle: {},     // 坐标轴文字样式，默认取全局样式\r\n        boundaryGap: true,     // 类目起始和结束两端空白策略\r\n        axisLine: {            // 坐标轴线\r\n            show: true,        // 默认显示，属性show控制显示与否\r\n            onZero: true,\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#48b',\r\n                width: 2,\r\n                type: 'solid'\r\n            }\r\n        },\r\n        axisTick: {            // 坐标轴小标记\r\n            show: true,        // 属性show控制显示与否，默认不显示\r\n            interval: 'auto',\r\n            inside: false,    // 控制小标记是否在grid里 \r\n            // onGap: null,\r\n            length :5,         // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#333',\r\n                width: 1\r\n            }\r\n        },\r\n        axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel\r\n            show: true,\r\n            interval: 'auto',\r\n            rotate: 0,\r\n            margin: 8,\r\n            // clickable: false,\r\n            // formatter: null,\r\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: '#333'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            show: true,        // 默认显示，属性show控制显示与否\r\n            // onGap: null,\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#ccc'],\r\n                width: 1,\r\n                type: 'solid'\r\n            }\r\n        },\r\n        splitArea: {           // 分隔区域\r\n            show: false,       // 默认不显示，属性show控制显示与否\r\n            // onGap: null,\r\n            areaStyle: {       // 属性areaStyle（详见areaStyle）控制区域样式\r\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\r\n            }\r\n        }\r\n    };\r\n\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrArea = require('zrender/tool/area');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 类目轴参数\r\n     * @param {Grid} component 组件\r\n     */\r\n    function CategoryAxis(ecTheme, messageCenter, zr, option, myChart, axisBase) {\r\n        if (option.data.length < 1) {\r\n            console.error('option.data.length < 1.');\r\n            return;\r\n        }\r\n        \r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.grid = this.component.grid;\r\n        \r\n        for (var method in axisBase) {\r\n            this[method] = axisBase[method];\r\n        }\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    CategoryAxis.prototype = {\r\n        type : ecConfig.COMPONENT_TYPE_AXIS_CATEGORY,\r\n        _getReformedLabel : function (idx) {\r\n            var data = this.getDataFromOption(this.option.data[idx]);\r\n            var formatter = this.option.data[idx].formatter \r\n                            || this.option.axisLabel.formatter;\r\n            if (formatter) {\r\n                if (typeof formatter == 'function') {\r\n                    data = formatter.call(this.myChart, data);\r\n                }\r\n                else if (typeof formatter == 'string') {\r\n                    data = formatter.replace('{value}', data);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        \r\n        /**\r\n         * 计算标签显示挑选间隔\r\n         */\r\n        _getInterval : function () {\r\n            var interval   = this.option.axisLabel.interval;\r\n            if (interval == 'auto') {\r\n                // 麻烦的自适应计算\r\n                var fontSize = this.option.axisLabel.textStyle.fontSize;\r\n                var data = this.option.data;\r\n                var dataLength = this.option.data.length;\r\n\r\n                if (this.isHorizontal()) {\r\n                    // 横向\r\n                    if (dataLength > 3) {\r\n                        var gap = this.getGap();\r\n                        var isEnough = false;\r\n                        var labelSpace;\r\n                        var labelSize;\r\n                        var step = Math.floor(0.5 / gap);\r\n                        step = step < 1 ? 1 : step;\r\n                        interval = Math.floor(15 / gap);\r\n                        while (!isEnough && interval < dataLength) {\r\n                            interval += step;\r\n                            isEnough = true;\r\n                            labelSpace = Math.floor(gap * interval); // 标签左右至少间隔为3px\r\n                            for (var i = Math.floor((dataLength - 1)/ interval) * interval; \r\n                                 i >= 0; i -= interval\r\n                             ) {\r\n                                if (this.option.axisLabel.rotate !== 0) {\r\n                                    // 有旋转\r\n                                    labelSize = fontSize;\r\n                                }\r\n                                else if (data[i].textStyle) {\r\n                                    labelSize = zrArea.getTextWidth(\r\n                                        this._getReformedLabel(i),\r\n                                        this.getFont(\r\n                                            zrUtil.merge(\r\n                                                data[i].textStyle,\r\n                                                this.option.axisLabel.textStyle\r\n                                           )\r\n                                        )\r\n                                    );\r\n                                }\r\n                                else {\r\n                                    /*\r\n                                    labelSize = zrArea.getTextWidth(\r\n                                        this._getReformedLabel(i),\r\n                                        font\r\n                                    );\r\n                                    */\r\n                                    // 不定义data级特殊文本样式，用fontSize优化getTextWidth\r\n                                    var label = this._getReformedLabel(i) + '';\r\n                                    var wLen = (label.match(/\\w/g) || '').length;\r\n                                    var oLen = label.length - wLen;\r\n                                    labelSize = wLen * fontSize * 2 / 3 + oLen * fontSize;\r\n                                }\r\n\r\n                                if (labelSpace < labelSize) {\r\n                                    // 放不下，中断循环让interval++\r\n                                    isEnough = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // 少于3个则全部显示\r\n                        interval = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    // 纵向\r\n                    if (dataLength > 3) {\r\n                        var gap = this.getGap();\r\n                        interval = Math.floor(11 / gap);\r\n                        // 标签上下至少间隔为3px\r\n                        while ((gap * interval - 6) < fontSize\r\n                                && interval < dataLength\r\n                        ) {\r\n                            interval++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // 少于3个则全部显示\r\n                        interval = 1;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // 用户自定义间隔，支持funtion\r\n                interval = typeof interval == 'function' ? 1 : (interval - 0 + 1);\r\n            }\r\n\r\n            return interval;\r\n        },\r\n        \r\n        /**\r\n         * 绘制图形\r\n         */\r\n        _buildShape : function () {\r\n            // 标签显示的挑选间隔\r\n            this._interval = this._getInterval();\r\n            if (!this.option.show) {\r\n                return;\r\n            }\r\n            this.option.splitArea.show && this._buildSplitArea();\r\n            this.option.splitLine.show && this._buildSplitLine();\r\n            this.option.axisLine.show && this._buildAxisLine();\r\n            this.option.axisTick.show && this._buildAxisTick();\r\n            this.option.axisLabel.show && this._buildAxisLabel();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        // 小标记\r\n        _buildAxisTick : function () {\r\n            var axShape;\r\n            var data       = this.option.data;\r\n            var dataLength = this.option.data.length;\r\n            var tickOption = this.option.axisTick;\r\n            var length     = tickOption.length;\r\n            var color      = tickOption.lineStyle.color;\r\n            var lineWidth  = tickOption.lineStyle.width;\r\n            var intervalFunction = typeof tickOption.interval == 'function'\r\n                                   ? tickOption.interval \r\n                                   : tickOption.interval == 'auto'\r\n                                     ? typeof this.option.axisLabel.interval == 'function'\r\n                                       ? this.option.axisLabel.interval : false\r\n                                     : false;\r\n            var interval   = intervalFunction\r\n                             ? 1\r\n                             : tickOption.interval == 'auto' \r\n                               ? this._interval\r\n                               : (tickOption.interval - 0 + 1);\r\n            var onGap      = tickOption.onGap;\r\n            var optGap     = onGap \r\n                             ? (this.getGap() / 2) \r\n                             : typeof onGap == 'undefined'\r\n                                   ? (this.option.boundaryGap ? (this.getGap() / 2) : 0)\r\n                                   : 0;\r\n            var startIndex = optGap > 0 ? -interval : 0;                       \r\n            if (this.isHorizontal()) {\r\n                // 横向\r\n                var yPosition = this.option.position == 'bottom'\r\n                        ? (tickOption.inside \r\n                           ? (this.grid.getYend() - length - 1) : (this.grid.getYend() + 1))\r\n                        : (tickOption.inside \r\n                           ? (this.grid.getY() + 1) : (this.grid.getY() - length - 1));\r\n                var x;\r\n                for (var i = startIndex; i < dataLength; i += interval) {\r\n                    if (intervalFunction && !intervalFunction(i, data[i])) {\r\n                        // 回调并且回调返回false则跳过渲染\r\n                        continue;\r\n                    }\r\n                    // 亚像素优化\r\n                    x = this.subPixelOptimize(\r\n                        this.getCoordByIndex(i) + (i >= 0 ? optGap : 0), lineWidth\r\n                    );\r\n                    axShape = {\r\n                        _axisShape : 'axisTick',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable : false,\r\n                        style : {\r\n                            xStart : x,\r\n                            yStart : yPosition,\r\n                            xEnd : x,\r\n                            yEnd : yPosition + length,\r\n                            strokeColor : color,\r\n                            lineWidth : lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n            }\r\n            else {\r\n                // 纵向\r\n                var xPosition = this.option.position == 'left'\r\n                    ? (tickOption.inside \r\n                       ? (this.grid.getX() + 1) : (this.grid.getX() - length - 1))\r\n                    : (tickOption.inside \r\n                       ? (this.grid.getXend() - length - 1) : (this.grid.getXend() + 1));\r\n                        \r\n                var y;\r\n                for (var i = startIndex; i < dataLength; i += interval) {\r\n                    if (intervalFunction && !intervalFunction(i, data[i])) {\r\n                        // 回调并且回调返回false则中断渲染\r\n                        continue;\r\n                    }\r\n                    // 亚像素优化\r\n                    y = this.subPixelOptimize(\r\n                        this.getCoordByIndex(i) - (i >= 0 ? optGap : 0), lineWidth\r\n                    );\r\n                    axShape = {\r\n                        _axisShape : 'axisTick',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable : false,\r\n                        style : {\r\n                            xStart : xPosition,\r\n                            yStart : y,\r\n                            xEnd : xPosition + length,\r\n                            yEnd : y,\r\n                            strokeColor : color,\r\n                            lineWidth : lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n            }\r\n        },\r\n\r\n        // 坐标轴文本\r\n        _buildAxisLabel : function () {\r\n            var axShape;\r\n            var data       = this.option.data;\r\n            var dataLength = this.option.data.length;\r\n            var labelOption = this.option.axisLabel;\r\n            var rotate     = labelOption.rotate;\r\n            var margin     = labelOption.margin;\r\n            var clickable  = labelOption.clickable;\r\n            var textStyle  = labelOption.textStyle;\r\n            var intervalFunction = typeof labelOption.interval == 'function'\r\n                                   ? labelOption.interval : false;\r\n            var dataTextStyle;\r\n\r\n            if (this.isHorizontal()) {\r\n                // 横向\r\n                var yPosition;\r\n                var baseLine;\r\n                if (this.option.position == 'bottom') {\r\n                    yPosition = this.grid.getYend() + margin;\r\n                    baseLine = 'top';\r\n                }\r\n                else {\r\n                    yPosition = this.grid.getY() - margin;\r\n                    baseLine = 'bottom';\r\n                }\r\n\r\n                for (var i = 0; i < dataLength; i += this._interval) {\r\n                    if ((intervalFunction && !intervalFunction(i, data[i])) \r\n                        // 回调并且回调返回false则中断渲染\r\n                        || this._getReformedLabel(i) === '' // 空文本优化\r\n                    ) {\r\n                        continue;\r\n                    }\r\n                    dataTextStyle = zrUtil.merge(\r\n                        data[i].textStyle || {},\r\n                        textStyle\r\n                    );\r\n                    axShape = {\r\n                        // shape : 'text',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase() + 3,\r\n                        hoverable : false,\r\n                        style : {\r\n                            x : this.getCoordByIndex(i),\r\n                            y : yPosition,\r\n                            color : dataTextStyle.color,\r\n                            text : this._getReformedLabel(i),\r\n                            textFont : this.getFont(dataTextStyle),\r\n                            textAlign : dataTextStyle.align || 'center',\r\n                            textBaseline : dataTextStyle.baseline || baseLine\r\n                        }\r\n                    };\r\n                    if (rotate) {\r\n                        axShape.style.textAlign = rotate > 0\r\n                                                  ? (this.option.position == 'bottom'\r\n                                                    ? 'right' : 'left')\r\n                                                  : (this.option.position == 'bottom'\r\n                                                    ? 'left' : 'right');\r\n                        axShape.rotation = [\r\n                            rotate * Math.PI / 180,\r\n                            axShape.style.x,\r\n                            axShape.style.y\r\n                        ];\r\n                    }\r\n                    this.shapeList.push(new TextShape(\r\n                        this._axisLabelClickable(clickable, axShape)\r\n                    ));\r\n                }\r\n            }\r\n            else {\r\n                // 纵向\r\n                var xPosition;\r\n                var align;\r\n                if (this.option.position == 'left') {\r\n                    xPosition = this.grid.getX() - margin;\r\n                    align = 'right';\r\n                }\r\n                else {\r\n                    xPosition = this.grid.getXend() + margin;\r\n                    align = 'left';\r\n                }\r\n\r\n                for (var i = 0; i < dataLength; i += this._interval) {\r\n                    if ((intervalFunction && !intervalFunction(i, data[i])) \r\n                        // 回调并且回调返回false则中断渲染\r\n                        || this._getReformedLabel(i) === '' // 空文本优化\r\n                    ) {\r\n                        continue;\r\n                    }\r\n                    dataTextStyle = zrUtil.merge(\r\n                        data[i].textStyle || {},\r\n                        textStyle\r\n                    );\r\n                    axShape = {\r\n                        // shape : 'text',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase() + 3,\r\n                        hoverable : false,\r\n                        style : {\r\n                            x : xPosition,\r\n                            y : this.getCoordByIndex(i),\r\n                            color : dataTextStyle.color,\r\n                            text : this._getReformedLabel(i),\r\n                            textFont : this.getFont(dataTextStyle),\r\n                            textAlign : dataTextStyle.align || align,\r\n                            textBaseline : dataTextStyle.baseline \r\n                                           || (i === 0 && this.option.name !== '')\r\n                                               ? 'bottom'\r\n                                               : (i == (dataLength - 1) \r\n                                                  && this.option.name !== '')\r\n                                                 ? 'top'\r\n                                                 : 'middle'\r\n                        }\r\n                    };\r\n                    \r\n                    if (rotate) {\r\n                        axShape.rotation = [\r\n                            rotate * Math.PI / 180,\r\n                            axShape.style.x,\r\n                            axShape.style.y\r\n                        ];\r\n                    }\r\n                    this.shapeList.push(new TextShape(\r\n                        this._axisLabelClickable(clickable, axShape)\r\n                    ));\r\n                }\r\n            }\r\n        },\r\n        \r\n        _buildSplitLine : function () {\r\n            var axShape;\r\n            var data        = this.option.data;\r\n            var dataLength  = this.option.data.length;\r\n            var sLineOption = this.option.splitLine;\r\n            var lineType    = sLineOption.lineStyle.type;\r\n            var lineWidth   = sLineOption.lineStyle.width;\r\n            var color       = sLineOption.lineStyle.color;\r\n            color = color instanceof Array ? color : [color];\r\n            var colorLength = color.length;\r\n            \r\n            // splitLine随axisLable\r\n            var intervalFunction = typeof this.option.axisLabel.interval == 'function'\r\n                                   ? this.option.axisLabel.interval : false;\r\n\r\n            var onGap      = sLineOption.onGap;\r\n            var optGap     = onGap \r\n                             ? (this.getGap() / 2) \r\n                             : typeof onGap == 'undefined'\r\n                                   ? (this.option.boundaryGap ? (this.getGap() / 2) : 0)\r\n                                   : 0;\r\n            dataLength -= (onGap || (typeof onGap == 'undefined' && this.option.boundaryGap)) \r\n                          ? 1 : 0;\r\n            if (this.isHorizontal()) {\r\n                // 横向\r\n                var sy = this.grid.getY();\r\n                var ey = this.grid.getYend();\r\n                var x;\r\n\r\n                for (var i = 0; i < dataLength; i += this._interval) {\r\n                    if (intervalFunction && !intervalFunction(i, data[i])) {\r\n                        // 回调并且回调返回false则跳过渲染\r\n                        continue;\r\n                    }\r\n                    // 亚像素优化\r\n                    x = this.subPixelOptimize(\r\n                        this.getCoordByIndex(i) + optGap, lineWidth\r\n                    );\r\n                    axShape = {\r\n                        // shape : 'line',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable : false,\r\n                        style : {\r\n                            xStart : x,\r\n                            yStart : sy,\r\n                            xEnd : x,\r\n                            yEnd : ey,\r\n                            strokeColor : color[(i / this._interval) % colorLength],\r\n                            lineType : lineType,\r\n                            lineWidth : lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n\r\n            }\r\n            else {\r\n                // 纵向\r\n                var sx = this.grid.getX();\r\n                var ex = this.grid.getXend();\r\n                var y;\r\n\r\n                for (var i = 0; i < dataLength; i += this._interval) {\r\n                    if (intervalFunction && !intervalFunction(i, data[i])) {\r\n                        // 回调并且回调返回false则跳过渲染\r\n                        continue;\r\n                    }\r\n                    // 亚像素优化\r\n                    y = this.subPixelOptimize(\r\n                        this.getCoordByIndex(i) - optGap, lineWidth\r\n                    );\r\n                    axShape = {\r\n                        // shape : 'line',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable : false,\r\n                        style : {\r\n                            xStart : sx,\r\n                            yStart : y,\r\n                            xEnd : ex,\r\n                            yEnd : y,\r\n                            strokeColor : color[(i / this._interval) % colorLength],\r\n                            lineType : lineType,\r\n                            lineWidth : lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildSplitArea : function () {\r\n            var axShape;\r\n            var data        = this.option.data;\r\n            var sAreaOption = this.option.splitArea;\r\n            var color = sAreaOption.areaStyle.color;\r\n            if (!(color instanceof Array)) {\r\n                // 非数组一律认为是单一颜色的字符串，单一颜色则用一个背景，颜色错误不负责啊！！！\r\n                axShape = {\r\n                    // shape : 'rectangle',\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    hoverable : false,\r\n                    style : {\r\n                        x : this.grid.getX(),\r\n                        y : this.grid.getY(),\r\n                        width : this.grid.getWidth(),\r\n                        height : this.grid.getHeight(),\r\n                        color : color\r\n                        // type : this.option.splitArea.areaStyle.type,\r\n                    }\r\n                };\r\n                this.shapeList.push(new RectangleShape(axShape));\r\n            }\r\n            else {\r\n                // 多颜色\r\n                var colorLength = color.length;\r\n                var dataLength  = this.option.data.length;\r\n\r\n                // splitArea随axisLable\r\n                var intervalFunction = typeof this.option.axisLabel.interval == 'function'\r\n                                       ? this.option.axisLabel.interval : false;\r\n        \r\n                var onGap      = sAreaOption.onGap;\r\n                var optGap     = onGap \r\n                                 ? (this.getGap() / 2) \r\n                                 : typeof onGap == 'undefined'\r\n                                       ? (this.option.boundaryGap ? (this.getGap() / 2) : 0)\r\n                                       : 0;\r\n                if (this.isHorizontal()) {\r\n                    // 横向\r\n                    var y = this.grid.getY();\r\n                    var height = this.grid.getHeight();\r\n                    var lastX = this.grid.getX();\r\n                    var curX;\r\n    \r\n                    for (var i = 0; i <= dataLength; i += this._interval) {\r\n                        if (intervalFunction && !intervalFunction(i, data[i]) && i < dataLength) {\r\n                            // 回调并且回调返回false则跳过渲染\r\n                            continue;\r\n                        }\r\n                        curX = i < dataLength\r\n                               ? (this.getCoordByIndex(i) + optGap)\r\n                               : this.grid.getXend();\r\n                        axShape = {\r\n                            // shape : 'rectangle',\r\n                            zlevel: this.getZlevelBase(),\r\n                            z: this.getZBase(),\r\n                            hoverable : false,\r\n                            style : {\r\n                                x : lastX,\r\n                                y : y,\r\n                                width : curX - lastX,\r\n                                height : height,\r\n                                color : color[(i / this._interval) % colorLength]\r\n                                // type : this.option.splitArea.areaStyle.type,\r\n                            }\r\n                        };\r\n                        this.shapeList.push(new RectangleShape(axShape));\r\n                        lastX = curX;\r\n                    }\r\n                }\r\n                else {\r\n                    // 纵向\r\n                    var x = this.grid.getX();\r\n                    var width = this.grid.getWidth();\r\n                    var lastYend = this.grid.getYend();\r\n                    var curY;\r\n    \r\n                    for (var i = 0; i <= dataLength; i += this._interval) {\r\n                        if (intervalFunction && !intervalFunction(i, data[i]) && i < dataLength) {\r\n                            // 回调并且回调返回false则跳过渲染\r\n                            continue;\r\n                        }\r\n                        curY = i < dataLength\r\n                               ? (this.getCoordByIndex(i) - optGap)\r\n                               : this.grid.getY();\r\n                        axShape = {\r\n                            // shape : 'rectangle',\r\n                            zlevel: this.getZlevelBase(),\r\n                            z: this.getZBase(),\r\n                            hoverable : false,\r\n                            style : {\r\n                                x : x,\r\n                                y : curY,\r\n                                width : width,\r\n                                height : lastYend - curY,\r\n                                color : color[(i / this._interval) % colorLength]\r\n                                // type : this.option.splitArea.areaStyle.type\r\n                            }\r\n                        };\r\n                        this.shapeList.push(new RectangleShape(axShape));\r\n                        lastYend = curY;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh : function (newOption) {\r\n            if (newOption) {\r\n                this.option = this.reformOption(newOption);\r\n                // 通用字体设置\r\n                this.option.axisLabel.textStyle = this.getTextStyle(\r\n                    this.option.axisLabel.textStyle\r\n                );\r\n            }\r\n            this.clear();\r\n            this._buildShape();\r\n        },\r\n\r\n        /**\r\n         * 返回间隔\r\n         */\r\n        getGap : function () {\r\n            var dataLength = this.option.data.length;\r\n            var total = this.isHorizontal()\r\n                        ? this.grid.getWidth()\r\n                        : this.grid.getHeight();\r\n            if (this.option.boundaryGap) {              // 留空\r\n                return total / dataLength;\r\n            }\r\n            else {                                      // 顶头\r\n                return total / (dataLength > 1 ? (dataLength - 1) : 1);\r\n            }\r\n        },\r\n\r\n        // 根据值换算位置\r\n        getCoord : function (value) {\r\n            var data = this.option.data;\r\n            var dataLength = data.length;\r\n            var gap = this.getGap();\r\n            var position = this.option.boundaryGap ? (gap / 2) : 0;\r\n\r\n            for (var i = 0; i < dataLength; i++) {\r\n                if (this.getDataFromOption(data[i]) == value) {\r\n                    if (this.isHorizontal()) {\r\n                        // 横向\r\n                        position = this.grid.getX() + position;\r\n                    }\r\n                    else {\r\n                        // 纵向\r\n                        position = this.grid.getYend() - position;\r\n                    }\r\n                    \r\n                    return position;\r\n                    // Math.floor可能引起一些偏差，但性能会更好\r\n                    /* 准确更重要\r\n                    return (i === 0 || i == dataLength - 1)\r\n                           ? position\r\n                           : Math.floor(position);\r\n                    */\r\n                }\r\n                position += gap;\r\n            }\r\n        },\r\n\r\n        // 根据类目轴数据索引换算位置\r\n        getCoordByIndex : function (dataIndex) {\r\n            if (dataIndex < 0) {\r\n                if (this.isHorizontal()) {\r\n                    return this.grid.getX();\r\n                }\r\n                else {\r\n                    return this.grid.getYend();\r\n                }\r\n            }\r\n            else if (dataIndex > this.option.data.length - 1) {\r\n                if (this.isHorizontal()) {\r\n                    return this.grid.getXend();\r\n                }\r\n                else {\r\n                    return this.grid.getY();\r\n                }\r\n            }\r\n            else {\r\n                var gap = this.getGap();\r\n                var position = this.option.boundaryGap ? (gap / 2) : 0;\r\n                position += dataIndex * gap;\r\n                \r\n                if (this.isHorizontal()) {\r\n                    // 横向\r\n                    position = this.grid.getX() + position;\r\n                }\r\n                else {\r\n                    // 纵向\r\n                    position = this.grid.getYend() - position;\r\n                }\r\n                \r\n                return position;\r\n                /* 准确更重要\r\n                return (dataIndex === 0 || dataIndex == this.option.data.length - 1)\r\n                       ? position\r\n                       : Math.floor(position);\r\n                */\r\n            }\r\n        },\r\n\r\n        // 根据类目轴数据索引换算类目轴名称\r\n        getNameByIndex : function (dataIndex) {\r\n            return this.getDataFromOption(this.option.data[dataIndex]);\r\n        },\r\n        \r\n        // 根据类目轴名称换算类目轴数据索引\r\n        getIndexByName : function (name) {\r\n            var data = this.option.data;\r\n            var dataLength = data.length;\r\n\r\n            for (var i = 0; i < dataLength; i++) {\r\n                if (this.getDataFromOption(data[i]) == name) {\r\n                    return i;\r\n                }\r\n            }\r\n            \r\n            return -1;\r\n        },\r\n        \r\n        // 根据位置换算值\r\n        getValueFromCoord : function() {\r\n            return '';\r\n        },\r\n\r\n        /**\r\n         * 根据类目轴数据索引返回是否为主轴线\r\n         * @param {number} dataIndex 类目轴数据索引\r\n         * @return {boolean} 是否为主轴\r\n         */\r\n        isMainAxis : function (dataIndex) {\r\n            return dataIndex % this._interval === 0;\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(CategoryAxis, Base);\r\n    \r\n    require('../component').define('categoryAxis', CategoryAxis);\r\n    \r\n    return CategoryAxis;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/categoryAxis.js\n ** module id = 88\n ** module chunks = 0\n **/","/**\r\n * echarts组件： 数值轴\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n\r\n    // 图形依赖\r\n    var TextShape = require('zrender/shape/Text');\r\n    var LineShape = require('zrender/shape/Line');\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n\r\n    var ecConfig = require('../config');\r\n    // 数值型坐标轴默认参数\r\n    ecConfig.valueAxis = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 0,                       // 二级层叠\r\n        show: true,\r\n        position: 'left',      // 位置\r\n        name: '',              // 坐标轴名字，默认为空\r\n        nameLocation: 'end',   // 坐标轴名字位置，支持'start' | 'end'\r\n        nameTextStyle: {},     // 坐标轴文字样式，默认取全局样式\r\n        boundaryGap: [0, 0],   // 数值起始和结束两端空白策略\r\n        // min: null,          // 最小值\r\n        // max: null,          // 最大值\r\n        // scale: false,       // 脱离0值比例，放大聚焦到最终_min，_max区间\r\n        // splitNumber: 5,        // 分割段数，默认为5\r\n        axisLine: {            // 坐标轴线\r\n            show: true,        // 默认显示，属性show控制显示与否\r\n            onZero: true,\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#48b',\r\n                width: 2,\r\n                type: 'solid'\r\n            }\r\n        },\r\n        axisTick: {            // 坐标轴小标记\r\n            show: false,       // 属性show控制显示与否，默认不显示\r\n            inside: false,     // 控制小标记是否在grid里\r\n            length :5,         // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#333',\r\n                width: 1\r\n            }\r\n        },\r\n        axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel\r\n            show: true,\r\n            rotate: 0,\r\n            margin: 8,\r\n            // clickable: false,\r\n            // formatter: null,\r\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: '#333'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            show: true,        // 默认显示，属性show控制显示与否\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#ccc'],\r\n                width: 1,\r\n                type: 'solid'\r\n            }\r\n        },\r\n        splitArea: {           // 分隔区域\r\n            show: false,       // 默认不显示，属性show控制显示与否\r\n            areaStyle: {       // 属性areaStyle（详见areaStyle）控制区域样式\r\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\r\n            }\r\n        }\r\n    };\r\n\r\n    var ecDate = require('../util/date');\r\n    var zrUtil = require('zrender/tool/util');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 类目轴参数\r\n     * @param {Object} component 组件\r\n     * @param {Array} series 数据对象\r\n     */\r\n    function ValueAxis(ecTheme, messageCenter, zr, option, myChart, axisBase, series) {\r\n        if (!series || series.length === 0) {\r\n            console.err('option.series.length == 0.');\r\n            return;\r\n        }\r\n\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.series = series;\r\n        this.grid = this.component.grid;\r\n\r\n        for (var method in axisBase) {\r\n            this[method] = axisBase[method];\r\n        }\r\n\r\n        this.refresh(option, series);\r\n    }\r\n\r\n    ValueAxis.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_AXIS_VALUE,\r\n\r\n        _buildShape: function () {\r\n            this._hasData = false;\r\n            this._calculateValue();\r\n            if (!this._hasData || !this.option.show) {\r\n                return;\r\n            }\r\n\r\n            this.option.splitArea.show && this._buildSplitArea();\r\n            this.option.splitLine.show && this._buildSplitLine();\r\n            this.option.axisLine.show && this._buildAxisLine();\r\n            this.option.axisTick.show && this._buildAxisTick();\r\n            this.option.axisLabel.show && this._buildAxisLabel();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        // 小标记\r\n        _buildAxisTick: function () {\r\n            var axShape;\r\n            var data       = this._valueList;\r\n            var dataLength = this._valueList.length;\r\n            var tickOption = this.option.axisTick;\r\n            var length     = tickOption.length;\r\n            var color      = tickOption.lineStyle.color;\r\n            var lineWidth  = tickOption.lineStyle.width;\r\n\r\n            if (this.isHorizontal()) {\r\n                // 横向\r\n                var yPosition = this.option.position === 'bottom'\r\n                        ? (tickOption.inside\r\n                           ? (this.grid.getYend() - length - 1) : (this.grid.getYend()) + 1)\r\n                        : (tickOption.inside\r\n                           ? (this.grid.getY() + 1) : (this.grid.getY() - length - 1));\r\n                var x;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    // 亚像素优化\r\n                    x = this.subPixelOptimize(this.getCoord(data[i]), lineWidth);\r\n                    axShape = {\r\n                        _axisShape: 'axisTick',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable: false,\r\n                        style: {\r\n                            xStart: x,\r\n                            yStart: yPosition,\r\n                            xEnd: x,\r\n                            yEnd: yPosition + length,\r\n                            strokeColor: color,\r\n                            lineWidth: lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n            }\r\n            else {\r\n                // 纵向\r\n                var xPosition = this.option.position === 'left'\r\n                    ? (tickOption.inside\r\n                       ? (this.grid.getX() + 1) : (this.grid.getX() - length - 1))\r\n                    : (tickOption.inside\r\n                       ? (this.grid.getXend() - length - 1) : (this.grid.getXend() + 1));\r\n\r\n                var y;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    // 亚像素优化\r\n                    y = this.subPixelOptimize(this.getCoord(data[i]), lineWidth);\r\n                    axShape = {\r\n                        _axisShape: 'axisTick',\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable: false,\r\n                        style: {\r\n                            xStart: xPosition,\r\n                            yStart: y,\r\n                            xEnd: xPosition + length,\r\n                            yEnd: y,\r\n                            strokeColor: color,\r\n                            lineWidth: lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n            }\r\n        },\r\n\r\n        // 坐标轴文本\r\n        _buildAxisLabel: function () {\r\n            var axShape;\r\n            var data       = this._valueList;\r\n            var dataLength = this._valueList.length;\r\n            var rotate     = this.option.axisLabel.rotate;\r\n            var margin     = this.option.axisLabel.margin;\r\n            var clickable  = this.option.axisLabel.clickable;\r\n            var textStyle  = this.option.axisLabel.textStyle;\r\n\r\n            if (this.isHorizontal()) {\r\n                // 横向\r\n                var yPosition;\r\n                var baseLine;\r\n                if (this.option.position === 'bottom') {\r\n                    yPosition = this.grid.getYend() + margin;\r\n                    baseLine = 'top';\r\n                }\r\n                else {\r\n                    yPosition = this.grid.getY() - margin;\r\n                    baseLine = 'bottom';\r\n                }\r\n\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    axShape = {\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase() +3,\r\n                        hoverable: false,\r\n                        style: {\r\n                            x: this.getCoord(data[i]),\r\n                            y: yPosition,\r\n                            color: typeof textStyle.color === 'function'\r\n                                   ? textStyle.color(data[i]) : textStyle.color,\r\n                            text: this._valueLabel[i],\r\n                            textFont: this.getFont(textStyle),\r\n                            textAlign: textStyle.align || 'center',\r\n                            textBaseline: textStyle.baseline || baseLine\r\n                        }\r\n                    };\r\n                    if (rotate) {\r\n                        axShape.style.textAlign = rotate > 0\r\n                                                  ? (this.option.position === 'bottom'\r\n                                                    ? 'right' : 'left')\r\n                                                  : (this.option.position === 'bottom'\r\n                                                    ? 'left' : 'right');\r\n                        axShape.rotation = [\r\n                            rotate * Math.PI / 180,\r\n                            axShape.style.x,\r\n                            axShape.style.y\r\n                        ];\r\n                    }\r\n                    this.shapeList.push(new TextShape(\r\n                        this._axisLabelClickable(clickable, axShape)\r\n                    ));\r\n                }\r\n            }\r\n            else {\r\n                // 纵向\r\n                var xPosition;\r\n                var align;\r\n                if (this.option.position === 'left') {\r\n                    xPosition = this.grid.getX() - margin;\r\n                    align = 'right';\r\n                }\r\n                else {\r\n                    xPosition = this.grid.getXend() + margin;\r\n                    align = 'left';\r\n                }\r\n\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    axShape = {\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase() + 3,\r\n                        hoverable: false,\r\n                        style: {\r\n                            x: xPosition,\r\n                            y: this.getCoord(data[i]),\r\n                            color: typeof textStyle.color === 'function'\r\n                                   ? textStyle.color(data[i]) : textStyle.color,\r\n                            text: this._valueLabel[i],\r\n                            textFont: this.getFont(textStyle),\r\n                            textAlign: textStyle.align || align,\r\n                            textBaseline: textStyle.baseline\r\n                                          || (\r\n                                              (i === 0 && this.option.name !== '')\r\n                                              ? 'bottom'\r\n                                                : (i === dataLength - 1 && this.option.name !== '') ? 'top' : 'middle'\r\n                                          )\r\n                        }\r\n                    };\r\n\r\n                    if (rotate) {\r\n                        axShape.rotation = [\r\n                            rotate * Math.PI / 180,\r\n                            axShape.style.x,\r\n                            axShape.style.y\r\n                        ];\r\n                    }\r\n                    this.shapeList.push(new TextShape(\r\n                        this._axisLabelClickable(clickable, axShape)\r\n                    ));\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildSplitLine: function () {\r\n            var axShape;\r\n            var data        = this._valueList;\r\n            var dataLength  = this._valueList.length;\r\n            var sLineOption = this.option.splitLine;\r\n            var lineType    = sLineOption.lineStyle.type;\r\n            var lineWidth   = sLineOption.lineStyle.width;\r\n            var color       = sLineOption.lineStyle.color;\r\n            color = color instanceof Array ? color : [color];\r\n            var colorLength = color.length;\r\n\r\n            if (this.isHorizontal()) {\r\n                // 横向\r\n                var sy = this.grid.getY();\r\n                var ey = this.grid.getYend();\r\n                var x;\r\n\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    // 亚像素优化\r\n                    x = this.subPixelOptimize(this.getCoord(data[i]), lineWidth);\r\n                    axShape = {\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable: false,\r\n                        style: {\r\n                            xStart: x,\r\n                            yStart: sy,\r\n                            xEnd: x,\r\n                            yEnd: ey,\r\n                            strokeColor: color[i % colorLength],\r\n                            lineType: lineType,\r\n                            lineWidth: lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n\r\n            }\r\n            else {\r\n                // 纵向\r\n                var sx = this.grid.getX();\r\n                var ex = this.grid.getXend();\r\n                var y;\r\n\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    // 亚像素优化\r\n                    y = this.subPixelOptimize(this.getCoord(data[i]), lineWidth);\r\n                    axShape = {\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        hoverable: false,\r\n                        style: {\r\n                            xStart: sx,\r\n                            yStart: y,\r\n                            xEnd: ex,\r\n                            yEnd: y,\r\n                            strokeColor: color[i % colorLength],\r\n                            lineType: lineType,\r\n                            lineWidth: lineWidth\r\n                        }\r\n                    };\r\n                    this.shapeList.push(new LineShape(axShape));\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildSplitArea: function () {\r\n            var axShape;\r\n            var color = this.option.splitArea.areaStyle.color;\r\n\r\n            if (!(color instanceof Array)) {\r\n                // 非数组一律认为是单一颜色的字符串，单一颜色则用一个背景，颜色错误不负责啊！！！\r\n                axShape = {\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    hoverable: false,\r\n                    style: {\r\n                        x: this.grid.getX(),\r\n                        y: this.grid.getY(),\r\n                        width: this.grid.getWidth(),\r\n                        height: this.grid.getHeight(),\r\n                        color: color\r\n                        // type: this.option.splitArea.areaStyle.type,\r\n                    }\r\n                };\r\n                this.shapeList.push(new RectangleShape(axShape));\r\n            }\r\n            else {\r\n                // 多颜色\r\n                var colorLength = color.length;\r\n                var data        = this._valueList;\r\n                var dataLength  = this._valueList.length;\r\n\r\n                if (this.isHorizontal()) {\r\n                    // 横向\r\n                    var y = this.grid.getY();\r\n                    var height = this.grid.getHeight();\r\n                    var lastX = this.grid.getX();\r\n                    var curX;\r\n\r\n                    for (var i = 0; i <= dataLength; i++) {\r\n                        curX = i < dataLength\r\n                               ? this.getCoord(data[i])\r\n                               : this.grid.getXend();\r\n                        axShape = {\r\n                            zlevel: this.getZlevelBase(),\r\n                            z: this.getZBase(),\r\n                            hoverable: false,\r\n                            style: {\r\n                                x: lastX,\r\n                                y: y,\r\n                                width: curX - lastX,\r\n                                height: height,\r\n                                color: color[i % colorLength]\r\n                                // type: this.option.splitArea.areaStyle.type,\r\n                            }\r\n                        };\r\n                        this.shapeList.push(new RectangleShape(axShape));\r\n                        lastX = curX;\r\n                    }\r\n                }\r\n                else {\r\n                    // 纵向\r\n                    var x = this.grid.getX();\r\n                    var width = this.grid.getWidth();\r\n                    var lastYend = this.grid.getYend();\r\n                    var curY;\r\n\r\n                    for (var i = 0; i <= dataLength; i++) {\r\n                        curY = i < dataLength\r\n                               ? this.getCoord(data[i])\r\n                               : this.grid.getY();\r\n                        axShape = {\r\n                            zlevel: this.getZlevelBase(),\r\n                            z: this.getZBase(),\r\n                            hoverable: false,\r\n                            style: {\r\n                                x: x,\r\n                                y: curY,\r\n                                width: width,\r\n                                height: lastYend - curY,\r\n                                color: color[i % colorLength]\r\n                                // type: this.option.splitArea.areaStyle.type\r\n                            }\r\n                        };\r\n                        this.shapeList.push(new RectangleShape(axShape));\r\n                        lastYend = curY;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 极值计算\r\n         */\r\n        _calculateValue: function () {\r\n            if (isNaN(this.option.min - 0) || isNaN(this.option.max - 0)) {\r\n                // 有一个没指定都得算\r\n                // 数据整形\r\n                var data = {};          // 整形后数据抽取\r\n                var xIdx;\r\n                var yIdx;\r\n                var legend = this.component.legend;\r\n                for (var i = 0, l = this.series.length; i < l; i++) {\r\n                    if (this.series[i].type != ecConfig.CHART_TYPE_LINE\r\n                        && this.series[i].type != ecConfig.CHART_TYPE_BAR\r\n                        && this.series[i].type != ecConfig.CHART_TYPE_SCATTER\r\n                        && this.series[i].type != ecConfig.CHART_TYPE_K\r\n                        && this.series[i].type != ecConfig.CHART_TYPE_EVENTRIVER\r\n                    ) {\r\n                        // 非坐标轴支持的不算极值\r\n                        continue;\r\n                    }\r\n                    // 请允许我写开，跟上面一个不是一样东西\r\n                    if (legend && !legend.isSelected(this.series[i].name)){\r\n                        continue;\r\n                    }\r\n\r\n                    // 不指定默认为第一轴线\r\n                    xIdx = this.series[i].xAxisIndex || 0;\r\n                    yIdx = this.series[i].yAxisIndex || 0;\r\n                    if ((this.option.xAxisIndex != xIdx)\r\n                        && (this.option.yAxisIndex != yIdx)\r\n                    ) {\r\n                        // 不是自己的数据不计算极值\r\n                        continue;\r\n                    }\r\n\r\n                    this._calculSum(data, i);\r\n                }\r\n\r\n                // 找极值\r\n                var oriData;            // 原始数据\r\n                for (var i in data){\r\n                    oriData = data[i];\r\n                    for (var j = 0, k = oriData.length; j < k; j++) {\r\n                        if (!isNaN(oriData[j])){\r\n                            this._hasData = true;\r\n                            this._min = oriData[j];\r\n                            this._max = oriData[j];\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (this._hasData) {\r\n                        break;\r\n                    }\r\n                }\r\n                for (var i in data){\r\n                    oriData = data[i];\r\n                    for (var j = 0, k = oriData.length; j < k; j++) {\r\n                        if (!isNaN(oriData[j])){\r\n                            this._min = Math.min(this._min, oriData[j]);\r\n                            this._max = Math.max(this._max, oriData[j]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // console.log(this._min,this._max,'vvvvv111111',this.option.type)\r\n                // log情况暂时禁用boundaryGap。\r\n                var boundaryGap = this.option.type !== 'log' ? this.option.boundaryGap : [0, 0];\r\n                var gap = Math.abs(this._max - this._min);\r\n                this._min = isNaN(this.option.min - 0)\r\n                       ? (this._min - Math.abs(gap * boundaryGap[0]))\r\n                       : (this.option.min - 0);    // 指定min忽略boundaryGay[0]\r\n\r\n                this._max = isNaN(this.option.max - 0)\r\n                       ? (this._max + Math.abs(gap * boundaryGap[1]))\r\n                       : (this.option.max - 0);    // 指定max忽略boundaryGay[1]\r\n                if (this._min === this._max) {\r\n                    if (this._max === 0) {\r\n                        // 修复全0数据\r\n                        this._max = 1;\r\n                    }\r\n                    // 修复最大值==最小值时数据整形\r\n                    else if (this._max > 0) {\r\n                        this._min = this._max / this.option.splitNumber != null ? this.option.splitNumber : 5;\r\n                    }\r\n                    else { // this._max < 0\r\n                        this._max = this._max / this.option.splitNumber != null ? this.option.splitNumber : 5;\r\n                    }\r\n                }\r\n\r\n                if (this.option.type === 'time') {\r\n                    this._reformTimeValue();\r\n                }\r\n                else if (this.option.type === 'log') {\r\n                    this._reformLogValue();\r\n                }\r\n                else {\r\n                    this._reformValue(this.option.scale);\r\n                }\r\n            }\r\n            else {\r\n                this._hasData = true;\r\n                // 用户指定min max就不多管闲事了\r\n                this._min = this.option.min - 0;    // 指定min忽略boundaryGay[0]\r\n                this._max = this.option.max - 0;    // 指定max忽略boundaryGay[1]\r\n\r\n                if (this.option.type === 'time') {\r\n                    this._reformTimeValue();\r\n                }\r\n                else if (this.option.type === 'log') {\r\n                    this._reformLogValue();\r\n                }\r\n                else {\r\n                    this._customerValue();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 内部使用，计算某系列下的堆叠和\r\n         */\r\n        _calculSum: function (data, i) {\r\n            var key = this.series[i].name || 'kener';\r\n            var value;\r\n            var oriData;\r\n            if (!this.series[i].stack) {\r\n                data[key] = data[key] || [];\r\n                if (this.series[i].type != ecConfig.CHART_TYPE_EVENTRIVER) {\r\n                    oriData = this.series[i].data;\r\n                    for (var j = 0, k = oriData.length; j < k; j++) {\r\n                        value = this.getDataFromOption(oriData[j]);\r\n                        if (this.series[i].type === ecConfig.CHART_TYPE_K) {\r\n                            data[key].push(value[0]);\r\n                            data[key].push(value[1]);\r\n                            data[key].push(value[2]);\r\n                            data[key].push(value[3]);\r\n                        }\r\n                        else if (value instanceof Array) {\r\n                            // scatter 、 不等距 line bar\r\n                            if (this.option.xAxisIndex != -1) {\r\n                                data[key].push(\r\n                                    this.option.type != 'time'\r\n                                    ? value[0] : ecDate.getNewDate(value[0])\r\n                                );\r\n                            }\r\n                            if (this.option.yAxisIndex != -1) {\r\n                                data[key].push(\r\n                                    this.option.type != 'time'\r\n                                    ? value[1] : ecDate.getNewDate(value[1])\r\n                                );\r\n                            }\r\n                        }\r\n                        else {\r\n                            data[key].push(value);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // eventRiver\r\n                    oriData = this.series[i].data;\r\n                    for (var j = 0, k = oriData.length; j < k; j++) {\r\n                        var evolution = oriData[j].evolution;\r\n                        for (var m = 0, n = evolution.length; m < n; m++) {\r\n                            data[key].push(ecDate.getNewDate(evolution[m].time));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // 堆积数据，需要区分正负向堆积\r\n                var keyP = '__Magic_Key_Positive__' + this.series[i].stack;\r\n                var keyN = '__Magic_Key_Negative__' + this.series[i].stack;\r\n                data[keyP] = data[keyP] || [];\r\n                data[keyN] = data[keyN] || [];\r\n                data[key] = data[key] || [];  // scale下还需要记录每一个量\r\n                oriData = this.series[i].data;\r\n                for (var j = 0, k = oriData.length; j < k; j++) {\r\n                    value = this.getDataFromOption(oriData[j]);\r\n                    if (value === '-') {\r\n                        continue;\r\n                    }\r\n                    value = value - 0;\r\n                    if (value >= 0) {\r\n                        if (data[keyP][j] != null) {\r\n                            data[keyP][j] += value;\r\n                        }\r\n                        else {\r\n                            data[keyP][j] = value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (data[keyN][j] != null) {\r\n                            data[keyN][j] += value;\r\n                        }\r\n                        else {\r\n                            data[keyN][j] = value;\r\n                        }\r\n                    }\r\n                    if (this.option.scale) {\r\n                        data[key].push(value);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 找到原始数据的极值后根据选项整形最终 this._min / this._max / this._valueList\r\n         * 如果你不知道这个“整形”的用义，请不要试图去理解和修改这个方法！找我也没用，我相信我已经记不起来！\r\n         * 如果你有更简洁的数学推导欢迎重写，后果自负~\r\n         *\r\n         * by kener.linfeng@gmail.com 2013-1-8\r\n         * --------\r\n         * 感谢谢世威(https://github.com/i6ma)，终于有人改这个方法了\r\n         * by Kener 2014-11-6\r\n         */\r\n        _reformValue: function (scale) {\r\n            var smartSteps = require('../util/smartSteps');\r\n            var splitNumber = this.option.splitNumber;\r\n\r\n            // 非scale下双正，修正最小值为0\r\n            if (!scale && this._min >= 0 && this._max >= 0) {\r\n                this._min = 0;\r\n            }\r\n            // 非scale下双负，修正最大值为0\r\n            if (!scale && this._min <= 0 && this._max <= 0) {\r\n                this._max = 0;\r\n            }\r\n\r\n            var stepOpt = smartSteps(this._min, this._max, splitNumber);\r\n            splitNumber = splitNumber != null ? splitNumber : stepOpt.secs;\r\n            //this.option.splitNumber = splitNumber;\r\n            this._min = stepOpt.min;\r\n            this._max = stepOpt.max;\r\n            this._valueList = stepOpt.pnts;\r\n            this._reformLabelData();\r\n        },\r\n\r\n        /**\r\n         * 格式化时间值\r\n         */\r\n        _reformTimeValue : function() {\r\n            var splitNumber = this.option.splitNumber != null ? this.option.splitNumber : 5;\r\n\r\n            // 最优解\r\n            var curValue = ecDate.getAutoFormatter(this._min, this._max, splitNumber);\r\n            // 目标\r\n            var formatter = curValue.formatter;\r\n            var gapValue = curValue.gapValue;\r\n\r\n            this._valueList = [ecDate.getNewDate(this._min)];\r\n            var startGap;\r\n            switch (formatter) {\r\n                case 'week' :\r\n                    startGap = ecDate.nextMonday(this._min);\r\n                    break;\r\n                case 'month' :\r\n                    startGap = ecDate.nextNthOnMonth(this._min, 1);\r\n                    break;\r\n                case 'quarter' :\r\n                    startGap = ecDate.nextNthOnQuarterYear(this._min, 1);\r\n                    break;\r\n                case 'half-year' :\r\n                    startGap = ecDate.nextNthOnHalfYear(this._min, 1);\r\n                    break;\r\n                case 'year' :\r\n                    startGap = ecDate.nextNthOnYear(this._min, 1);\r\n                    break;\r\n                default :\r\n                    // 大于2小时需要考虑时区不能直接取整\r\n                    if (gapValue <= 3600000 * 2) {\r\n                        startGap = (Math.floor(this._min / gapValue) + 1) * gapValue;\r\n                    }\r\n                    else {\r\n                        startGap = ecDate.getNewDate(this._min - (-gapValue));\r\n                        startGap.setHours(Math.round(startGap.getHours() / 6) * 6);\r\n                        startGap.setMinutes(0);\r\n                        startGap.setSeconds(0);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (startGap - this._min < gapValue / 2) {\r\n                startGap -= -gapValue;\r\n            }\r\n\r\n            // console.log(startGap,gapValue,this._min, this._max,formatter)\r\n            curValue = ecDate.getNewDate(startGap);\r\n            splitNumber *= 1.5;\r\n            while (splitNumber-- >= 0) {\r\n                if (formatter == 'month'\r\n                    || formatter == 'quarter'\r\n                    || formatter == 'half-year'\r\n                    || formatter == 'year'\r\n                ) {\r\n                    curValue.setDate(1);\r\n                }\r\n                if (this._max - curValue < gapValue / 2) {\r\n                    break;\r\n                }\r\n                this._valueList.push(curValue);\r\n                curValue = ecDate.getNewDate(curValue - (-gapValue));\r\n            }\r\n            this._valueList.push(ecDate.getNewDate(this._max));\r\n\r\n            this._reformLabelData((function (formatterStr) {\r\n                return function (value) {\r\n                    return ecDate.format(formatterStr, value);\r\n                };\r\n            })(formatter));\r\n        },\r\n\r\n        _customerValue: function () {\r\n            var accMath = require('../util/accMath');\r\n            var splitNumber = this.option.splitNumber != null ? this.option.splitNumber : 5;\r\n            var splitGap = (this._max - this._min) / splitNumber;\r\n\r\n            this._valueList = [];\r\n            for (var i = 0; i <= splitNumber; i++) {\r\n                this._valueList.push(accMath.accAdd(this._min, accMath.accMul(splitGap, i)));\r\n            }\r\n            this._reformLabelData();\r\n        },\r\n\r\n        _reformLogValue: function() {\r\n            // log数轴本质就是缩放，相当于默认this.option.scale === true，所以不修正_min和_max到0。\r\n            var thisOption = this.option;\r\n            var result = require('../util/smartLogSteps')({\r\n                dataMin: this._min,\r\n                dataMax: this._max,\r\n                logPositive: thisOption.logPositive,\r\n                logLabelBase: thisOption.logLabelBase,\r\n                splitNumber: thisOption.splitNumber\r\n            });\r\n\r\n            this._min = result.dataMin;\r\n            this._max = result.dataMax;\r\n            this._valueList = result.tickList;\r\n            // {value2Coord: {Function}, coord2Value: {Function}}\r\n            this._dataMappingMethods = result.dataMappingMethods;\r\n\r\n            this._reformLabelData(result.labelFormatter);\r\n        },\r\n\r\n        _reformLabelData: function (innerFormatter) {\r\n            this._valueLabel = [];\r\n            var formatter = this.option.axisLabel.formatter;\r\n            if (formatter) {\r\n                for (var i = 0, l = this._valueList.length; i < l; i++) {\r\n                    if (typeof formatter === 'function') {\r\n                        this._valueLabel.push(\r\n                            innerFormatter\r\n                                ? formatter.call(this.myChart, this._valueList[i], innerFormatter)\r\n                                : formatter.call(this.myChart, this._valueList[i])\r\n                        );\r\n                    }\r\n                    else if (typeof formatter === 'string') {\r\n                        this._valueLabel.push(\r\n                            innerFormatter\r\n                                ? ecDate.format(formatter, this._valueList[i])\r\n                                : formatter.replace('{value}',this._valueList[i])\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0, l = this._valueList.length; i < l; i++) {\r\n                    this._valueLabel.push(\r\n                        innerFormatter\r\n                            ? innerFormatter(this._valueList[i])\r\n                            : this.numAddCommas(this._valueList[i]) // 每三位默认加,格式化\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        getExtremum: function () {\r\n            this._calculateValue();\r\n            var dataMappingMethods = this._dataMappingMethods;\r\n            return {\r\n                min: this._min,\r\n                max: this._max,\r\n                dataMappingMethods: dataMappingMethods\r\n                    ? zrUtil.merge({}, dataMappingMethods) : null\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption, newSeries) {\r\n            if (newOption) {\r\n                this.option = this.reformOption(newOption);\r\n                // 通用字体设置\r\n                this.option.axisLabel.textStyle = zrUtil.merge(\r\n                    this.option.axisLabel.textStyle || {},\r\n                    this.ecTheme.textStyle\r\n                );\r\n                this.series = newSeries;\r\n            }\r\n            if (this.zr) {   // 数值轴的另外一个功能只是用来计算极值\r\n                this.clear();\r\n                this._buildShape();\r\n            }\r\n        },\r\n\r\n        // 根据值换算位置\r\n        getCoord: function (value) {\r\n            if (this._dataMappingMethods) {\r\n                value = this._dataMappingMethods.value2Coord(value);\r\n            }\r\n\r\n            value = value < this._min ? this._min : value;\r\n            value = value > this._max ? this._max : value;\r\n\r\n            var result;\r\n            if (!this.isHorizontal()) {\r\n                // 纵向\r\n                result = this.grid.getYend()\r\n                         - (value - this._min)\r\n                           / (this._max - this._min)\r\n                           * this.grid.getHeight();\r\n            }\r\n            else {\r\n                // 横向\r\n                result = this.grid.getX()\r\n                         + (value - this._min)\r\n                           / (this._max - this._min)\r\n                           * this.grid.getWidth();\r\n            }\r\n\r\n            return result;\r\n            // Math.floor可能引起一些偏差，但性能会更好\r\n            /* 准确更重要\r\n            return (value === this._min || value === this._max)\r\n                   ? result\r\n                   : Math.floor(result);\r\n            */\r\n        },\r\n\r\n        // 根据值换算绝对大小\r\n        getCoordSize: function (value) {\r\n            if (!this.isHorizontal()) {\r\n                // 纵向\r\n                return Math.abs(value / (this._max - this._min) * this.grid.getHeight());\r\n            }\r\n            else {\r\n                // 横向\r\n                return Math.abs(value / (this._max - this._min) * this.grid.getWidth());\r\n            }\r\n        },\r\n\r\n        // 根据位置换算值\r\n        getValueFromCoord: function(coord) {\r\n            var result;\r\n\r\n            if (!this.isHorizontal()) {\r\n                // 纵向\r\n                coord = coord < this.grid.getY() ? this.grid.getY() : coord;\r\n                coord = coord > this.grid.getYend() ? this.grid.getYend() : coord;\r\n                result = this._max\r\n                         - (coord - this.grid.getY())\r\n                           / this.grid.getHeight()\r\n                           * (this._max - this._min);\r\n            }\r\n            else {\r\n                // 横向\r\n                coord = coord < this.grid.getX() ? this.grid.getX() : coord;\r\n                coord = coord > this.grid.getXend() ? this.grid.getXend() : coord;\r\n                result = this._min\r\n                         + (coord - this.grid.getX())\r\n                           / this.grid.getWidth()\r\n                           * (this._max - this._min);\r\n            }\r\n\r\n            if (this._dataMappingMethods) {\r\n                result = this._dataMappingMethods.coord2Value(result);\r\n            }\r\n\r\n            return result.toFixed(2) - 0;\r\n        },\r\n\r\n        isMaindAxis : function (value) {\r\n            for (var i = 0, l = this._valueList.length; i < l; i++) {\r\n                if (this._valueList[i] === value) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ValueAxis, Base);\r\n\r\n    require('../component').define('valueAxis', ValueAxis);\r\n\r\n    return ValueAxis;\r\n});\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/valueAxis.js\n ** module id = 89\n ** module chunks = 0\n **/","\n/**\n * echarts 值轴分段刻度计算方法\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author xieshiwei (谢世威, i6ma@i6ma.com)\n *\n */\n\n\n/**\n * 最值、跨度、步长取近似值\n * 注意：不适用于高精度需求，或者很多位有效数字的情况！！！\n * @function    smartSteps\n * @param       {Number}    min             最小值\n * @param       {Number}    max             最大值\n * @param       {Number}    [section]       段数只能是 [0, 99] 的整数，段数为 0 或者不指定段数时，将自动调整段数\n * @param       {Object}    [opts]          其它扩展参数\n * @param       {Array}     opts.steps      自定义步长备选值，如 [10, 12, 15, 20, 25, 30, 40, 50, 60, 80] ，但必须 => [10, 99]\n * @return      {Object}    {min: 新最小值, max: 新最大值, secs: 分段数, step: 每段长, fix: 小数保留位数, pnts: [分段结果]}\n */\ndefine(function() {\n\n\n\nvar mySteps     = [10, 20, 25, 50];\nvar mySections  = [4, 5, 6];\n\nvar custOpts;\nvar custSteps;\nvar custSecs;\nvar minLocked;\nvar maxLocked;\n\nvar MT          = Math;\nvar MATH_ROUND  = MT.round;\nvar MATH_FLOOR  = MT.floor;\nvar MATH_CEIL   = MT.ceil;\nvar MATH_ABS    = MT.abs;\n\n\nfunction MATH_LOG(n) {return MT.log(MATH_ABS(n)) / MT.LN10;}\nfunction MATH_POW(n) {return MT.pow(10, n);}\nfunction MATH_ISINT(n) {return n === MATH_FLOOR(n);}\n\n\nfunction smartSteps(min, max, section, opts) {\n    // 拿公共变量来接收 opts.steps 这个参数，就不用带着参数层层传递了，注意在函数的最终出口处释放这个值\n    custOpts    = opts || {};\n    custSteps   = custOpts.steps || mySteps;\n    custSecs    = custOpts.secs || mySections;\n    section     = MATH_ROUND(+section || 0) % 99;           // 段数限定在 [0, 99] ，0 则自适应\n    min         = +min || 0;\n    max         = +max || 0;\n    minLocked   = maxLocked = 0;\n    if ('min' in custOpts) {\n        min     = +custOpts.min || 0;\n        minLocked = 1;\n    }\n    if ('max' in custOpts) {\n        max     = +custOpts.max || 0;\n        maxLocked = 1;\n    }\n    if (min > max) {max = [min, min = max][0];}             // 最值交换\n    var span    = max - min;\n    if (minLocked && maxLocked) {\n        return bothLocked(min, max, section);               // 两个最值同时被锁定，注意差值为 0 的情况\n    }\n    if (span < (section || 5)) {                            // 跨度值小于要分的段数，步长将会小于 1\n        if (MATH_ISINT(min) && MATH_ISINT(max)) {           // 步长小于 1 同时两个最值都是整数，特别处理\n            return forInteger(min, max, section);           // 也要考虑差值为 0 的情况\n        }\n        else if (span === 0) {                              // 非整数且跨度为 0 的情况\n            return forSpan0(min, max, section);\n        }\n    }\n    return coreCalc(min, max, section);                     // 非特殊情况的计算，须确保 min < max\n}\n\n\n\n/**\n * 构造返回值，处理小数精度等问题\n * @param   {Number}    newMin      最小值\n * @param   {Number}    newMax      最大值\n * @param   {Number}    section     分段数\n * @param   {Number}    [expon]     计算量级\n * @return  {Object}                同 smartSteps\n */\nfunction makeResult(newMin, newMax, section, expon) {\n    expon       = expon || 0;                               // 这是中间计算量级，受步长增长、特别是最值锁定的影响，可能会小于基准量级，因为整数部分被过度放大\n    var expStep = expNum((newMax - newMin) / section, -1);\n    var expMin  = expNum(newMin, -1, 1);                    // 锁定的最值有效数位可能很多，需要全精度保留\n    var expMax  = expNum(newMax, -1);\n    var minExp  = MT.min(expStep.e, expMin.e, expMax.e);    // 这个值实际上就是各值整数部分尾部多余的 0 的个数\n    if (expMin.c === 0) {                                   // 0 可以有任意多个尾0\n        minExp  = MT.min(expStep.e, expMax.e);\n    } else if (expMax.c === 0) {\n        minExp  = MT.min(expStep.e, expMin.e);\n    }\n    expFixTo(expStep, {c: 0, e: minExp});\n    expFixTo(expMin, expStep, 1);\n    expFixTo(expMax, expStep);\n    expon      += minExp;                                   // 最终的基准量级，在这个量级下，各值刚好能表示成整数\n    newMin      = expMin.c;\n    newMax      = expMax.c;\n    var step    = (newMax - newMin) / section;\n    var zoom    = MATH_POW(expon);\n    var fixTo   = 0;\n    var points  = [];\n    for (var i  = section + 1; i--;) {                      // 因为点数比段数多 1\n        points[i] = (newMin + step * i) * zoom;             // 如果不涉及小数问题，这里就直接使用数值型\n    }\n    if (expon   < 0) {\n        fixTo   = decimals(zoom);                           // 前面已经去掉了各值尾部多余的 0 ，所以 zoom 的小数位就是最终的 fix 位数\n        step    = +(step * zoom).toFixed(fixTo);            // toFixed 处理长尾小数问题，如：0.2 * 0.1 = 0.020000000000000004\n        newMin  = +(newMin * zoom).toFixed(fixTo);\n        newMax  = +(newMax * zoom).toFixed(fixTo);\n        for (var i = points.length; i--;) {\n            points[i] = points[i].toFixed(fixTo);           // 为保证小数点对齐，统一转为字符型\n            +points[i] === 0 && (points[i] = '0');          // 0.000 不好看\n        }\n    }\n    else {\n        newMin *= zoom;\n        newMax *= zoom;\n        step   *= zoom;\n    }\n    custSecs    = 0;\n    custSteps   = 0;\n    custOpts    = 0;\n    // 这些公共变量可能持用了对用户参数的引用，这里是函数的最终出口，释放引用\n\n    return {\n        min:    newMin,                 // 新最小值\n        max:    newMax,                 // 新最大值\n        secs:   section,                // 分段数\n        step:   step,                   // 每段长\n        fix:    fixTo,                  // 小数保留位数，0 则为整数\n        exp:    expon,                  // 基准量级，并非原值所在的量级，而是说在这个量级下，各值能表示成整数\n        pnts:   points                  // 分段结果，整数都是数值型，小数时为了对齐小数点，都是字符型，但其中 0 不带小数点，即没有 \"0.000\"\n    };\n}\n\n\n\n/**\n * 量级计数法 表示数值，不适用于很大或者很小的数，0 更不行\n * @param       {Number}    num             原数\n * @param       {Number}    [digit = 2]     精度位数，必须 => [1, 9]\n * @param       {Boolean}   [byFloor = 0]   默认为 0 表示近似值不小于原值，置 1 表示近似值不大于原值\n * @return      {Object}    {c: c, e: e}    c e 都是整数，c * 10 ^ e 即为原值的近似数\n * @description             返回值应该更详细一点：{c: c, e: e, d: d, n: n} ，其中 d 是 c 的位数，n = c * 10 ^ e ，不过目前好像不太有用\n */\nfunction expNum(num, digit, byFloor) {\n    digit       = MATH_ROUND(digit % 10) || 2;\n    if (digit   < 0) {                                      // 全精度位数\n        if (MATH_ISINT(num)) {                              // 整数的全精度位数，要去掉尾 0 ，但 0 也是整数，要专门留一位精度\n            digit = ('' + MATH_ABS(num)).replace(/0+$/, '').length || 1;\n        }\n        else {                                              // 小数的全精度位数，要去掉首 0\n            num = num.toFixed(15).replace(/0+$/, '');       // toFixed 处理长尾小数\n            digit = num.replace('.', '').replace(/^[-0]+/, '').length;\n            num = +num;                                     // '' + 0.0000001 会得到 '1e-7'\n        }\n    }\n    var expon   = MATH_FLOOR(MATH_LOG(num)) - digit + 1;\n    var cNum    = +(num * MATH_POW(-expon)).toFixed(15) || 0;   // toFixed 处理长尾小数问题\n    cNum        = byFloor ? MATH_FLOOR(cNum) : MATH_CEIL(cNum); // 向上取整可能发生进位，使精度位数增加 1\n    !cNum && (expon = 0);\n    if (('' + MATH_ABS(cNum)).length > digit) {                 // 整数位数判断，字符串法比对数法快近一倍\n        expon  += 1;\n        cNum   /= 10;\n    }\n    return {\n        c: cNum,\n        e: expon\n    };\n}\n\n\n/**\n * 将前者的指数对齐到后者，如果前者量级较小，就是强制加大指数，值误差可能严重放大，甚至值变为 0\n */\nfunction expFixTo(expnum1, expnum2, byFloor) {\n    var deltaExp    = expnum2.e - expnum1.e;\n    if (deltaExp) {\n        expnum1.e  += deltaExp;                             // 指数减小时，只需将整数部分相应放大\n        expnum1.c  *= MATH_POW(-deltaExp);                  // 指数增加时，整数部分将缩小，就涉及 floor ceil 取整和变 0 问题\n        expnum1.c   = byFloor ? MATH_FLOOR(expnum1.c) : MATH_CEIL(expnum1.c);\n    }\n}\n\n\n/**\n * 将两个量级数的指数对齐到较小者\n */\nfunction expFixMin(expnum1, expnum2, byFloor) {\n    if (expnum1.e < expnum2.e) {\n        expFixTo(expnum2, expnum1, byFloor);\n    }\n    else {\n        expFixTo(expnum1, expnum2, byFloor);\n    }\n}\n\n\n/**\n * 基于量级计数法，对原值的整数部分取近似，不适用于负数和 0\n * @param       {Number}    num             原值\n * @param       {Array}     [rounds]        在取近似时，提供预置选项，近似到 rounds 中的某项\n * @return      {Object}    expNum          2 位精度的量级计数法对象，不小于原值\n */\nfunction getCeil(num, rounds) {\n    rounds      = rounds || mySteps;\n    num         = expNum(num);                              // 2 位精度量级计数法\n    var cNum    = num.c;\n    var i       = 0;\n    while (cNum > rounds[i]) {                              // 在预置的近似数中，找到不小于目标 cNum 的项\n        i++;\n    }\n    if (!rounds[i]) {                                       // 如果没找到合适的预置项，一定是目标值大于全部的预置项\n        cNum   /= 10;                                       // 将目标值缩小 10 倍，重找一次定能命中\n        num.e  += 1;\n        i       = 0;\n        while (cNum > rounds[i]) {\n            i++;\n        }\n    }\n    num.c       = rounds[i];\n    return num;\n}\n\n\n\n\n/**\n * 基于量级计数法的计算，必须 min < max\n */\nfunction coreCalc(min, max, section) {\n    var step;\n    var secs    = section || +custSecs.slice(-1);\n    var expStep = getCeil((max - min) / secs, custSteps);   // 这是可能的最小步长，以它的量级作为后续计算的基准量级，以保证整数计算特性\n    var expSpan = expNum(max - min);                        // 2 位精度的最值跨度，过高的精度意味着有效数位更多\n    var expMin  = expNum(min, -1, 1);                       // 最小值向下近似，以涵盖原最小值\n    var expMax  = expNum(max, -1);     // 最大值向上近似，参数 -1 表示保留全精度，因为要注意 min = 10000001, max = 10000002 等情况\n    expFixTo(expSpan, expStep);                             // 指数对齐\n    expFixTo(expMin, expStep, 1);                           // 经过指数对齐，原最大值、最小值都有可能变为 0\n    expFixTo(expMax, expStep);\n    if (!section) {\n        secs    = look4sections(expMin, expMax);\n    }\n    else {\n        step    = look4step(expMin, expMax, secs);\n    }\n\n    // 如果原最值都是整数，尽量让输出值也保持整数，但原最值跨 0 的则不调整\n    if (MATH_ISINT(min) && MATH_ISINT(max) && min * max >= 0) {\n        if (max - min < secs) {                             // 再次出现跨度小于段数\n            return forInteger(min, max, secs);\n        }\n        secs = tryForInt(min, max, section, expMin, expMax, secs);\n    }\n    var arrMM   = cross0(min, max, expMin.c, expMax.c);\n    expMin.c    = arrMM[0];\n    expMax.c    = arrMM[1];\n    if (minLocked || maxLocked) {\n        singleLocked(min, max, expMin, expMax);\n    }\n    return makeResult(expMin.c, expMax.c, secs, expMax.e);\n}\n\n\n\n/**\n * 在预置的可选段数中，找出一个合适的值，让跨度误差尽量小\n */\nfunction look4sections(expMin, expMax) {\n    var section;\n    var tmpStep, tmpMin, tmpMax;\n    var reference   = [];\n    for (var i      = custSecs.length; i--;) {              // 逐步减小段数，步长就会渐大\n        section     = custSecs[i];\n        tmpStep     = getCeil((expMax.c - expMin.c) / section, custSteps);\n        tmpStep     = tmpStep.c * MATH_POW(tmpStep.e);      // 步长都用常规整数参与计算\n        tmpMin      = MATH_FLOOR(expMin.c / tmpStep) * tmpStep;\n        tmpMax      = MATH_CEIL(expMax.c / tmpStep) * tmpStep;\n        reference[i] = {\n            min:    tmpMin,\n            max:    tmpMax,\n            step:   tmpStep,\n            span:   tmpMax - tmpMin                         // 步长的误差被 段数 成倍放大，可能会给跨度造成更大的误差，使最后的段数大于预置的最大值\n        };\n    }\n    reference.sort(function (a, b) {\n        var delta = a.span - b.span;                        // 分段调整之后的跨度，一定不小于原跨度，所以越小越好\n        if (delta === 0) {\n            delta = a.step - b.step;                        // 跨度相同时，步长小者胜出\n        }\n        return delta;\n    });\n    reference   = reference[0];\n    section     = reference.span / reference.step;\n    expMin.c    = reference.min;\n    expMax.c    = reference.max;\n    return section < 3 ? section * 2 : section;             // 如果最终步长比最小步长大得多，段数就可能变得很小\n}\n\n\n/**\n * 指定段数，在预置的可选步长中，找出一个合适的值，让 步长 * 段数 积刚好涵盖原最大值与最小值\n */\nfunction look4step(expMin, expMax, secs) {\n    var span;\n    var tmpMax;\n    var tmpMin      = expMax.c;\n    var tmpStep     = (expMax.c - expMin.c) / secs - 1;\n    while (tmpMin   > expMin.c) {\n        tmpStep     = getCeil(tmpStep + 1, custSteps);\n        tmpStep     = tmpStep.c * MATH_POW(tmpStep.e);\n        span        = tmpStep * secs;\n        tmpMax      = MATH_CEIL(expMax.c / tmpStep) * tmpStep;\n        tmpMin      = tmpMax - span;                        // 优先保证 max 端的误差最小，试看原 min 值能否被覆盖到\n    }\n    var deltaMin    = expMin.c - tmpMin;                    // 上面的计算可能会让 min 端的误差更大，下面尝试均衡误差\n    var deltaMax    = tmpMax - expMax.c;\n    var deltaDelta  = deltaMin - deltaMax;\n    if (deltaDelta  > tmpStep * 1.1) {                      // 当 min 端的误差比 max 端大很多时，考虑将 tmpMin tmpMax 同时上移\n        deltaDelta  = MATH_ROUND(deltaDelta / tmpStep / 2) * tmpStep;\n        tmpMin     += deltaDelta;\n        tmpMax     += deltaDelta;\n    }\n    expMin.c   = tmpMin;\n    expMax.c   = tmpMax;\n    return tmpStep;\n}\n\n\n/**\n * 原最值都是整数时，尝试让输出也保持整数\n */\nfunction tryForInt(min, max, section, expMin, expMax, secs) {\n    var span = expMax.c - expMin.c;\n    var step = span / secs * MATH_POW(expMax.e);\n    if (!MATH_ISINT(step)) {                                // 原最值都是整数，但计算步长可能出现小数，如 2.5\n        step = MATH_FLOOR(step);                            // 步长总是要尽量小，以减小跨度误差，所以 2.5 可能被调整为 2 或者 3\n        span = step * secs;\n        if (span < max - min) {\n            step += 1;\n            span = step * secs;\n            if (!section && (step * (secs - 1) >= (max - min))) {\n                secs -= 1;\n                span = step * secs;\n            }\n        }\n        if (span >= max - min) {\n            var delta   = span - (max - min);               // 误差均衡\n            expMin.c    = MATH_ROUND(min - delta / 2);\n            expMax.c    = MATH_ROUND(max + delta / 2);\n            expMin.e    = 0;\n            expMax.e    = 0;\n        }\n    }\n    return secs;\n}\n\n\n\n\n/**\n * 整数情况下，跨度小于段数的处理\n */\nfunction forInteger(min, max, section) {\n    section     = section || 5;\n    if (minLocked) {\n        max     = min + section;                            // min max 没有写错，因为 min locked 所以 max 在 min 上浮动\n    }\n    else if (maxLocked) {\n        min     = max - section;\n    }\n    else {\n        var delta   = section - (max - min);                // 没有端点锁定时，向上下延展跨度\n        var newMin  = MATH_ROUND(min - delta / 2);\n        var newMax  = MATH_ROUND(max + delta / 2);\n        var arrMM   = cross0(min, max, newMin, newMax);     // 避免跨 0\n        min         = arrMM[0];\n        max         = arrMM[1];\n    }\n    return makeResult(min, max, section);\n}\n\n\n/**\n * 非整数情况下，跨度为 0 的处理\n */\nfunction forSpan0(min, max, section) {\n    section     = section || 5;\n    // delta 一定不为 0 ，因为 min === max === 0 的情况会进入 forInteger 分支\n    var delta   = MT.min(MATH_ABS(max / section), section) / 2.1;\n    if (minLocked) {\n        max     = min + delta;                              // min max 没有写错，因为 min locked 所以 max 在 min 上浮动\n    }\n    else if (maxLocked) {\n        min     = max - delta;\n    }\n    else {                                                  // 以最值为中心，上下各延展一小段\n        min     = min - delta;\n        max     = max + delta;\n    }\n    return coreCalc(min, max, section);\n}\n\n\n/**\n * 当原始最值都在 0 的同侧时，让输出也保持在 0 的同侧\n */\nfunction cross0(min, max, newMin, newMax) {\n    if (min >= 0 && newMin < 0) {\n        newMax -= newMin;\n        newMin  = 0;\n    }\n    else if (max <= 0 && newMax > 0) {\n        newMin -= newMax;\n        newMax  = 0;\n    }\n    return [newMin, newMax];\n}\n\n\n/**\n * 取一个数的小数位数\n * @param   {Number}    num         原数值\n * @return  {Number}    decimals    整数则返回 0 ，小数则返回小数点后的位数\n */\nfunction decimals(num) {\n    num = (+num).toFixed(15).split('.');                    // String(0.0000001) 会得到 '1e-7'\n    return num.pop().replace(/0+$/, '').length;\n}\n\n\n\n\n\n\n/**\n * 单个最值锁定处理，只是在原计算的基础上，锁定一个，平移另一个\n */\nfunction singleLocked(min, max, emin, emax) {\n    if (minLocked) {\n        var expMin  = expNum(min, 4, 1);                    // 4 位精度向下近似\n        if (emin.e  - expMin.e > 6) {                       // 如果锁定值的量级远小于基准量级，认为锁定失败，强置为 0\n            expMin  = {c: 0, e: emin.e};\n        }\n        expFixMin(emin, expMin);                            // 将指数与量级较小者对齐\n        expFixMin(emax, expMin);\n        emax.c     += expMin.c - emin.c;                    // 最大值平移\n        emin.c      = expMin.c;                             // 最小值锁定\n    }\n    else if (maxLocked) {\n        var expMax  = expNum(max, 4);                       // 4 位精度向上近似\n        if (emax.e  - expMax.e > 6) {                       // 如果锁定值的量级远小于基准量级，认为锁定失败，强置为 0\n            expMax  = {c: 0, e: emax.e};\n        }\n        expFixMin(emin, expMax);                            // 将指数与量级较小者对齐\n        expFixMin(emax, expMax);\n        emin.c     += expMax.c - emax.c;                    // 最小值平移\n        emax.c      = expMax.c;                             // 最大值锁定\n    }\n}\n\n\n/**\n * 最小值和最大值同时被锁定的情况在这里，其它地方只考虑单边最值锁定\n * @param   {Number}    min         锁定的最小值\n * @param   {Number}    max         锁定的最大值\n * @param   {Number}    [section]   段数\n * @return  {Object}                同 smartSteps\n */\nfunction bothLocked(min, max, section) {\n    var trySecs     = section ? [section] : custSecs;\n    var span        = max - min;\n    if (span       === 0) {                                 // 最大最小值都锁定到同一个值上，认为锁定失败\n        max         = expNum(max, 3);                       // 3 位精度向上近似\n        section     = trySecs[0];\n        max.c       = MATH_ROUND(max.c + section / 2);\n        return makeResult(max.c - section, max.c, section, max.e);\n    }\n    if (MATH_ABS(max / span) < 1e-6) {                      // 如果锁定值远小于跨度，也认为锁定失败，强置为 0\n        max         = 0;\n    }\n    if (MATH_ABS(min / span) < 1e-6) {\n        min         = 0;\n    }\n    var step, deltaSpan, score;\n    var scoreS      = [[5, 10], [10, 2], [50, 10], [100, 2]];\n    var reference   = [];\n    var debugLog    = [];\n    var expSpan     = expNum((max - min), 3);               // 3 位精度向上近似\n    var expMin      = expNum(min, -1, 1);\n    var expMax      = expNum(max, -1);\n    expFixTo(expMin, expSpan, 1);\n    expFixTo(expMax, expSpan);\n    span            = expMax.c - expMin.c;\n    expSpan.c       = span;\n    \n    for (var i      = trySecs.length; i--;) {\n        section     = trySecs[i];\n        step        = MATH_CEIL(span / section);\n        deltaSpan   = step * section - span;\n        score       = (deltaSpan + 3) * 3;                  // 误差越大得分越高\n        score      += (section - trySecs[0] + 2) * 2;       // 分段越多得分越高\n        if (section % 5 === 0) {                            // 段数为 5 可以减分\n            score  -= 10;\n        }\n        for (var j  = scoreS.length; j--;) {                // 好的步长是最重要的减分项\n            if (step % scoreS[j][0] === 0) {\n                score /= scoreS[j][1];\n            }\n        }\n        debugLog[i] = [section, step, deltaSpan, score].join();\n        reference[i] = {\n            secs:   section,\n            step:   step,\n            delta:  deltaSpan,\n            score:  score\n        };\n    }\n    //console.log(debugLog);\n    reference.sort(function (a, b) {return a.score - b.score;});\n    reference   = reference[0];\n    expMin.c    = MATH_ROUND(expMin.c - reference.delta / 2);\n    expMax.c    = MATH_ROUND(expMax.c + reference.delta / 2);\n    return makeResult(expMin.c, expMax.c, reference.secs, expSpan.e);\n}\n\n\n\n\nreturn smartSteps;\n});\n\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/smartSteps.js\n ** module id = 90\n ** module chunks = 0\n **/","/**\n * Echarts, logarithmic axis reform\n *\n * @author sushuang (sushuang@baidu.com),\n *         Ievgenii (@Ievgeny, ievgeny@zoomdata.com)\n */\n\ndefine(function(require) {\n\n    // Reference\n    var number = require('./number');\n    var Mt = Math;\n    var mathLog = Mt.log;\n    var mathPow = Mt.pow;\n    var mathAbs = Mt.abs;\n    var mathCeil = Mt.ceil;\n    var mathFloor = Mt.floor;\n\n    // Constant\n    var LOG_BASE = Mt.E; // It is not necessary to specify log base,\n                         // because log(logBase, x) = ln(x) / ln(logBase),\n                         // thus final result (axis tick location) is only determined by ln(x).\n    var LN10 = Mt.LN10;\n    var LN2 = Mt.LN2;\n    var LN2D10 = LN2 / LN10;\n    var EPSILON = 1e-9;\n    var DEFAULT_SPLIT_NUMBER = 5;\n    var MIN_BASE_10_SPLIT_NUMBER = 2;\n    var SUPERSCRIPTS = {\n        '0': '⁰',\n        '1': '¹',\n        '2': '²',\n        '3': '³',\n        '4': '⁴',\n        '5': '⁵',\n        '6': '⁶',\n        '7': '⁷',\n        '8': '⁸',\n        '9': '⁹',\n        '-': '⁻'\n    };\n\n    // Static variable\n    var logPositive;\n    var logLabelBase;\n    var logLabelMode; // enumeration:\n                      // 'plain' (i.e. axis labels are shown like 10000)\n                      // 'exponent' (i.e. axis labels are shown like 10²)\n    var lnBase;\n    var custOpts;\n    var splitNumber;\n    var logMappingOffset;\n    var absMin;\n    var absMax;\n    var tickList;\n\n    /**\n     * Test cases:\n     * [2, 4, 8, 16, 32, 64, 128]\n     * [0.01, 0.1, 10, 100, 1000] logLabelBase: 3\n     * [0.01, 0.1, 10, 100, 1000] logLabelBase: -12\n     * [-2, -4, -8, -16, -32, -64, -128] logLabelBase: 3\n     * [2, 4, 8, 16, '-', 64, 128]\n     * [2, 4, 8, 16, 32, 64]\n     * [2, 4, 8, 16, 32]\n     * [0.00000256, 0.0016, 0.04, 0.2]\n     * [0.1, 1, 10, 100, 1000, 10000, 100000, 1000000] splitNumber: 3\n     * [1331, 3434, 500, 1, 1212, 4]\n     * [0.14, 2, 45, 1001, 200, 0.33, 10001]\n     * [0.00001, 0.00005]\n     * [0.00001, 0.00005] boundaryGap: [0.2, 0.4]\n     * [0.001, 2, -45, 1001, 200, 0.33, 10000]\n     * [0.00000001, 0.00000012]\n     * [0.000000000000001]\n     * [0.00000001, 0.00000001]\n     * [3, 3]\n     * [12, -3, 47, 19]\n     * [12, -3, 47, 19] logPositive: false\n     * [-2, -4, -8, -16, -32, -64, -128]\n     * [-2, -4, -8, -16, -32, -64]\n     * [2, 4, 8, 16, 32] boundaryGap: [0.2, 0.4]\n     * []\n     * [0]\n     * [10, 10, 10]\n     * [0.00003, 0.00003, 0.00003]\n     * [0.00001, 0.00001, 0.00001]\n     * [-0.00001, -0.00001, -0.00001]\n     * ['-', '-']\n     * ['-', 10]\n     * logarithmic axis in scatter (try dataZoom)\n     * logarithmic axis width dataZoom component (try xAxis and yAxis)\n     */\n\n    /**\n     * Main function. Return data object with values for axis building.\n     *\n     * @public\n     * @param {Object} [opts] Configurable options\n     * @param {number} opts.dataMin data Minimum\n     * @param {number} opts.dataMax data Maximum\n     * @param {number=} opts.logPositive Logarithmic sign. If not specified, it will be auto-detected.\n     * @param {number=} opts.logLabelBase Logaithmic base in axis label.\n     *                                    If not specified, it will be set to 10 (and use 2 for detail)\n     * @param {number=} opts.splitNumber Number of sections perfered.\n     * @return {Object} {\n     *                      dataMin: New min,\n     *                      dataMax: New max,\n     *                      tickList: [Array of tick data]\n     *                      logPositive: Type of data sign\n     *                      dataMappingMethods: [Set of logarithmic methods]\n     *                  }\n     */\n    function smartLogSteps(opts) {\n        clearStaticVariables();\n        custOpts = opts || {};\n\n        reformSetting();\n        makeTicksList();\n\n        return [\n            makeResult(),\n            clearStaticVariables()\n        ][0];\n    }\n\n    /**\n     * All of static variables must be clear here.\n     */\n    function clearStaticVariables() {\n        logPositive = custOpts = logMappingOffset = lnBase =\n        absMin = absMax = splitNumber = tickList = logLabelBase = logLabelMode = null;\n    }\n\n    /**\n     * Determine sign (logPositive, negative) of data set, if not specified.\n     * Reform min and max of data.\n     */\n    function reformSetting() {\n        // Settings of log label base\n        logLabelBase = custOpts.logLabelBase;\n        if (logLabelBase == null) {\n            logLabelMode = 'plain';\n            logLabelBase = 10;\n            lnBase = LN10;\n        }\n        else {\n            logLabelBase = +logLabelBase;\n            if (logLabelBase < 1) { // log base less than 1 is not supported.\n                logLabelBase = 10;\n            }\n            logLabelMode = 'exponent';\n            lnBase = mathLog(logLabelBase);\n        }\n\n        // Settings of split number\n        splitNumber = custOpts.splitNumber;\n        splitNumber == null && (splitNumber = DEFAULT_SPLIT_NUMBER);\n\n        // Setting of data min and max\n        var dataMin = parseFloat(custOpts.dataMin);\n        var dataMax = parseFloat(custOpts.dataMax);\n\n        if (!isFinite(dataMin) && !isFinite(dataMax)) {\n            dataMin = dataMax = 1;\n        }\n        else if (!isFinite(dataMin)) {\n            dataMin = dataMax;\n        }\n        else if (!isFinite(dataMax)) {\n            dataMax = dataMin;\n        }\n        else if (dataMin > dataMax) {\n            dataMax = [dataMin, dataMin = dataMax][0]; // Exchange min, max.\n        }\n\n        // Settings of log positive\n        logPositive = custOpts.logPositive;\n        // If not specified, determine sign by data.\n        if (logPositive == null) {\n            // LogPositive is false when dataMax <= 0 && dataMin < 0.\n            // LogPositive is true when dataMin >= 0.\n            // LogPositive is true when dataMax >= 0 && dataMin < 0 (singular points may exists)\n            logPositive = dataMax > 0 || dataMin === 0;\n        }\n\n        // Settings of absMin and absMax, which must be greater than 0.\n        absMin = logPositive ? dataMin : -dataMax;\n        absMax = logPositive ? dataMax : -dataMin;\n        // FIXME\n        // If there is any data item less then zero, it is suppose to be igonred and min should be re-calculated.\n        // But it is difficult to do that in current code stucture.\n        // So refactor of xxAxis.js is desired.\n        absMin < EPSILON && (absMin = EPSILON);\n        absMax < EPSILON && (absMax = EPSILON);\n    }\n\n    /**\n     * Make tick list.\n     */\n    function makeTicksList() {\n        tickList = [];\n\n        // Estimate max exponent and min exponent\n        var maxDataLog = fixAccurate(mathLog(absMax) / lnBase);\n        var minDataLog = fixAccurate(mathLog(absMin) / lnBase);\n        var maxExpon = mathCeil(maxDataLog);\n        var minExpon = mathFloor(minDataLog);\n        var spanExpon = maxExpon - minExpon;\n        var spanDataLog = maxDataLog - minDataLog;\n\n        if (logLabelMode === 'exponent') {\n            baseAnalysis();\n        }\n        else { // logLabelMode === 'plain', we will self-adapter\n            !(\n                spanExpon <= MIN_BASE_10_SPLIT_NUMBER\n                && splitNumber > MIN_BASE_10_SPLIT_NUMBER\n            )\n                ? baseAnalysis() : detailAnalysis();\n        }\n\n        // In this situation, only draw base-10 ticks.\n        // Base-10 ticks: 10^h (i.e. 0.01, 0.1, 1, 10, 100, ...)\n        function baseAnalysis() {\n            if (spanExpon < splitNumber) {\n                splitNumber = spanExpon;\n            }\n            // Suppose:\n            //      spanExpon > splitNumber\n            //      stepExpon := floor(spanExpon / splitNumber)\n            //      splitNumberFloat := spanExpon / stepExpon\n            // There are tow expressions which are identically-true:\n            //      splitNumberFloat - splitNumber <= 1\n            //      stepExpon * ceil(splitNumberFloat) - spanExpon <= stepExpon\n            // So we can calculate as follows:\n            var stepExpon = mathFloor(fixAccurate(spanExpon / splitNumber));\n\n            // Put the plot in the middle of the min, max.\n            var splitNumberAdjust = mathCeil(fixAccurate(spanExpon / stepExpon));\n            var spanExponAdjust = stepExpon * splitNumberAdjust;\n            var halfDiff = (spanExponAdjust - spanDataLog) / 2;\n            var minExponAdjust = mathFloor(fixAccurate(minDataLog - halfDiff));\n\n            if (aroundZero(minExponAdjust - minDataLog)) {\n                minExponAdjust -= 1;\n            }\n\n            // Build logMapping offset\n            logMappingOffset = -minExponAdjust * lnBase;\n\n            // Build tickList\n            for (var n = minExponAdjust; n - stepExpon <= maxDataLog; n += stepExpon) {\n                tickList.push(mathPow(logLabelBase, n));\n            }\n        }\n\n        // In this situation, base-2|10 ticks are used to make detailed split.\n        // Base-2|10 ticks: 10^h * 2^k (i.e. 0.1, 0.2, 0.4, 1, 2, 4, 10, 20, 40),\n        // where k in [0, 1, 2].\n        // Because LN2 * 3 < LN10 and LN2 * 4 > LN10, k should be less than 3.\n        // And when k === 3, the tick is too close to that of k === 0, which looks weird.\n        // So we do not use 3.\n        function detailAnalysis() {\n            // Find max exponent and min exponent.\n            // Calculate base on 3-hexadecimal (0, 1, 2, 10, 11, 12, 20).\n            var minDecimal = toDecimalFrom4Hex(minExpon, 0);\n            var endDecimal = minDecimal + 2;\n            while (\n                minDecimal < endDecimal\n                && toH(minDecimal + 1) + toK(minDecimal + 1) * LN2D10 < minDataLog\n            ) {\n                minDecimal++;\n            }\n            var maxDecimal = toDecimalFrom4Hex(maxExpon, 0);\n            var endDecimal = maxDecimal - 2; // maxDecimal is greater than 4\n            while (\n                maxDecimal > endDecimal\n                && toH(maxDecimal - 1) + toK(maxDecimal - 1) * LN2D10 > maxDataLog\n            ) {\n                maxDecimal--;\n            }\n\n            // Build logMapping offset\n            logMappingOffset = -(toH(minDecimal) * LN10 + toK(minDecimal) * LN2);\n\n            // Build logMapping tickList\n            for (var i = minDecimal; i <= maxDecimal; i++) {\n                var h = toH(i);\n                var k = toK(i);\n                tickList.push(mathPow(10, h) * mathPow(2, k));\n            }\n        }\n\n        // Convert to decimal number from 4-hexadecimal number,\n        // where h, k means: if there is a 4-hexadecimal numer 23, then h is 2, k is 3.\n        // h can be any integer (notice: h can be greater than 10 or less than 0),\n        // and k belongs to [0, 1, 2, 3].\n        function toDecimalFrom4Hex(h, k) {\n            return h * 3 + k;\n        }\n\n        function toK(decimal) {\n            return decimal - toH(decimal) * 3; // Can not calculate by '%'\n        }\n\n        function toH(decimal) {\n            return mathFloor(fixAccurate(decimal / 3));\n        }\n    }\n\n    /**\n     * Make result\n     */\n    function makeResult() {\n        var resultTickList = [];\n        for (var i = 0, len = tickList.length; i < len; i++) {\n            resultTickList[i] = (logPositive ? 1 : -1) * tickList[i];\n        }\n        !logPositive && resultTickList.reverse();\n\n        var dataMappingMethods = makeDataMappingMethods();\n        var value2Coord = dataMappingMethods.value2Coord;\n\n        var newDataMin = value2Coord(resultTickList[0]);\n        var newDataMax = value2Coord(resultTickList[resultTickList.length - 1]);\n\n        if (newDataMin === newDataMax) {\n            newDataMin -= 1;\n            newDataMax += 1;\n        }\n\n        return {\n            dataMin: newDataMin,\n            dataMax: newDataMax,\n            tickList: resultTickList,\n            logPositive: logPositive,\n            labelFormatter: makeLabelFormatter(),\n            dataMappingMethods: dataMappingMethods\n        };\n    }\n\n    /**\n     * Make axis label formatter.\n     */\n    function makeLabelFormatter() {\n        if (logLabelMode === 'exponent') { // For label style like 3⁴.\n            // Static variables should be fixed in the scope of the methods.\n            var myLogLabelBase = logLabelBase;\n            var myLnBase = lnBase;\n\n            return function (value) {\n                if (!isFinite(parseFloat(value))) {\n                    return '';\n                }\n                var sign = '';\n                if (value < 0) {\n                    value = -value;\n                    sign = '-';\n                }\n                return sign + myLogLabelBase + makeSuperscriptExponent(mathLog(value) / myLnBase);\n            };\n        }\n        else {\n            return function (value) { // Normal style like 0.001, 10,000,0\n                if (!isFinite(parseFloat(value))) {\n                    return '';\n                }\n                return number.addCommas(formatNumber(value));\n            };\n        }\n    }\n\n    /**\n     * Make calculate methods.\n     */\n    function makeDataMappingMethods() {\n        // Static variables should be fixed in the scope of the methods.\n        var myLogPositive = logPositive;\n        var myLogMappingOffset = logMappingOffset;\n\n        return {\n            value2Coord: function (x) {\n                if (x == null || isNaN(x) || !isFinite(x)) {\n                    return x;\n                }\n                x = parseFloat(x); // to number\n                if (!isFinite(x)) {\n                    x = EPSILON;\n                }\n                else if (myLogPositive && x < EPSILON) {\n                    // FIXME\n                    // It is suppose to be ignore, but not be set to EPSILON. See comments above.\n                    x = EPSILON;\n                }\n                else if (!myLogPositive && x > -EPSILON) {\n                    x = -EPSILON;\n                }\n                x = mathAbs(x);\n                return (myLogPositive ? 1 : -1) * (mathLog(x) + myLogMappingOffset);\n            },\n            coord2Value: function (x) {\n                if (x == null || isNaN(x) || !isFinite(x)) {\n                    return x;\n                }\n                x = parseFloat(x); // to number\n                if (!isFinite(x)) {\n                    x = EPSILON;\n                }\n                return myLogPositive\n                    ? mathPow(LOG_BASE, x - myLogMappingOffset)\n                    : -mathPow(LOG_BASE, -x + myLogMappingOffset);\n            }\n        };\n    }\n\n    /**\n     * For example, Math.log(1000) / Math.LN10 get the result of 2.9999999999999996, rather than 3.\n     * This method trys to fix it.\n     * (accMath.div can not fix this problem yet.)\n     */\n    function fixAccurate(result) {\n        return +Number(+result).toFixed(14);\n    }\n\n    /**\n     * Avoid show float number like '1e-9', '-1e-10', ...\n     * @return {string}\n     */\n    function formatNumber(num) {\n        return Number(num).toFixed(15).replace(/\\.?0*$/, '');\n    }\n\n    /**\n     * Make superscript exponent\n     */\n    function makeSuperscriptExponent(exponent) {\n        exponent = formatNumber(Math.round(exponent)); // Do not support float superscript.\n                                                       // (because I can not find superscript style of '.')\n        var result = [];\n        for (var i = 0, len = exponent.length; i < len; i++) {\n            var cha = exponent.charAt(i);\n            result.push(SUPERSCRIPTS[cha] || '');\n        }\n        return result.join('');\n    }\n\n    /**\n     * Decide whether near zero\n     */\n    function aroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n\n    return smartLogSteps;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/util/smartLogSteps.js\n ** module id = 91\n ** module chunks = 0\n **/","/**\r\n * echarts组件： 网格\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n    \r\n    var ecConfig = require('../config');\r\n    // 网格\r\n    ecConfig.grid = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 0,                       // 二级层叠\r\n        x: 80,\r\n        y: 60,\r\n        x2: 80,\r\n        y2: 60,\r\n        // width: {totalWidth} - x - x2,\r\n        // height: {totalHeight} - y - y2,\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 1,\r\n        borderColor: '#ccc'\r\n    };\r\n\r\n    var zrUtil = require('zrender/tool/util');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表选项\r\n     *      @param {number=} option.grid.x 直角坐标系内绘图网格起始横坐标，数值单位px\r\n     *      @param {number=} option.grid.y 直角坐标系内绘图网格起始纵坐标，数值单位px\r\n     *      @param {number=} option.grid.width 直角坐标系内绘图网格宽度，数值单位px\r\n     *      @param {number=} option.grid.height 直角坐标系内绘图网格高度，数值单位px\r\n     */\r\n    function Grid(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.refresh(option);\r\n    }\r\n    \r\n    Grid.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_GRID,\r\n\r\n        getX: function () {\r\n            return this._x;\r\n        },\r\n\r\n        getY: function () {\r\n            return this._y;\r\n        },\r\n\r\n        getWidth: function () {\r\n            return this._width;\r\n        },\r\n\r\n        getHeight: function () {\r\n            return this._height;\r\n        },\r\n\r\n        getXend: function () {\r\n            return this._x + this._width;\r\n        },\r\n\r\n        getYend: function () {\r\n            return this._y + this._height;\r\n        },\r\n\r\n        getArea: function () {\r\n            return {\r\n                x: this._x,\r\n                y: this._y,\r\n                width: this._width,\r\n                height: this._height\r\n            };\r\n        },\r\n        \r\n        getBbox: function() {\r\n            return [\r\n                [ this._x, this._y ],\r\n                [ this.getXend(), this.getYend() ]\r\n            ];\r\n        },\r\n        \r\n        /**\r\n         * 实在找不到合适的地方做了，各种粗暴的写法~ -_-\r\n         */\r\n        refixAxisShape: function(component) {\r\n            var zeroX;\r\n            var zeroY;\r\n            var axisList = component.xAxis._axisList.concat(\r\n                component.yAxis ? component.yAxis._axisList : []\r\n            );\r\n            var len = axisList.length;\r\n            var axis;\r\n            while (len--) {\r\n                axis = axisList[len];\r\n                if (axis.type == ecConfig.COMPONENT_TYPE_AXIS_VALUE \r\n                    && axis._min < 0  \r\n                    && axis._max >= 0\r\n                ) {\r\n                    axis.isHorizontal()\r\n                    ? (zeroX = axis.getCoord(0))\r\n                    : (zeroY = axis.getCoord(0));\r\n                }\r\n            }\r\n            if (typeof zeroX != 'undefined' || typeof zeroY != 'undefined') {\r\n                len = axisList.length;\r\n                while (len--) {\r\n                    axisList[len].refixAxisShape(zeroX, zeroY);\r\n                }\r\n            }\r\n        },\r\n        \r\n        refresh: function (newOption) {\r\n            if (newOption\r\n                || this._zrWidth != this.zr.getWidth() \r\n                || this._zrHeight != this.zr.getHeight()\r\n            ) {\r\n                this.clear();\r\n                this.option = newOption || this.option;\r\n                this.option.grid = this.reformOption(this.option.grid);\r\n    \r\n                var gridOption = this.option.grid;\r\n                this._zrWidth = this.zr.getWidth();\r\n                this._zrHeight = this.zr.getHeight();\r\n                this._x = this.parsePercent(gridOption.x, this._zrWidth);\r\n                this._y = this.parsePercent(gridOption.y, this._zrHeight);\r\n                var x2 = this.parsePercent(gridOption.x2, this._zrWidth);\r\n                var y2 = this.parsePercent(gridOption.y2, this._zrHeight);\r\n                \r\n    \r\n                if (typeof gridOption.width == 'undefined') {\r\n                    this._width = this._zrWidth - this._x - x2;\r\n                }\r\n                else {\r\n                    this._width = this.parsePercent(gridOption.width, this._zrWidth);\r\n                }\r\n                this._width = this._width <= 0 ? 10 : this._width;\r\n    \r\n                if (typeof gridOption.height == 'undefined') {\r\n                    this._height = this._zrHeight - this._y - y2;\r\n                }\r\n                else {\r\n                    this._height = this.parsePercent(gridOption.height, this._zrHeight);\r\n                }\r\n                this._height = this._height <= 0 ? 10 : this._height;\r\n                \r\n                this._x = this.subPixelOptimize(this._x, gridOption.borderWidth);\r\n                this._y = this.subPixelOptimize(this._y, gridOption.borderWidth);\r\n    \r\n                this.shapeList.push(new RectangleShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    hoverable: false,\r\n                    style: {\r\n                        x: this._x,\r\n                        y: this._y,\r\n                        width: this._width,\r\n                        height: this._height,\r\n                        brushType: gridOption.borderWidth > 0 ? 'both' : 'fill',\r\n                        color: gridOption.backgroundColor,\r\n                        strokeColor: gridOption.borderColor,\r\n                        lineWidth: gridOption.borderWidth\r\n                        // type: this.option.splitArea.areaStyle.type,\r\n                    }\r\n                }));\r\n                this.zr.addShape(this.shapeList[0]);\r\n            }\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Grid, Base);\r\n    \r\n    require('../component').define('grid', Grid);\r\n    \r\n    return Grid;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/component/grid.js\n ** module id = 92\n ** module chunks = 0\n **/","/**\r\n * echarts图表类：柱形图\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ChartBase = require('./base');\r\n    \r\n    // 图形依赖\r\n    var RectangleShape = require('zrender/shape/Rectangle');\r\n    // 组件依赖\r\n    require('../component/axis');\r\n    require('../component/grid');\r\n    require('../component/dataZoom');\r\n    \r\n    var ecConfig = require('../config');\r\n    // 柱形图默认参数\r\n    ecConfig.bar = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 2,                       // 二级层叠\r\n        clickable: true,\r\n        legendHoverLink: true,\r\n        // stack: null\r\n        xAxisIndex: 0,\r\n        yAxisIndex: 0,\r\n        barMinHeight: 0,          // 最小高度改为0\r\n        // barWidth: null,        // 默认自适应\r\n        barGap: '30%',            // 柱间距离，默认为柱形宽度的30%，可设固定值\r\n        barCategoryGap: '20%',    // 类目间柱形距离，默认为类目间距的20%，可设固定值\r\n        itemStyle: {\r\n            normal: {\r\n                // color: '各异',\r\n                barBorderColor: '#fff',       // 柱条边线\r\n                barBorderRadius: 0,           // 柱条边线圆角，单位px，默认为0\r\n                barBorderWidth: 0,            // 柱条边线线宽，单位px，默认为1\r\n                label: {\r\n                    show: false\r\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n                    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\r\n                    //           'inside'|'left'|'right'|'top'|'bottom'\r\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                }\r\n            },\r\n            emphasis: {\r\n                // color: '各异',\r\n                barBorderColor: '#fff',            // 柱条边线\r\n                barBorderRadius: 0,                // 柱条边线圆角，单位px，默认为0\r\n                barBorderWidth: 0,                 // 柱条边线线宽，单位px，默认为1\r\n                label: {\r\n                    show: false\r\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n                    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\r\n                    //           'inside'|'left'|'right'|'top'|'bottom'\r\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var ecData = require('../util/ecData');\r\n    var zrUtil = require('zrender/tool/util');\r\n    var zrColor = require('zrender/tool/color');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} series 数据\r\n     * @param {Object} component 组件\r\n     */\r\n    function Bar(ecTheme, messageCenter, zr, option, myChart){\r\n        // 图表基类\r\n        ChartBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    Bar.prototype = {\r\n        type: ecConfig.CHART_TYPE_BAR,\r\n        /**\r\n         * 绘制图形\r\n         */\r\n        _buildShape: function () {\r\n            this._buildPosition();\r\n        },\r\n        \r\n        _buildNormal: function(seriesArray, maxDataLength, locationMap, xMarkMap, orient) {\r\n            var series = this.series;\r\n            // 确定类目轴和数值轴，同一方向随便找一个即可\r\n            var seriesIndex = locationMap[0][0];\r\n            var serie = series[seriesIndex];\r\n            var isHorizontal = orient == 'horizontal';\r\n            var xAxis = this.component.xAxis;\r\n            var yAxis = this.component.yAxis;\r\n            var categoryAxis = isHorizontal \r\n                               ? xAxis.getAxis(serie.xAxisIndex)\r\n                               : yAxis.getAxis(serie.yAxisIndex);\r\n            var valueAxis;  // 数值轴各异\r\n\r\n            var size = this._mapSize(categoryAxis, locationMap);\r\n            var gap = size.gap;\r\n            var barGap = size.barGap;\r\n            var barWidthMap = size.barWidthMap;\r\n            var barMaxWidthMap = size.barMaxWidthMap;\r\n            var barWidth = size.barWidth;                   // 自适应宽度\r\n            var barMinHeightMap = size.barMinHeightMap;\r\n            var barHeight;\r\n            var curBarWidth;\r\n            var interval = size.interval;\r\n\r\n            var x;\r\n            var y;\r\n            var lastP; // 正向堆积处理\r\n            var baseP;\r\n            var lastN; // 负向堆积处理\r\n            var baseN;\r\n            var barShape;\r\n            var data;\r\n            var value;\r\n            var islandR = this.deepQuery([this.ecTheme, ecConfig], 'island.r');\r\n            for (var i = 0, l = maxDataLength; i < l; i++) {\r\n                if (categoryAxis.getNameByIndex(i) == null) {\r\n                    // 系列数据超出类目轴长度\r\n                    break;\r\n                }\r\n                isHorizontal\r\n                    ? (x = categoryAxis.getCoordByIndex(i) - gap / 2)\r\n                    : (y = categoryAxis.getCoordByIndex(i) + gap / 2);\r\n\r\n                for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                    // 堆积数据用第一条valueAxis\r\n                    var yAxisIndex = series[locationMap[j][0]].yAxisIndex || 0;\r\n                    var xAxisIndex = series[locationMap[j][0]].xAxisIndex || 0;\r\n                    valueAxis = isHorizontal \r\n                                ? yAxis.getAxis(yAxisIndex)\r\n                                : xAxis.getAxis(xAxisIndex);\r\n                    baseP = lastP = baseN = lastN = valueAxis.getCoord(0);\r\n                    for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                        seriesIndex = locationMap[j][m];\r\n                        serie = series[seriesIndex];\r\n                        data = serie.data[i];\r\n                        value = this.getDataFromOption(data, '-');\r\n                        xMarkMap[seriesIndex] = xMarkMap[seriesIndex] \r\n                                                || {\r\n                                                    min: Number.POSITIVE_INFINITY,\r\n                                                    max: Number.NEGATIVE_INFINITY,\r\n                                                    sum: 0,\r\n                                                    counter: 0,\r\n                                                    average: 0\r\n                                                };\r\n                        curBarWidth = Math.min(\r\n                            barMaxWidthMap[seriesIndex] || Number.MAX_VALUE,\r\n                            barWidthMap[seriesIndex] || barWidth\r\n                        );\r\n                        if (value === '-') {\r\n                            // 空数据在做完后补充拖拽提示框\r\n                            continue;\r\n                        }\r\n                        if (value > 0) {\r\n                            // 正向堆积\r\n                            barHeight = m > 0 \r\n                                        ? valueAxis.getCoordSize(value)\r\n                                        : (\r\n                                            isHorizontal\r\n                                            ? (baseP - valueAxis.getCoord(value))\r\n                                            : (valueAxis.getCoord(value) - baseP)\r\n                                        );\r\n                            // 非堆积数据最小高度有效\r\n                            if (n === 1 && barMinHeightMap[seriesIndex] > barHeight) {\r\n                                barHeight = barMinHeightMap[seriesIndex];\r\n                            }\r\n                            if (isHorizontal) {\r\n                                lastP -= barHeight;\r\n                                y = lastP;\r\n                            }\r\n                            else {\r\n                                x = lastP;\r\n                                lastP += barHeight;\r\n                            }\r\n                        }\r\n                        else if (value < 0){\r\n                            // 负向堆积\r\n                            barHeight = m > 0 \r\n                                        ? valueAxis.getCoordSize(value)\r\n                                        : (\r\n                                            isHorizontal\r\n                                            ? (valueAxis.getCoord(value) - baseN)\r\n                                            : (baseN - valueAxis.getCoord(value))\r\n                                        );\r\n                            // 非堆积数据最小高度有效\r\n                            if (n === 1 && barMinHeightMap[seriesIndex] > barHeight) {\r\n                                barHeight = barMinHeightMap[seriesIndex];\r\n                            }\r\n                            if (isHorizontal) {\r\n                                y = lastN;\r\n                                lastN += barHeight;\r\n                            }\r\n                            else {\r\n                                lastN -= barHeight;\r\n                                x = lastN;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // 0值\r\n                            barHeight = 0;\r\n                            // 最小高度无效\r\n                            if (isHorizontal) {\r\n                                lastP -= barHeight;\r\n                                y = lastP;\r\n                            }\r\n                            else {\r\n                                x = lastP;\r\n                                lastP += barHeight;\r\n                            }\r\n                        }\r\n                        xMarkMap[seriesIndex][i] = isHorizontal\r\n                                                   ? (x + curBarWidth / 2) \r\n                                                   : (y - curBarWidth / 2);\r\n                        if (xMarkMap[seriesIndex].min > value) {\r\n                            xMarkMap[seriesIndex].min = value;\r\n                            if (isHorizontal) {\r\n                                xMarkMap[seriesIndex].minY = y;\r\n                                xMarkMap[seriesIndex].minX = xMarkMap[seriesIndex][i];\r\n                            }\r\n                            else {\r\n                                xMarkMap[seriesIndex].minX = x + barHeight;\r\n                                xMarkMap[seriesIndex].minY = xMarkMap[seriesIndex][i];\r\n                            }\r\n                        }\r\n                        if (xMarkMap[seriesIndex].max < value) {\r\n                            xMarkMap[seriesIndex].max = value;\r\n                            if (isHorizontal) {\r\n                                xMarkMap[seriesIndex].maxY = y;\r\n                                xMarkMap[seriesIndex].maxX = xMarkMap[seriesIndex][i];\r\n                            }\r\n                            else {\r\n                                xMarkMap[seriesIndex].maxX = x + barHeight;\r\n                                xMarkMap[seriesIndex].maxY = xMarkMap[seriesIndex][i];\r\n                            }\r\n                            \r\n                        }\r\n                        xMarkMap[seriesIndex].sum += value;\r\n                        xMarkMap[seriesIndex].counter++;\r\n                        \r\n                        if (i % interval === 0) {\r\n                            barShape = this._getBarItem(\r\n                                seriesIndex, i,\r\n                                categoryAxis.getNameByIndex(i),\r\n                                x,\r\n                                y - (isHorizontal ? 0 : curBarWidth),\r\n                                isHorizontal ? curBarWidth : barHeight,\r\n                                isHorizontal ? barHeight : curBarWidth,\r\n                                isHorizontal ? 'vertical' : 'horizontal'\r\n                            );\r\n                            this.shapeList.push(new RectangleShape(barShape));\r\n                        }\r\n                    }\r\n\r\n                    // 补充空数据的拖拽提示框\r\n                    for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                        seriesIndex = locationMap[j][m];\r\n                        serie = series[seriesIndex];\r\n                        data = serie.data[i];\r\n                        value = this.getDataFromOption(data, '-');\r\n                        curBarWidth = Math.min(\r\n                            barMaxWidthMap[seriesIndex] || Number.MAX_VALUE,\r\n                            barWidthMap[seriesIndex] || barWidth\r\n                        );\r\n                        if (value != '-') {\r\n                            // 只关心空数据\r\n                            continue;\r\n                        }\r\n\r\n                        if (this.deepQuery([data, serie, this.option], 'calculable')) {\r\n                            if (isHorizontal) {\r\n                                lastP -= islandR;\r\n                                y = lastP;\r\n                            }\r\n                            else {\r\n                                x = lastP;\r\n                                lastP += islandR;\r\n                            }\r\n                            \r\n                            barShape = this._getBarItem(\r\n                                seriesIndex, i,\r\n                                categoryAxis.getNameByIndex(i),\r\n                                x,\r\n                                y - (isHorizontal ? 0 : curBarWidth),\r\n                                isHorizontal ? curBarWidth : islandR,\r\n                                isHorizontal ? islandR : curBarWidth,\r\n                                isHorizontal ? 'vertical' : 'horizontal'\r\n                            );\r\n                            barShape.hoverable = false;\r\n                            barShape.draggable = false;\r\n                            barShape.style.lineWidth = 1;\r\n                            barShape.style.brushType = 'stroke';\r\n                            barShape.style.strokeColor = serie.calculableHolderColor\r\n                                                         || this.ecTheme.calculableHolderColor\r\n                                                         || ecConfig.calculableHolderColor;\r\n\r\n                            this.shapeList.push(new RectangleShape(barShape));\r\n                        }\r\n                    }\r\n                    isHorizontal\r\n                        ? (x += (curBarWidth + barGap))\r\n                        : (y -= (curBarWidth + barGap));\r\n                }\r\n            }\r\n            \r\n            this._calculMarkMapXY(xMarkMap, locationMap, isHorizontal ? 'y' : 'x');\r\n        },\r\n        /**\r\n         * 构建类目轴为水平方向的柱形图系列\r\n         */\r\n        _buildHorizontal: function (seriesArray, maxDataLength, locationMap, xMarkMap) {\r\n            return this._buildNormal(\r\n                seriesArray, maxDataLength, locationMap, xMarkMap, 'horizontal'\r\n            );\r\n        },\r\n\r\n        /**\r\n         * 构建类目轴为垂直方向的柱形图系列\r\n         */\r\n        _buildVertical: function (seriesArray, maxDataLength, locationMap, xMarkMap) {\r\n            return this._buildNormal(\r\n                seriesArray, maxDataLength, locationMap, xMarkMap, 'vertical'\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 构建双数值轴柱形图\r\n         */\r\n        _buildOther: function (seriesArray, maxDataLength, locationMap, xMarkMap) {\r\n            var series = this.series;\r\n            \r\n            for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                    var seriesIndex = locationMap[j][m];\r\n                    var serie = series[seriesIndex];\r\n                    var xAxisIndex = serie.xAxisIndex || 0;\r\n                    var xAxis = this.component.xAxis.getAxis(xAxisIndex);\r\n                    var baseX = xAxis.getCoord(0);\r\n                    var yAxisIndex = serie.yAxisIndex || 0;\r\n                    var yAxis = this.component.yAxis.getAxis(yAxisIndex);\r\n                    var baseY = yAxis.getCoord(0);\r\n                    \r\n                    xMarkMap[seriesIndex] = xMarkMap[seriesIndex] \r\n                                            || {\r\n                                                min0: Number.POSITIVE_INFINITY,\r\n                                                min1: Number.POSITIVE_INFINITY,\r\n                                                max0: Number.NEGATIVE_INFINITY,\r\n                                                max1: Number.NEGATIVE_INFINITY,\r\n                                                sum0: 0,\r\n                                                sum1: 0,\r\n                                                counter0: 0,\r\n                                                counter1: 0,\r\n                                                average0: 0,\r\n                                                average1: 0\r\n                                            };\r\n\r\n                    for (var i = 0, l = serie.data.length; i < l; i++) {\r\n                        var data = serie.data[i];\r\n                        var value = this.getDataFromOption(data, '-');\r\n                        if (!(value instanceof Array)) {\r\n                            continue;\r\n                        }\r\n                        \r\n                        var x = xAxis.getCoord(value[0]);\r\n                        var y = yAxis.getCoord(value[1]);\r\n                        \r\n                        var queryTarget = [data, serie];\r\n                        var barWidth = this.deepQuery(queryTarget, 'barWidth') || 10; // 默认柱形\r\n                        var barHeight = this.deepQuery(queryTarget, 'barHeight');\r\n                        var orient;\r\n                        var barShape;\r\n                        \r\n                        if (barHeight != null) {\r\n                            // 条形图\r\n                            orient = 'horizontal';\r\n                            \r\n                            if (value[0] > 0) {\r\n                                // 正向\r\n                                barWidth = x - baseX;\r\n                                x -= barWidth;\r\n                            }\r\n                            else if (value[0] < 0){\r\n                                // 负向\r\n                                barWidth = baseX - x;\r\n                            }\r\n                            else {\r\n                                // 0值\r\n                                barWidth = 0;\r\n                            }\r\n                            \r\n                            barShape = this._getBarItem(\r\n                                seriesIndex, i,\r\n                                value[0],\r\n                                x, \r\n                                y - barHeight / 2,\r\n                                barWidth,\r\n                                barHeight,\r\n                                orient\r\n                            );\r\n                        }\r\n                        else {\r\n                            // 柱形\r\n                            orient = 'vertical';\r\n                            \r\n                            if (value[1] > 0) {\r\n                            // 正向\r\n                                barHeight = baseY - y;\r\n                            }\r\n                            else if (value[1] < 0){\r\n                                // 负向\r\n                                barHeight = y - baseY;\r\n                                y -= barHeight;\r\n                            }\r\n                            else {\r\n                                // 0值\r\n                                barHeight = 0;\r\n                            }\r\n                            barShape = this._getBarItem(\r\n                                seriesIndex, i,\r\n                                value[0],\r\n                                x - barWidth / 2, \r\n                                y,\r\n                                barWidth,\r\n                                barHeight,\r\n                                orient\r\n                            );\r\n                        }\r\n                        this.shapeList.push(new RectangleShape(barShape));\r\n                        \r\n                        \r\n                        x = xAxis.getCoord(value[0]);\r\n                        y = yAxis.getCoord(value[1]);\r\n                        if (xMarkMap[seriesIndex].min0 > value[0]) {\r\n                            xMarkMap[seriesIndex].min0 = value[0];\r\n                            xMarkMap[seriesIndex].minY0 = y;\r\n                            xMarkMap[seriesIndex].minX0 = x;\r\n                        }\r\n                        if (xMarkMap[seriesIndex].max0 < value[0]) {\r\n                            xMarkMap[seriesIndex].max0 = value[0];\r\n                            xMarkMap[seriesIndex].maxY0 = y;\r\n                            xMarkMap[seriesIndex].maxX0 = x;\r\n                        }\r\n                        xMarkMap[seriesIndex].sum0 += value[0];\r\n                        xMarkMap[seriesIndex].counter0++;\r\n                        \r\n                        if (xMarkMap[seriesIndex].min1 > value[1]) {\r\n                            xMarkMap[seriesIndex].min1 = value[1];\r\n                            xMarkMap[seriesIndex].minY1 = y;\r\n                            xMarkMap[seriesIndex].minX1 = x;\r\n                        }\r\n                        if (xMarkMap[seriesIndex].max1 < value[1]) {\r\n                            xMarkMap[seriesIndex].max1 = value[1];\r\n                            xMarkMap[seriesIndex].maxY1 = y;\r\n                            xMarkMap[seriesIndex].maxX1 = x;\r\n                        }\r\n                        xMarkMap[seriesIndex].sum1 += value[1];\r\n                        xMarkMap[seriesIndex].counter1++;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            this._calculMarkMapXY(xMarkMap, locationMap, 'xy');\r\n        },\r\n        \r\n        /**\r\n         * 我真是自找麻烦啊，为啥要允许系列级个性化最小宽度和高度啊！！！\r\n         * @param {CategoryAxis} categoryAxis 类目坐标轴，需要知道类目间隔大小\r\n         * @param {Array} locationMap 整形数据的系列索引\r\n         */\r\n        _mapSize: function (categoryAxis, locationMap, ignoreUserDefined) {\r\n            var res = this._findSpecialBarSzie(locationMap, ignoreUserDefined);\r\n            var barWidthMap = res.barWidthMap;\r\n            var barMaxWidthMap = res.barMaxWidthMap;\r\n            var barMinHeightMap = res.barMinHeightMap;\r\n            var sBarWidthCounter = res.sBarWidthCounter;    // 用户指定\r\n            var sBarWidthTotal = res.sBarWidthTotal;        // 用户指定\r\n            var barGap = res.barGap;\r\n            var barCategoryGap = res.barCategoryGap;\r\n            \r\n            var gap;\r\n            var barWidth;\r\n            var interval = 1;\r\n            if (locationMap.length != sBarWidthCounter) {\r\n                // 至少存在一个自适应宽度的柱形图\r\n                if (!ignoreUserDefined) {\r\n                    gap = typeof barCategoryGap === 'string' && barCategoryGap.match(/%$/)\r\n                          // 百分比\r\n                          ? ((categoryAxis.getGap() * (100 - parseFloat(barCategoryGap)) / 100).toFixed(2) - 0)\r\n                          // 数值\r\n                          : (categoryAxis.getGap() - barCategoryGap);\r\n                    if (typeof barGap === 'string' && barGap.match(/%$/)) {\r\n                        barGap = parseFloat(barGap) / 100;\r\n                        barWidth = +(\r\n                            (gap - sBarWidthTotal) / (\r\n                                (locationMap.length - 1) * barGap + locationMap.length - sBarWidthCounter\r\n                            )\r\n                        ).toFixed(2);\r\n                        barGap = barWidth * barGap;\r\n                    }\r\n                    else {\r\n                        barGap = parseFloat(barGap);\r\n                        barWidth = +(\r\n                            (gap - sBarWidthTotal - barGap * (locationMap.length - 1)) / (\r\n                                locationMap.length - sBarWidthCounter\r\n                            )\r\n                        ).toFixed(2);\r\n                    }\r\n                    // 无法满足用户定义的宽度设计，忽略用户宽度，打回重做\r\n                    if (barWidth <= 0) {\r\n                        return this._mapSize(categoryAxis, locationMap, true);\r\n                    }\r\n                }\r\n                else {\r\n                    // 忽略用户定义的宽度设定\r\n                    gap = categoryAxis.getGap();\r\n                    barGap = 0;\r\n                    barWidth = +(gap / locationMap.length).toFixed(2);\r\n                    // 已经忽略用户定义的宽度设定依然还无法满足显示，只能硬来了;\r\n                    if (barWidth <= 0) {\r\n                        interval = Math.floor(locationMap.length / gap);\r\n                        barWidth = 1;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // 全是自定义宽度，barGap无效，系列间隔决定barGap\r\n                gap = sBarWidthCounter > 1\r\n                      ? (typeof barCategoryGap === 'string' && barCategoryGap.match(/%$/))\r\n                          // 百分比\r\n                          ? +(categoryAxis.getGap() * (100 - parseFloat(barCategoryGap)) / 100).toFixed(2)\r\n                          // 数值\r\n                          : (categoryAxis.getGap() - barCategoryGap)\r\n                      // 只有一个\r\n                      : sBarWidthTotal;\r\n                barWidth = 0;\r\n                barGap = sBarWidthCounter > 1 \r\n                         ? +((gap - sBarWidthTotal) / (sBarWidthCounter - 1)).toFixed(2)\r\n                         : 0;\r\n                if (barGap < 0) {\r\n                    // 无法满足用户定义的宽度设计，忽略用户宽度，打回重做\r\n                    return this._mapSize(categoryAxis, locationMap, true);\r\n                }\r\n            }\r\n            \r\n            // 检查是否满足barMaxWidthMap\r\n            \r\n            return this._recheckBarMaxWidth(\r\n                locationMap,\r\n                barWidthMap, barMaxWidthMap, barMinHeightMap,\r\n                gap,   // 总宽度\r\n                barWidth, barGap, interval\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 计算堆积下用户特殊指定的各种size \r\n         */\r\n        _findSpecialBarSzie: function(locationMap, ignoreUserDefined) {\r\n            var series = this.series;\r\n            var barWidthMap = {};\r\n            var barMaxWidthMap = {};\r\n            var barMinHeightMap = {};\r\n            var sBarWidth;              // 用户指定\r\n            var sBarMaxWidth;           // 用户指定\r\n            var sBarWidthCounter = 0;   // 用户指定\r\n            var sBarWidthTotal = 0;     // 用户指定\r\n            var barGap;\r\n            var barCategoryGap;\r\n            for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                var hasFound = {\r\n                    barWidth: false,\r\n                    barMaxWidth: false\r\n                };\r\n                for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                    var seriesIndex = locationMap[j][m];\r\n                    var queryTarget = series[seriesIndex];\r\n                    if (!ignoreUserDefined) {\r\n                        if (!hasFound.barWidth) {\r\n                            sBarWidth = this.query(queryTarget, 'barWidth');\r\n                            if (sBarWidth != null) {\r\n                                // 同一堆积第一个生效barWidth\r\n                                barWidthMap[seriesIndex] = sBarWidth;\r\n                                sBarWidthTotal += sBarWidth;\r\n                                sBarWidthCounter++;\r\n                                hasFound.barWidth = true;\r\n                                // 复位前面同一堆积但没被定义的\r\n                                for (var ii = 0, ll = m; ii < ll; ii++) {\r\n                                    var pSeriesIndex = locationMap[j][ii];\r\n                                    barWidthMap[pSeriesIndex] = sBarWidth;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            barWidthMap[seriesIndex] = sBarWidth;   // 用找到的一个\r\n                        }\r\n                        \r\n                        if (!hasFound.barMaxWidth) {\r\n                            sBarMaxWidth = this.query(queryTarget, 'barMaxWidth');\r\n                            if (sBarMaxWidth != null) {\r\n                                // 同一堆积第一个生效barMaxWidth\r\n                                barMaxWidthMap[seriesIndex] = sBarMaxWidth;\r\n                                hasFound.barMaxWidth = true;\r\n                                // 复位前面同一堆积但没被定义的\r\n                                for (var ii = 0, ll = m; ii < ll; ii++) {\r\n                                    var pSeriesIndex = locationMap[j][ii];\r\n                                    barMaxWidthMap[pSeriesIndex] = sBarMaxWidth;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            barMaxWidthMap[seriesIndex] = sBarMaxWidth;   // 用找到的一个\r\n                        }\r\n                    }\r\n\r\n                    barMinHeightMap[seriesIndex] = this.query(queryTarget, 'barMinHeight');\r\n                    barGap = barGap != null ? barGap : this.query(queryTarget, 'barGap');\r\n                    barCategoryGap = barCategoryGap != null \r\n                                     ? barCategoryGap : this.query(queryTarget, 'barCategoryGap');\r\n                }\r\n            }\r\n            \r\n            return {\r\n                barWidthMap: barWidthMap,\r\n                barMaxWidthMap: barMaxWidthMap,\r\n                barMinHeightMap: barMinHeightMap,\r\n                sBarWidth: sBarWidth,\r\n                sBarMaxWidth: sBarMaxWidth,\r\n                sBarWidthCounter: sBarWidthCounter,\r\n                sBarWidthTotal: sBarWidthTotal,\r\n                barGap: barGap,\r\n                barCategoryGap: barCategoryGap\r\n            };\r\n        },\r\n        \r\n        /**\r\n         * 检查是否满足barMaxWidthMap \r\n         */\r\n        _recheckBarMaxWidth: function(\r\n                locationMap,\r\n                barWidthMap, barMaxWidthMap, barMinHeightMap,\r\n                gap,   // 总宽度\r\n                barWidth, barGap, interval\r\n        ) {\r\n            for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                var seriesIndex = locationMap[j][0];\r\n                if (barMaxWidthMap[seriesIndex] && barMaxWidthMap[seriesIndex] < barWidth) {\r\n                    // 不满足最大宽度\r\n                    gap -= barWidth - barMaxWidthMap[seriesIndex]; // 总宽度减少\r\n                }\r\n            }\r\n            \r\n            return {\r\n                barWidthMap: barWidthMap,\r\n                barMaxWidthMap: barMaxWidthMap,\r\n                barMinHeightMap: barMinHeightMap ,\r\n                gap: gap,   // 总宽度\r\n                barWidth: barWidth,\r\n                barGap: barGap,\r\n                interval: interval\r\n            };\r\n        },\r\n        \r\n        /**\r\n         * 生成最终图形数据\r\n         */\r\n        _getBarItem: function (seriesIndex, dataIndex, name, x, y, width, height, orient) {\r\n            var series = this.series;\r\n            var barShape;\r\n            var serie = series[seriesIndex];\r\n            var data = serie.data[dataIndex];\r\n            // 多级控制\r\n            var defaultColor = this._sIndex2ColorMap[seriesIndex];\r\n            var queryTarget = [data, serie];\r\n            \r\n            var normal = this.deepMerge(queryTarget, 'itemStyle.normal');\r\n            var emphasis = this.deepMerge(queryTarget, 'itemStyle.emphasis');\r\n            var normalBorderWidth = normal.barBorderWidth;\r\n            \r\n            barShape = {\r\n                zlevel: serie.zlevel,\r\n                z: serie.z,\r\n                clickable: this.deepQuery(queryTarget, 'clickable'),\r\n                style: {\r\n                    x: x,\r\n                    y: y,\r\n                    width: width,\r\n                    height: height,\r\n                    brushType: 'both',\r\n                    color: this.getItemStyleColor(\r\n                        this.deepQuery(queryTarget, 'itemStyle.normal.color') || defaultColor,\r\n                        seriesIndex, dataIndex, data\r\n                    ),\r\n                    radius: normal.barBorderRadius,\r\n                    lineWidth: normalBorderWidth,\r\n                    strokeColor: normal.barBorderColor\r\n                },\r\n                highlightStyle: {\r\n                    color: this.getItemStyleColor(\r\n                        this.deepQuery(queryTarget, 'itemStyle.emphasis.color'),\r\n                        seriesIndex, dataIndex, data\r\n                    ),\r\n                    radius: emphasis.barBorderRadius,\r\n                    lineWidth: emphasis.barBorderWidth,\r\n                    strokeColor: emphasis.barBorderColor\r\n                },\r\n                _orient: orient\r\n            };\r\n            var barShapeStyle = barShape.style;\r\n            barShape.highlightStyle.color = barShape.highlightStyle.color\r\n                            || (typeof barShapeStyle.color === 'string'\r\n                                ? zrColor.lift(barShapeStyle.color, -0.3)\r\n                                : barShapeStyle.color\r\n                               );\r\n            //亚像素优化\r\n            barShapeStyle.x = Math.floor(barShapeStyle.x);\r\n            barShapeStyle.y = Math.floor(barShapeStyle.y);\r\n            barShapeStyle.height = Math.ceil(barShapeStyle.height);\r\n            barShapeStyle.width = Math.ceil(barShapeStyle.width);\r\n            // 考虑线宽的显示优化\r\n            if (normalBorderWidth > 0\r\n                && barShapeStyle.height > normalBorderWidth\r\n                && barShapeStyle.width > normalBorderWidth\r\n            ) {\r\n                barShapeStyle.y += normalBorderWidth / 2;\r\n                barShapeStyle.height -= normalBorderWidth;\r\n                barShapeStyle.x += normalBorderWidth / 2;\r\n                barShapeStyle.width -= normalBorderWidth;\r\n            }\r\n            else {\r\n                // 太小了或者线宽小于0，废了边线\r\n                barShapeStyle.brushType = 'fill';\r\n            }\r\n            \r\n            barShape.highlightStyle.textColor = barShape.highlightStyle.color;\r\n            \r\n            barShape = this.addLabel(barShape, serie, data, name, orient);\r\n            var barShapeStyleList = [                    // normal emphasis都需要检查\r\n                barShapeStyle,\r\n                barShape.highlightStyle\r\n            ];\r\n            for (var i = 0, l = barShapeStyleList.length; i < l; i++) {\r\n                var textPosition = barShapeStyleList[i].textPosition;\r\n                if (textPosition === 'insideLeft'\r\n                    || textPosition === 'insideRight'\r\n                    || textPosition === 'insideTop'\r\n                    || textPosition === 'insideBottom'\r\n                ) {\r\n                    var gap = 5;\r\n                    switch (textPosition) {\r\n                        case 'insideLeft':\r\n                            barShapeStyleList[i].textX = barShapeStyle.x + gap;\r\n                            barShapeStyleList[i].textY = barShapeStyle.y + barShapeStyle.height / 2;\r\n                            barShapeStyleList[i].textAlign = 'left';\r\n                            barShapeStyleList[i].textBaseline = 'middle';\r\n                            break;\r\n                        case 'insideRight':\r\n                            barShapeStyleList[i].textX = barShapeStyle.x + barShapeStyle.width - gap;\r\n                            barShapeStyleList[i].textY = barShapeStyle.y + barShapeStyle.height / 2;\r\n                            barShapeStyleList[i].textAlign = 'right';\r\n                            barShapeStyleList[i].textBaseline = 'middle';\r\n                            break;\r\n                        case 'insideTop':\r\n                            barShapeStyleList[i].textX = barShapeStyle.x + barShapeStyle.width / 2;\r\n                            barShapeStyleList[i].textY = barShapeStyle.y + gap / 2;\r\n                            barShapeStyleList[i].textAlign = 'center';\r\n                            barShapeStyleList[i].textBaseline = 'top';\r\n                            break;\r\n                        case 'insideBottom':\r\n                            barShapeStyleList[i].textX = barShapeStyle.x + barShapeStyle.width / 2;\r\n                            barShapeStyleList[i].textY = barShapeStyle.y + barShapeStyle.height - gap / 2;\r\n                            barShapeStyleList[i].textAlign = 'center';\r\n                            barShapeStyleList[i].textBaseline = 'bottom';\r\n                            break;\r\n                    }\r\n                    barShapeStyleList[i].textPosition = 'specific';\r\n                    barShapeStyleList[i].textColor = barShapeStyleList[i].textColor || '#fff';\r\n                }\r\n            }\r\n            \r\n\r\n            if (this.deepQuery([data, serie, this.option],'calculable')) {\r\n                this.setCalculable(barShape);\r\n                barShape.draggable = true;\r\n            }\r\n\r\n            ecData.pack(\r\n                barShape,\r\n                series[seriesIndex], seriesIndex,\r\n                series[seriesIndex].data[dataIndex], dataIndex,\r\n                name\r\n            );\r\n\r\n            return barShape;\r\n        },\r\n\r\n        // 位置转换\r\n        getMarkCoord: function (seriesIndex, mpData) {\r\n            var serie = this.series[seriesIndex];\r\n            var xMarkMap = this.xMarkMap[seriesIndex];\r\n            var xAxis = this.component.xAxis.getAxis(serie.xAxisIndex);\r\n            var yAxis = this.component.yAxis.getAxis(serie.yAxisIndex);\r\n            var dataIndex;\r\n            var pos;\r\n            if (mpData.type\r\n                && (mpData.type === 'max' || mpData.type === 'min' || mpData.type === 'average')\r\n            ) {\r\n                // 特殊值内置支持\r\n                var valueIndex = mpData.valueIndex != null \r\n                                 ? mpData.valueIndex \r\n                                 : xMarkMap.maxX0 != null \r\n                                   ? '1' : '';\r\n                pos = [\r\n                    xMarkMap[mpData.type + 'X' + valueIndex],\r\n                    xMarkMap[mpData.type + 'Y' + valueIndex],\r\n                    xMarkMap[mpData.type + 'Line' + valueIndex],\r\n                    xMarkMap[mpData.type + valueIndex]\r\n                ];\r\n            }\r\n            else if (xMarkMap.isHorizontal) {\r\n                // 横向\r\n                dataIndex = typeof mpData.xAxis === 'string' && xAxis.getIndexByName\r\n                            ? xAxis.getIndexByName(mpData.xAxis)\r\n                            : (mpData.xAxis || 0);\r\n                \r\n                var x = xMarkMap[dataIndex];\r\n                x = x != null\r\n                    ? x \r\n                    : typeof mpData.xAxis != 'string' && xAxis.getCoordByIndex\r\n                      ? xAxis.getCoordByIndex(mpData.xAxis || 0)\r\n                      : xAxis.getCoord(mpData.xAxis || 0);\r\n                \r\n                pos = [x, yAxis.getCoord(mpData.yAxis || 0)];\r\n            }\r\n            else {\r\n                // 纵向\r\n                dataIndex = typeof mpData.yAxis === 'string' && yAxis.getIndexByName\r\n                            ? yAxis.getIndexByName(mpData.yAxis)\r\n                            : (mpData.yAxis || 0);\r\n                \r\n                var y = xMarkMap[dataIndex];\r\n                y = y != null\r\n                    ? y\r\n                    : typeof mpData.yAxis != 'string' && yAxis.getCoordByIndex\r\n                      ? yAxis.getCoordByIndex(mpData.yAxis || 0)\r\n                      : yAxis.getCoord(mpData.yAxis || 0);\r\n                \r\n                pos = [xAxis.getCoord(mpData.xAxis || 0), y];\r\n            }\r\n            \r\n            return pos;\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.series = newOption.series;\r\n            }\r\n            \r\n            this.backupShapeList();\r\n            this._buildShape();\r\n        },\r\n        \r\n        /**\r\n         * 动态数据增加动画 \r\n         */\r\n        addDataAnimation: function (params, done) {\r\n            var series = this.series;\r\n            var aniMap = {}; // seriesIndex索引参数\r\n            for (var i = 0, l = params.length; i < l; i++) {\r\n                aniMap[params[i][0]] = params[i];\r\n            }\r\n            var x;\r\n            var dx;\r\n            var y;\r\n            var dy;\r\n            var serie;\r\n            var seriesIndex;\r\n            var dataIndex;\r\n\r\n            var aniCount = 0;\r\n            function animationDone() {\r\n                aniCount--;\r\n                if (aniCount === 0) {\r\n                    done && done();\r\n                }\r\n            }\r\n            for (var i = this.shapeList.length - 1; i >= 0; i--) {\r\n                seriesIndex = ecData.get(this.shapeList[i], 'seriesIndex');\r\n                if (aniMap[seriesIndex] && !aniMap[seriesIndex][3]) {\r\n                    // 有数据删除才有移动的动画\r\n                    if (this.shapeList[i].type === 'rectangle') {\r\n                        // 主动画\r\n                        dataIndex = ecData.get(this.shapeList[i], 'dataIndex');\r\n                        serie = series[seriesIndex];\r\n                        if (aniMap[seriesIndex][2] && dataIndex === serie.data.length - 1) {\r\n                            // 队头加入删除末尾\r\n                            this.zr.delShape(this.shapeList[i].id);\r\n                            continue;\r\n                        }\r\n                        else if (!aniMap[seriesIndex][2] && dataIndex === 0) {\r\n                            // 队尾加入删除头部\r\n                            this.zr.delShape(this.shapeList[i].id);\r\n                            continue;\r\n                        }\r\n                        if (this.shapeList[i]._orient === 'horizontal') {\r\n                            // 条形图\r\n                            dy = this.component.yAxis.getAxis(serie.yAxisIndex || 0).getGap();\r\n                            y = aniMap[seriesIndex][2] ? -dy : dy;\r\n                            x = 0;\r\n                        }\r\n                        else {\r\n                            // 柱形图\r\n                            dx = this.component.xAxis.getAxis(serie.xAxisIndex || 0).getGap();\r\n                            x = aniMap[seriesIndex][2] ? dx : -dx;\r\n                            y = 0;\r\n                        }\r\n                        this.shapeList[i].position = [0, 0];\r\n\r\n                        aniCount++;\r\n                        this.zr.animate(this.shapeList[i].id, '')\r\n                            .when(\r\n                                this.query(this.option, 'animationDurationUpdate'),\r\n                                { position: [x, y] }\r\n                            )\r\n                            .done(animationDone)\r\n                            .start();\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // 没有动画\r\n            if (!aniCount) {\r\n                done && done();\r\n            }\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Bar, ChartBase);\r\n    \r\n    // 图表注册\r\n    require('../chart').define('bar', Bar);\r\n    \r\n    return Bar;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/src/chart/bar.js\n ** module id = 93\n ** module chunks = 0\n **/"],"sourceRoot":""}